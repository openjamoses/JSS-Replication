3bf3a07b58650fe2ed4cd3dc6517d741562e1249|2020-09-30|Eduard Valeyev|Merge pull request #193 from bmwiedemann/sort
1400bf560a86a9066eb6c6eb4ef137c6c48f3bf7|2020-09-30|Bernhard M. Wiedemann|Sort input file list
6ae4b30e630bbf115ad4daf346e4363ddd682f84|2020-09-29|Eduard Valeyev|Merge remote-tracking branch 'origin/master' into master
c33da080ee54450c8f635d0bdd4d13422208200e|2020-09-29|Eduard Valeyev|include PR 149 in the list of CHANGES for 2.7.0-beta.2
3488c7cdcd40d7c3130dbc9303e1bbd06f3e845a|2020-08-18|Eduard Valeyev|Merge pull request #186 from susilehtola/susilehtola-patch-2
d4758f69d62d81eed116428b3e61a71b727f7a86|2020-08-18|Eduard Valeyev|Merge pull request #185 from susilehtola/susilehtola-patch-1
31a3361b939ee2d367847c00b716a7c3f44c6de1|2020-08-17|Susi Lehtola|Remove unnecessary(?) include altogether
3f4b0740697998005c7328dd4fe4939ac15e6d10|2020-08-15|Susi Lehtola|Fix include file location in fortran_example
577e6dcfe20f68c3ff896ec9f68f9a031144107b|2020-08-15|Susi Lehtola|Fix INCLUDE_ERI >= 2 case in Fortran example
8090e28fb2677c1292b39ff0cdc5154f487e418b|2020-08-07|Eduard Valeyev|fixup
b94d7b631653f29230dbe4961c708248bd497727|2020-07-29|Eduard Valeyev|added precision test for 2nd-deriv ERI over tight d's from @githubxsli
73e4001dd0d3107186ff8f2f2b623296e680c158|2020-07-29|Eduard Valeyev|reference eri() works correctly with norm_flag=1 and uses high-precision value for π
db5d9c9e943fc4404fd542e3437ee9210b489d4f|2020-07-07|Eduard Valeyev|amended https://github.com/evaleev/libint/pull/166
015403738820f6079a328162b38ef9442140117f|2020-07-07|Eduard Valeyev|Merge branch 'master' of github.com:evaleev/libint
1d5d270450e364f55c0c12688193f63e2d80025a|2020-07-07|Eduard Valeyev|ready for 2.7.0-beta.6 ... ?
cf4ca4bbac799338a613a52287ae90933d0beb08|2020-07-07|Eduard Valeyev|Merge pull request #166 from e-kwsm/namespace
8a7a0c2bbdd9d9a1707623bec32e5428027bb466|2020-07-07|Eduard Valeyev|Merge pull request #169 from e-kwsm/eigen
1610551038a13285b58f19ad16ee363aecc6e231|2020-04-16|Eisuke Kawashima|Remove `using namespace std;` in headers
11d55219a975a4136442ab5cd35f25007341a135|2020-06-02|Eduard Valeyev|[cmake] namespace all libint test and fixture names
3f7d77fb21c0ddcaff76f4c0e21881fc42db4d21|2020-05-25|Eduard Valeyev|library names are reverted to libint2.<suffix>
7a9ef4b51ff773f30bd7491aea333c1ab6dac304|2020-05-05|Eduard Valeyev|fixed molden pbc exporter to not float except for 1- and 2-d crystals
7c94bf2c34310ce43a5de80fd8ff03adb5bbbcb1|2020-04-17|Eisuke Kawashima|Change Eigen download link
43631f70f44b036ddfa5b40a15d3c9c19721b315|2020-04-02|Eduard Valeyev|attempt to reduce the compilation noise in the generated code by wrapping into pragmas
1e8b40d6a20ed9a35aa6513a45c9a9581a073813|2020-04-02|Eduard Valeyev|[travis] added missing Threads::Threads for the hf++ example out-of-tree test (why, clang, why?)
9677bf6367d27ab721d5c063d34fd10be693e858|2020-04-01|Eduard Valeyev|amended b2941b2c6a844b15e2c2bea648f9863e3ffa17df
b2941b2c6a844b15e2c2bea648f9863e3ffa17df|2020-04-01|Eduard Valeyev|removed support for autotools build of exported lib
08e2217bad5475d5be349e066c6dfb9c849c56ca|2020-04-01|Eduard Valeyev|[docker] docker.md -> docker-travis.md [skip ci]
30377708dc9bbcadae95c83cfd81c972cc514bfb|2020-04-01|Eduard Valeyev|[docker] upgrade to bionic, retired gcc-5, added gcc-9 and clang-8
9415d559717740475a88ef4bfd2a9dec1a0845d1|2020-04-01|Eduard Valeyev|bumped release date for 2.7.0-beta.5 [skip ci]
0596a974fce82a2313a29eb30f5c5c2917c155f3|2020-04-01|Eduard Valeyev|CMAKE_{SOURCE,BINARY}_DIR -> PROJECT_{SOURCE,BINARY}_DIR
b8960dbcc4e68c14bb9c41f600dde33aac63bd45|2020-04-01|Eduard Valeyev|"canonicalized" production and use of Fortran modules, per https://cmake.org/pipermail/cmake/2019-April/069258.html , with some additional info at https://stackoverflow.com/questions/43917443/fortran-module-files-not-found-by-cmake
3795a2f2d099e09cfc779bf6448e5ad203fd6da3|2020-04-01|Eduard Valeyev|define alias targets in libint2-config more carefully + switch to the use of imported Threads::Threads target
4f3c901e865676ce819928e8c4c9fad4cf6034f3|2020-04-01|Eduard Valeyev|__COMPILING_LIBINT2 is defined as build-only definition for libint2{,-static}
6d27b3c6c8592343c6bd90347d5f30bdbe6b85a8|2020-04-01|Eduard Valeyev|amended db68b16247e1d263e20f9c6a190b52fef1adc2ec
db68b16247e1d263e20f9c6a190b52fef1adc2ec|2020-04-01|Eduard Valeyev|amended the hf testing script to differentiate test and file name
7791ea87e7a72e62ecec0ae711cb22dda6e500b1|2020-04-01|Eduard Valeyev|amended a82243b3f93110e3494309404b7c5c9f8cb4e13c
2a365e29db4df4ba2d67aaf1d9a2a48f808ac543|2020-04-01|Eduard Valeyev|minor build_libint2 text formatting fixup
a82243b3f93110e3494309404b7c5c9f8cb4e13c|2020-04-01|Eduard Valeyev|until https://gitlab.kitware.com/cmake/cmake/issues/16414 is resolved we must manually "namespace" target names in subprojectable cmake projects. N.B. the fortran module is not renamed, should be OK since is not an actual target
c142dc6ac2e743667cb232040e4934e85c07c55e|2020-03-31|Eduard Valeyev|bump to 2.7.0-beta.5
bbf7b60017af55fd755f88732b44b0121935b445|2020-03-31|Eduard Valeyev|made usable as a cmake subproject
0f2cc61fac821505fd5a2a7eedfdffa35ca75552|2020-03-01|Eduard Valeyev|ready to bump to 2.7.0-beta.4
e1d63aa480c419b177e69ce5ba33436063e6c9c4|2020-03-01|Eduard Valeyev|updated CHANGES with PR #159 [skip ci]
efce6dc694228a12ecdcb6e70bd0bccbb7706552|2020-03-01|Eduard Valeyev|Merge remote-tracking branch 'origin/master'
014832542a44eb838df14e2cd844bd3dded041fb|2020-03-01|Eduard Valeyev|dox fixup
0b488814957e1e23746b69e77a4bbffaeb11ca6a|2020-03-01|Eduard Valeyev|added missing init() to per-element basis set ctor ... resolves #164 (hat tip @swillow)
e88710d9b420733638dded70cb068ee6ca29917c|2020-02-14|Eduard Valeyev|Merge pull request #159 from loriab/patch-1
eab4d0adda8c5df2f0d4df0d940ef2c8b651c5a0|2020-01-30|Lori A. Burns|Update CMakeLists.txt.export
9a8162a099c2ed51bb0a01bd277af8ad34066f97|2020-01-29|Eduard Valeyev|amended the rest of reference data for hf and hf++ tests due to switch to codata2018
3d556ee5e0fa6402ce02cb459c5141b37c951fd7|2020-01-29|Eduard Valeyev|amended nuclear focre reference for hf++ test due to switch to codata2018
9d1821bc762936e45f831650bae7376f491d95ac|2020-01-29|Eduard Valeyev|replaced unicode identifiers with ascii equivalents
6d5500ecbf3ade2cbe37fb63bf900dfb618626ed|2020-01-29|Eduard Valeyev|resolved flt precision issue in test-util.cc [ namely a/b != a*(1/b) ]
1fa5599f35072bcdc8b30358fc8a04cc0acf3ca1|2020-01-29|Eduard Valeyev|amended reference hf++ energy due to the switch to 2018 CODATA constants
e83fe9f95ed28c0df590bbd5f158805089685622|2020-01-29|Eduard Valeyev|amended CHANGES to inform that Eigen is required by default [skip ci]
b7dbc49cf1785d990a38ce5157c4c8fa84e75393|2020-01-29|Eduard Valeyev|- eigen is required by default, added cmake variable REQUIRE_CXX_API to disable searching for eigen - updated dox + wiki
e516bc7d1bdf76e6326dfb933c5abd3705b72df4|2020-01-29|Eduard Valeyev|fixed redefaultable_option
a4a81a46c998b9c7c64dfbca353e47c2185c69b9|2020-01-29|Eduard Valeyev|fixed dox typo [skip ci] (HT: github.com/javierelpianista )
92f5b9c8ab977616bb26605014a07084f4bef111|2020-01-29|Eduard Valeyev|version bump to libint-2.7.0-beta.3
969cc736ba5a7aa4d9f516a3d64e2a8f924f38b1|2020-01-29|Eduard Valeyev|Eigen search is more robust, checks for false-positives. Resolves #158
e88cba17bbff24cbb0a3b95e638f0707da7707f2|2020-01-27|Eduard Valeyev|fixed redefaultable option (copy of https://github.com/ValeevGroup/tiledarray/commit/992e0795ef16d627ade3261c971bf08ae209a199)
a6b127bdc3319a9a6f3b5ab9b14b3aabd5c09d3a|2020-01-01|Eduard Valeyev|happy 2020!
f2b7f0f1c222cbc6dadcbf5d8620fa665b868b17|2019-11-26|Eduard Valeyev|non-PBC Molden exporter revrted to the use of AU
2e008494132108c052344a1a0672a3d8512a2562|2019-11-26|Eduard Valeyev|Molden exporters produce coordinates in angstroms
43453d978ec81b85168acf1e4b9241ca632dd081|2019-11-26|Eduard Valeyev|added 2018 CODATA bohr2angstrom, made the default
d8e249a8cfb80247797c66c90caafbafa184edbc|2019-11-26|Eduard Valeyev|Molden Cell Axes units keyword fixed
4e85876d32e3dfcb16e90f7531080ceca86089a7|2019-11-26|Eduard Valeyev|building tests requires defining __COMPILING_LIBINT2 also
8cf386f78254f75000085a46ccc6d7f515429870|2019-11-26|Eduard Valeyev|included fix for #144 into 2.7.0-beta.2
3fad90ef776ef4f21f731398d3be8574cdb730a7|2019-11-26|Eduard Valeyev|if for compiler SRCDIR=BUILDDIR remove compiler artifacts when exporting library, resolves #144
3440532b989bb5e7e7eb1ed26b09a317de6a67b7|2019-11-25|Eduard Valeyev|ready to drop 2.7.0-beta.2
0eb9597fed11215aedeeb3e55cf6ab61d96c074c|2019-11-25|Eduard Valeyev|amended 444e4f031c920900bca1f0486f7d0cafa04e8825
444e4f031c920900bca1f0486f7d0cafa04e8825|2019-11-25|Eduard Valeyev|Engine move copy/assignment will leave the argument in an unusable (but valid) state to be safe
68d6a18e4cb9f90d60d11c9a01e85f07cecd443e|2019-11-06|Eduard Valeyev|Merge remote-tracking branch 'origin/master'
4dfaabf3cb761f07ee7c31f194c64a82bdca166f|2019-11-06|Eduard Valeyev|Engine move copy/assignment will leave the argument in an unusable (but valid) state to be safe
738843674414fed9f16a5c1b9efa62148b44cf6b|2019-10-04|Eduard Valeyev|Merge pull request #149 from loriab/patch-1
ef04e4e4215bd93ae31cff682daeeefbe4e356fa|2019-10-04|Eduard Valeyev|int2 libraries did not inherit compile features from int2-obj, resolves
36e61e6b5a5bbc779b89badb79b8e034ed3fc4c4|2019-10-03|Lori A. Burns|Update build_libint.cc
668b10c4bdca5876984058742d4212675eb93f3f|2019-08-19|Eduard Valeyev|Update CHANGES
e4904bb3025351874165f0c3babb4e6e27181a00|2019-08-19|Eduard Valeyev|#define M_PI if missing in c-api.c
46ae28598361467f06caa5cfb0c95a46c7110908|2019-08-18|Eduard Valeyev|adding wiki as a submodule, attempt # 2 (HT https://stackoverflow.com/questions/40841882/automatically-access-git-submodules-via-ssh-or-https)
93f3cfa97055a0696974fb78d5f8e2471fad70c0|2019-08-09|Eduard Valeyev|{set_}scale -> prescale{d}_by
309f18a2123129fff2d40684544a4ec1ff4b0789|2019-08-09|Eduard Valeyev|Merge remote-tracking branch 'origin/master'
c1a5c3521decaebfb1e00092a9c0d59bb3518644|2019-08-09|Eduard Valeyev|format fixup
a806c82003f48422c6d610da83682fd1d508cc4f|2019-08-09|Eduard Valeyev|ready for 2.7.0-beta.1
8f5d1c73530f2fc51116970cb503f2abc34433b0|2019-08-09|Eduard Valeyev|Merge pull request #141 from francesco-bosia/master
6797aedb6e51ad1eaf9c665ac6d730e1769a7100|2019-08-09|Eduard Valeyev|Added Engine::{set_}scale()
c22628296c9e45f64e06e1d6e7d94a2bc1f0c0f0|2019-08-07|Francesco Bosia|Merge branch 'master' into master
d496cc9b51827b8c13e9f8e274338fd3eee7c36a|2019-08-07|Eduard Valeyev|Merge pull request #142 from pseewald/fix-cmake
8644fb7b74bbbbbd08a16d6a12d2f07ce9382ea6|2019-08-07|Patrick Seewald|Fix CMake build of Fortran interface
4ef5093b4213e606e6b814e409ea5f4bab473142|2019-08-02|fbosia|Modified unreadable if(TARGET int2_static) with more sensible and equivalent if(LIBINT2_BUILD_SHARED_AND_STATIC_LIBS) in cmake project.
55b41f3ae337eb7d54094880cb44e19215637c02|2019-08-02|fbosia|Merge branch 'master' of https://github.com/francesco-bosia/libint
acc3929b4b9516959d650e22a1400d356d43426a|2019-08-02|fbosia|Modified unreadable if(TARGET int2_static) with more sensible and equivalent flag for compiling both library variants in cmake project.
16b9b79f23407128cea1a25891ce9b892a27be23|2019-08-02|fbosia|Add redefaultable option LIBINT2_BUILD_STATIC_AND_SHARED, split single library variant compilation from one-shot compilation of the two library variants
a99a7541811dc6c727df1942548c034464b40ae1|2019-08-02|fbosia|Removed PIC when not needed, added option to build 1-shot SHARED and STATIC targets and subsequent logic.
504e454bce5e558daa03a79daf53718aa5b228df|2019-07-31|fbosia|Modified export cmake to produce correctly static and shared library, fixed interface includes.
0feff9d1fd3e4d40387eb10475b544a32e15ee15|2019-07-30|fbosia|Fixed CMakeLists.txt to compile a shared and a static int2 library
62245b0c68ac37110462bcd821e998be135c45bf|2019-07-23|Eduard Valeyev|libint_f dependency computation seemed to explode memory consumption by cmake, attempt to fix
daf2b7f355538f1e8af4512f3d5bac3ab6495e2f|2019-07-23|Eduard Valeyev|ready to ship 2.6.0?
28d5dab3d46e0f39a6417780e072bf62f6d42c4a|2019-07-23|Eduard Valeyev|unit tests switched to use of fixtures, fixes global var initialization order issue
31f9ed0bf0fa864b1c8c6ed74fe475201cf65195|2019-07-23|Eduard Valeyev|before initialize() verbose() returns false
559e76b46ea3d01836559f0215a939c6302bda8c|2019-07-23|Eduard Valeyev|use of uninitialized value
93bdc61136655928d2addaccaa991581bda4f2aa|2019-07-23|Eduard Valeyev|[travis] cmake build of exported lib uses BUILD_TYPE
8c8e369ec8180b5ba1ae6ea5be2728f4fcb66cd5|2019-07-22|Eduard Valeyev|Amended 2.6.0-beta.7
62d688f6f1e31db29b02acfdac4ed33d9665d3f7|2019-07-22|Eduard Valeyev|reverted d157359d5ec7518f804ece359079fd36cf831709 in hartree-fock++.cc
10a362bf9df3992961cb9a8f0a3ea15350e21360|2019-07-22|Eduard Valeyev|bump to 2.6.0-beta.7
288a1ed9b0d75875e851e900074668fad7cf0fb4|2019-07-22|Eduard Valeyev|amended unit tests to work with barebones libs
52cfddbfa4da93b66c6354fccef748ceb68ed2ec|2019-07-22|Eduard Valeyev|updated CHANGES for 2.6.0-beta.7
e8a0230b20cc5d149cc686fb8422530f7463e162|2019-07-22|Eduard Valeyev|amended d157359d5ec7518f804ece359079fd36cf831709
3cbca3713f6adac4f90b3d010c02dc4a1320863c|2019-07-22|Eduard Valeyev|amended d157359d5ec7518f804ece359079fd36cf831709
24e6ee9f1649444c930aa42e9f2aac25b22b5111|2019-07-22|Eduard Valeyev|libint2::initialize() turns off diagnostics by default
d157359d5ec7518f804ece359079fd36cf831709|2019-07-22|Eduard Valeyev|can configure where the verbose output will go
7d0ec4066eb33b5efcff2997b2e734ba24d02035|2019-07-22|Eduard Valeyev|amended 2-body ints unit test to compute max nprim/l correctly
70550685852eccd4722484614266f777e163e394|2019-07-22|Eduard Valeyev|extracted+deprecated static BasisSet::max_* members
af733292d3865918821b486330b489b91550a7d3|2019-07-20|Eduard Valeyev|improved unit tests of exponential ints
060dc9c20f48ae9bdb53f4059fd6da7fe4d1341d|2019-07-20|Eduard Valeyev|fixed low precision U map in 77259af059057f2892efd5a494d490cd46d0e8ec
8e26a1538f60f53ecbff5f6f7a538633ad1b7704|2019-07-20|Eduard Valeyev|improved precision of ShellPair::init for concentric shells
57512bed271a67723bc496e51a834758fcaacf60|2019-07-20|Eduard Valeyev|amended dispatch logic in TennoGm{0,-1} computation
7647299742868ce7c7ee5000214966d5f874c922|2019-07-16|Eduard Valeyev|removed git submodule for the wiki
c8650a6f446c670d919a62e117b4792342afeff0|2019-07-15|Eduard Valeyev|Update CHANGES
d537161e2473f1a9e6f72f6c35c5a0e124fdf2e6|2019-07-15|Eduard Valeyev|Merge pull request #138 from pseewald/cmake-fortran
5c52f4490954d72ddd84b6e772ab2a5453b06094|2019-07-15|Eduard Valeyev|disable wiki submodule to avoid travis build issues
478e67e0d56b4ec610ccc9fb54aad90d656dd7c4|2019-07-15|Eduard Valeyev|slight tweak to make it explicit that only building libint_f requires includes (+ in case fortran modules become installable targets in the future)
820d3a3f209ff8855ee3d67f598c1cd732324137|2019-07-15|Patrick Seewald|fix #136 (out-of-tree builds with Fortran)
af9e0fe19b25782d1865448fcfc9ab7da27240d6|2019-07-12|Eduard Valeyev|updated CHANGES
42c32d4a6ef081136cf5de650b16498e4644a2b1|2019-07-12|Eduard Valeyev|added the Libint wiki as a submodule (see doc/wiki)
5f93140ee15c8779dd0e17cd3e38dc318cdbeb89|2019-07-12|Eduard Valeyev|verbosity control now works correctly.
b85c0b27d435a858fb6694d666a95d45ea762433|2019-07-11|Eduard Valeyev|added Molpro-sourced (via Psi4) (aug-)cc-pVXZ-JKFIT bases
8b1f60183e2f7e915a19c2afe716ed6c2b38e853|2019-07-11|Eduard Valeyev|FMA-less library with spherical multipole ints support can be compiled now
2bd1f266b8e07a85083c34498e6143fed2a25132|2019-07-09|Eduard Valeyev|bump to 2.6.0-beta.6 [skip ci]
1cd0015734d7abd67d0313aa3f42f492e458c8b9|2019-07-09|Eduard Valeyev|disable use of <any> on pre-mojave macos due to missing any_cast ... resolves #134
9859ada6b3a96a12bf2ea5035e40ebdc7bf11439|2019-06-28|Eduard Valeyev|Improved precision of exponential Gm by computing G_{-1,0} explicitly (slightly slower but definitely buys precision in some intervals)
b5ff93231c653f85e8f37c6a7050b02053fb7bd5|2019-06-27|Eduard Valeyev|updated profile.cc to profile TennoGmEval
c786c1f0366867ca2717aacf68ea89f70a8a4c68|2019-06-20|Eduard Valeyev|bump to 2.6.0-beta.5
f1f73f62202626c7f5badfce21ef6b9f66cce7ef|2019-06-20|Eduard Valeyev|rank() and default_braket() are constexpr
b900dd866474fbab654f490b7fb2ad7646822b75|2019-06-20|Eduard Valeyev|make sure directory exists before unpacking bundled boost
844703dd91191b0bf459f4d148c7fa1d4b80a582|2019-06-20|Eduard Valeyev|libint2::rank(Operator) is constexpr
02116b488f73bdbec656ec662223685a892afacd|2019-06-20|Eduard Valeyev|renamed test-boys in autotools-based build of exported lib
61924b81542b3dedfc38d96432149a5c3da28fd1|2019-06-19|Eduard Valeyev|bump to 2.6.0-beta.4
35d73e911ca17d541809342b790199b1c9f8a747|2019-06-19|Eduard Valeyev|renamed test-boys.cc in exported lib cmake file
d691e28cc37e25c66e60cb90e05b1c1073a13588|2019-06-19|Eduard Valeyev|typo
47583bee6470b6fcda239d62c1a0c66a4ed564fa|2019-06-19|Eduard Valeyev|exponential ints can be computed without AVX now
77259af059057f2892efd5a494d490cd46d0e8ec|2019-06-19|Eduard Valeyev|implemented analytic Slater and Yukawa ints
7442955f8eb0a25646bd38fffa69f079dcc763db|2019-06-05|Eduard Valeyev|amended c7dff63
c7dff63a1a60264ac1c3f0feabce525a41f9ab19|2019-06-04|Eduard Valeyev|added Engine::oper()
b7dddb63bfbec2898956b5fd3860c31fb478051f|2019-06-04|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
87072ada003760ae8c751a484756b7565058d96b|2019-06-04|Eduard Valeyev|added Engine::braket() + dox++
604ccb8e20a32ae95fdc52746d8bb0a86b72d185|2019-06-03|Eduard Valeyev|dox++
d2279440ba6ec1b2961cd21a1759036b86b54415|2019-05-25|Eduard Valeyev|Merge pull request #128 from wavefunction91/cmake_fix
aead294adce891ef033bf4d7eab0255e4dfa6c6a|2019-05-24|David Williams-Young|Direct internal Boost install in exported lib to proper directory
9814f05923b644cbb7e8f75043d1606565e7a861|2019-05-23|Eduard Valeyev|turn off c++ language extensions by default
e434964865522d70688e9263f8e8d4bdfb4bdd87|2019-05-22|Eduard Valeyev|reamended beta.3
edcd9d0e5ce49eebba35b72a3b2fb77f8b866411|2019-05-22|Eduard Valeyev|amended beta.3
3324448fdc4adf0f99628a760f3a87f15844656d|2019-05-21|Eduard Valeyev|amended 4d073dc
60a2a24985313f3f45837141171f75996bddf40f|2019-05-21|Eduard Valeyev|amended 4d073dc
900bd00fb6477e65f862181f5253c4fc5580fe7c|2019-05-21|Eduard Valeyev|updated 2.6.0-beta.3 [skip ci]
4d073dcffdd3a3a229a9f93e8c79c04e6769729b|2019-05-21|Eduard Valeyev|bumped to 2.6.0-beta.3
a8f87aa581cc6b1a067c46914e1f7e7edb0f0dfb|2019-05-21|Eduard Valeyev|cmake build of the hf++ unit test needs threads
0bcee008ec43951fa2875736173c17fa9eec7c1b|2019-05-21|Eduard Valeyev|cmake build of exported lib fixed to pass tests when running out-of-source
90287007908a06341e6a7a3eac57ae2caead54f8|2019-05-21|Eduard Valeyev|cmake build of exported lib fixed to work out-of-source
8b2ef5225d03f0cdc5ede26b38a7f21c98f38625|2019-05-21|Eduard Valeyev|'make export' works without first doing 'make default'
23f63574e0f758e1cfd217ed0588becffd7e7fcc|2019-05-18|Eduard Valeyev|bump to 2.6.0-beta.1 done
8cbadf0e011041e8e7e0e1c623f384c0f1cb5de7|2019-05-18|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
c3a65965b3a54e168c73301846e9623b20fe1190|2019-05-18|Eduard Valeyev|updated exported INSTALL file
fe2202e1d5a2d40f4514f3dfd37f73421f4c720e|2019-05-18|Eduard Valeyev|Update CMakeLists.txt.include.export
be2e6ef00a8244d67ab7d05cecd30b971aca864e|2019-05-18|Eduard Valeyev|don't install .in files
d4085ef3ee0e77ddd3a848a58eec878d3d3a72c7|2019-05-18|Eduard Valeyev|date fixup
08638425be0406756a62af002b759afe60878e44|2019-05-18|Eduard Valeyev|install datadir as well
1e2f1d9242ff80b498ff2b3bb243771300d8d7b1|2019-05-17|Eduard Valeyev|cmake: check for posix_memalign and alignment, amended Libint2::cxx compile definitions
6c2c23cd9dd80a34fb490220976ad94302f558b5|2019-05-17|Eduard Valeyev|[travis] fixed location of hftest.cmake
76b5c98b3306f2e761096bd33bd3ec901d0e22e6|2019-05-17|Eduard Valeyev|[travis] another typo
c8ecfe11411b1940664db077ea862d558ba8ce84|2019-05-17|Eduard Valeyev|[travis] typo
3340a4b9d1f8e3d44d292d024485690c95cd4d33|2019-05-17|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
cdb4456e61bcf352fcfcac204bf0ccac21a7e7b3|2019-05-17|Eduard Valeyev|[travis] test cmake build of the exported lib when using gnu
76c851a5bd46322b06873fd274c1a24d0ad07ee6|2019-05-17|Eduard Valeyev|cmake build of exported library works (even fortran), really ready for 2.6.0-beta.2
53c8981799915ac11c34505f2f6f3782ff5cd1ef|2019-05-16|Eduard Valeyev|cmake build of exported library works, ready for 2.6.0-beta.2
6210f6f7ab52218a7072d12db896f5917432472a|2019-05-16|Eduard Valeyev|hf validators can read files or stdin
a13526d130b3646a17c98b64067ee3faf5c8cde9|2019-05-15|Eduard Valeyev|[cmake] eritest compiles and runs
444557a571a7eeb68a77bf365690f345262092e4|2019-05-15|Eduard Valeyev|use std.random instead of boost.random
d247f74529d9443c9a2e97e9f50fe6a9545d9a6d|2019-05-14|Eduard Valeyev|[cmake] can build and run unit tests
5458ab2fb2fd51dcd19f1e8122a451f2a0808074|2019-05-14|Eduard Valeyev|Merge pull request #127 from pseewald/fortran
172d13f89a3c94e2d9337de7d22c7dcb192c1a62|2019-05-13|Eduard Valeyev|updated CHANGES for #127
3ba581a3dcebcb56519e48e51cc911bf9463ede4|2019-05-13|Eduard Valeyev|Merge branch 'fortran' of https://github.com/pseewald/libint into fortran
3fc6f9a0e2a311aa32e549ca415152be7eb912df|2019-05-13|Eduard Valeyev|amended #127 fixes for the case where max-am is not given as a list
8c8039615cd230e6aa84bb290a926326a083e5e5|2019-05-10|Patrick Seewald|Update Fortran documentation
c049c318e4df5208314b70d85dbf8a4a1c4791a2|2019-05-09|Eduard Valeyev|Merge branch 'master' into fortran
a362be8c0aa92005883c82333898bce40ce155ed|2019-05-09|Eduard Valeyev|amended fortran evaluator fn dispatch array dimensions to match those in build_libint.cc
a52c25481be3fd18bdbff67961c6e12eb237683a|2019-05-09|Eduard Valeyev|typo
8c227ee960a1454158aa83c8b57641e7fa3d72f7|2019-05-09|Patrick Seewald|Fortran interface: fix dimensions of 3-center ERI function pointer arrays
95b8dfba0b622db24947bc35b5ad82d2f910cc09|2019-05-09|Eduard Valeyev|Update travisci_build_linux.sh
b73998fb23f95c0c418cef8b8dda130250cccd88|2019-05-09|Eduard Valeyev|typo
36f57f529cd7b782fcb0fc33d136ba810bbd5282|2019-05-09|Eduard Valeyev|progress towards cmake build for (exported) libint: library compiles
1068e638a8c193d313761978262293262a2142d4|2019-05-08|Eduard Valeyev|[travis] clang needs thread library to be linked in explicitly
1ad04e06b1ecb5bf88e6f525715c0d23d60b338f|2019-05-08|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
3c2377dac397bf0dc5227e3c35f54d025943152c|2019-05-08|Eduard Valeyev|FindLibint2.cmake automatically finds the correct libint2.pc without the need to mess with PKG_CONFIG_PATH
ffc702dcbc84167fa1bcc1b9ef5a94a72abac5e7|2019-05-07|Eduard Valeyev|Update travisci_build_linux.sh
e713569f1628251ae3348cc42e40d990215c0fd0|2019-05-07|Eduard Valeyev|[travis] added FindLibint2.cmake test
db50761f78719c4a196bade746c57c629573d290|2019-05-07|Eduard Valeyev|updated hartree-fock++-validate for python3
a1db31dd86fdce6e8828b8ed3d2527888c74672f|2019-05-07|Eduard Valeyev|bumped to 2.6.0-beta.1
85072a44d6abdeaf10c26558d242faac04985a27|2019-05-07|Eduard Valeyev|removed Engine::set_{oper,braket} deprecated in 2.5.0
b2558eb2a19622da92e2cc7e8e4d0693f0e291cd|2019-05-07|Eduard Valeyev|added FindLibint2.cmake
ed9e08da35abad512201b3434ab15244a0682581|2019-04-10|Eduard Valeyev|Merge branch 'vectorization'
7472f34c2c77ac57597ac6e14ea38c5d18abf131|2019-04-10|Eduard Valeyev|Merge branch 'master' into vectorization
18d987e3f357e3f6d6b9b59b5588b4a0b36dba4b|2019-04-10|Eduard Valeyev|Merge pull request #124 from evaleev/pbc
b2dbafa88dec7d3e83056f05fbce53d162cb8802|2019-04-10|Eduard Valeyev|added missing include + fixed compilation error
c2eace66a7bd2cc01ce3d5321774c309e482a703|2019-04-10|Eduard Valeyev|started changes for 2.6.0-beta.1 + fixed release year for 2.5.0
d8a415009c40f8b5804565b40772eb4a4ef0c9eb|2019-04-10|Eduard Valeyev|fixed clang warning
088e78ed547eaf03fc2b659ad5bfac5541693b2c|2019-04-10|Eduard Valeyev|fixed engine lifetime issue in test-c-api
e2c50f76aca369f79f8f6804ad87d2ac122b4d5d|2019-04-10|Eduard Valeyev|added unit tests for std and PBC XYZ reader
56e884fa7dbeb3d6a41b39bc21c44b1821618c95|2019-04-10|Eduard Valeyev|merged master into pbc
c48e63df3da558b2c1407d710008338f3afa8685|2019-04-09|Eduard Valeyev|updated CHANGES ... last one? [skip ci]
dd7d00bc2f78336c863faeb1ab8dda58015ff356|2019-04-09|Eduard Valeyev|Merge pull request #123 from mclement1/master
a063d8413b43a70a5d6d6ab61f3446b409bdd18a|2019-04-09|Eduard Valeyev|Export_CO -> PBCExport + extra docs (my best guess)
5bfed1fd96654447e72a5914d7fd14df75d0b634|2019-04-09|Eduard Valeyev|yet more linking fixes for C++ compiler+linker flags (e.g. -stdlib)
cc519b9ba161a6593565db1c13c36de4dcad2b31|2019-04-09|Eduard Valeyev|more linking fixes for C++ compiler+linker flags (e.g. -stdlib)
b56cc4084b197f54a9522e24bd308947339ff322|2019-04-09|Eduard Valeyev|fixup
b4f209bd6c063cb4c420cb9edddfe98f4055c16e|2019-04-08|Eduard Valeyev|fixup
c208fc759b1d4ff267cc449f5c3067394922fe26|2019-04-08|Eduard Valeyev|disable fortran tests when fortran is not available
6954c66aace2c1f89c3a0e5c4d7f3bae788bb6aa|2019-04-08|Eduard Valeyev|CXXFLAGS need to be passed to cxx when linking due to possible -stdlib= flags
5c2b95e95723634b2bf2792229b60066f3739bde|2019-04-08|Eduard Valeyev|[travis] omit $EXTRAFLAGS from LDFLAGS since gfortran gets confused by -stdlib=c++
e47cdd244b5350a9287e78d85690f67bd3e872a2|2019-04-08|Eduard Valeyev|should be good to go today
67e6fd2e402a44d5a2724815c8aa19bfab42d54e|2019-04-08|Eduard Valeyev|fortran test needs extra define in case system Boost is missing
a810bb94efddc207e8cbfd72ed7e5d936e7326f1|2019-04-08|Eduard Valeyev|[travis] purge boost more thoroughly
281e2970b65470d97d22793afd0677cdf736c1ea|2019-04-08|Eduard Valeyev|[travis] download eigen3.3 to avoid excessive warnings from gcc6+
6b7cd703b3134527a1a11deeaab7fcde83c360e2|2019-04-08|Eduard Valeyev|it is 2019 already?
967adc1498454f6768e0216548bda8981456ae28|2019-04-08|Eduard Valeyev|Updated catch to 2.7.1
8371a79bb9ae87234d9916b3db7b49b88fb271b6|2019-04-08|Eduard Valeyev|Updated libtool to the latest
bf4201eb7727813de6580fc777f1cd4e7ced08f8|2019-04-07|Eduard Valeyev|[travis] tweaking apt-get remove libboost-dev
fa5ca20ae167d15f6f35602194c779fa99e67ac5|2019-04-07|Eduard Valeyev|amended docker travis build script [skip ci]
4c5efd1527d7ea82e4d47edbeeab9230ac353092|2019-04-07|Eduard Valeyev|export performs additional post-processing of config.h to allow exported configure.ac do its job properly
a3d07530ac51322e1a684ef31c2ff3b2ab1c0ce7|2019-04-07|Eduard Valeyev|[travis] build exported lib in Release mode without system boost
674bacb00a453bfb35333fd613fc5be460c2e3ff|2019-04-07|Eduard Valeyev|[travis] can't test without boost
ca967b91a10da5c0e04be66e09bf3a1ce9f95266|2019-04-07|Eduard Valeyev|[travis] amended boost package name on xenial
af17a980b60d85e9d130945912b6eb36237b6f15|2019-04-07|Eduard Valeyev|[travis] bump to Xenial + test both with and without boost to troubleshoot #121
992917ab249650707cae3e8fc3ebea0b4e12efd3|2019-04-05|Eduard Valeyev|cleanup
0d82fbf78fea726799a349f36fbec4aca06597e1|2019-04-05|Eduard Valeyev|use CXXFLAGS even when preprocessing for fortran bindings to avoid errors due to missing c++11 support
19b020370b22ef173489ea59eb3a1eac489fe3a1|2019-04-05|Eduard Valeyev|bump to 2.5.0
9978634b67c2fde29c62f336e34bb9a5dff59338|2019-04-05|Eduard Valeyev|added ano-rcc and GAMESS' mini bases
6da80b1045393b0babadf83304bef6c70a7edb71|2019-04-05|Eduard Valeyev|amended 7b574812a62f4e7903225053366cba2001c46a1d
7b574812a62f4e7903225053366cba2001c46a1d|2019-04-05|Eduard Valeyev|amended 0fc462c
0fc462c560de960c515abadc600a667e7033be29|2019-04-05|Eduard Valeyev|not only prefer to use system boost, but do not unpack or install bundled boost if usable system boost is avalable, resolves #108
a4293cbe723de2be5b458b358ed542ae24cac78b|2019-04-05|Eduard Valeyev|added missing CPPFLAGS in libint2.pc
32525e17326d93d0861ac8306eb0fd26ddf8dc5f|2019-04-05|Eduard Valeyev|added missing export of ax_boost_base.m4
351e26487aabc973de2aa0983e42c958c96fabcb|2019-04-05|Eduard Valeyev|added missing #include <ctime> , resolves #107 (HT @yurivict)
00ceb7c6b8ac8536c2ad80e8a091e3a6749f3291|2019-04-05|Eduard Valeyev|added missing #include , resolves #115 (HT @hongzhouye )
f322331779bfd78ce7e7b9a69dedac0076b84130|2019-03-31|Eduard Valeyev|only print "Will read ..." if file was opened successfully
4c269f40c744a19a0e69df69247f074bcc780492|2019-03-31|Eduard Valeyev|added a brief unit test for solid harmonics p shells
bc511a5333cefcada3941837e7f168368e57fbfe|2019-01-23|Eduard Valeyev|reverted accidental changes in 4397a53791edacd07d4434d39dfda44e4236ea01
9ee96dd7fc239436ad83dabd07fc35dd91fc922f|2019-01-23|Eduard Valeyev|removed c++14 features from numeric.h
a10982d7b1276b2b82a79921a6df4056a2c9ddc0|2019-01-22|Eduard Valeyev|all test programs properly include statics_definition.h if CONSTEXPR_STATICS are disabled (as e.g. necessary with broken compilers like Intel PS 2019 with -std=c++17 per #118 )
f759ed400250db1f1f6be17047422be2a11af4dc|2019-01-22|Eduard Valeyev|fixup
61b280ab98e6338ff9b1e6f1dee46348a5d4036f|2019-01-22|Eduard Valeyev|fixed inconsistent definition of LIBINT2_CONSTEXPR_STATICS in Makefile.tests.export vs tests/Makefile
4397a53791edacd07d4434d39dfda44e4236ea01|2019-01-18|Eduard Valeyev|added missing include to test-boys
b7ecad5c10f733136d861d381098e4a258ca8c86|2018-11-28|Marjory Clement|added functionality for exporting crystalline orbitals; modiefied base export class to default to a symmetry label of A when no symmetry label is supplied
5225072e5293feb953b5dbf4b8e9ceaef0af8f79|2018-11-28|Eduard Valeyev|updated CHANGES in response to merging #113 [skip ci]
ad1132ee8868d7244974caa237f9a90de3f4d3ce|2018-11-27|Eduard Valeyev|Merge pull request #113 from pseewald/fortran_interface
5e2a80ac9059d616e10a0a8aeac95a2b6c9c2410|2018-11-27|mclement1|Merge pull request #2 from evaleev/master
08aece035bd342fe798e3b3d0f16c17d7c5c9f16|2018-11-27|Eduard Valeyev|Boost.Container's small_vector is only usable if the Boost version >= 1.61 (HT @ngovind )
56bacd8771624adc6d88e3ccde56d4e5ab1681ff|2018-11-27|Eduard Valeyev|molden explorer prints [5D] if no f shells found
79f0db7b8752abfcabd86c8674c164e3282693db|2018-11-27|Eduard Valeyev|fixup
d01ac1e5cbb9fdd06603ec99f2b3036ca589e509|2018-11-27|Eduard Valeyev|silenced more signed comparison warnings
77577283bb3afa2ff13f6eac465210e2d132fe54|2018-11-27|Eduard Valeyev|dox fixup
4612167fd6b189fce361c915cc8e329df96ea505|2018-11-27|Eduard Valeyev|amended 2.5.0-beta.{1,2} changes
b6bd25e53dfa3e745febc79712830034fca8d730|2018-11-02|Patrick Seewald|fix dimensions of build_3eri
3a7ec58836d4b9568472da33cde17d81f93f3a8d|2018-10-24|mclement1|Merge pull request #1 from evaleev/master
91da69dc5e2e742b288febf14660ff5900757a55|2018-09-07|Patrick Seewald|documentation on Fortran API
8e4de601272899fb0c91e37e479cbe35c3b80d04|2018-09-06|Patrick Seewald|rename compute_eri --> compute_eri_f to prevent potential name conflicts
c2e0a72d39b92366f45de40f4d628005114c3d75|2018-08-22|Eduard Valeyev|Merge pull request #94 from pseewald/fortran_interface
71427088b79ea6d7751107b778f6378414058ba0|2018-08-22|Patrick Seewald|boost unpack dependency for Fortran test
5d3a2cba716d6161a97314e9b6d5e23929de6414|2018-08-21|Patrick Seewald|fixes related to merge commit b2ded4244110289125c2491e74f9c65d21a73ccc
b2ded4244110289125c2491e74f9c65d21a73ccc|2018-08-21|Patrick Seewald|Merge branch 'master' into fortran_interface
c4f4919e7fa3ba6b57cb76475e0a7baf82a955b3|2018-08-21|Patrick Seewald|fix dimensions of build_3eri (see #102)
0c9d40d277984bd426c9d97a6645f0f0b28d1600|2018-08-15|Eduard Valeyev|validation target in exported library works correctly in absence of C++11 API
9a25e3c6d2e277dd5cae5c3160196d8c64849dec|2018-08-13|Eduard Valeyev|profile compiles again [skip ci]
f9962cc8e7997d2f577d06f40483e49f7975b6ac|2018-08-13|Eduard Valeyev|amended 449621140fc3322d9a8e51581c2b3900cb66d4ad
0fe36477adda5f13a88e033b7b6b34898e31706d|2018-08-13|Eduard Valeyev|fixed unit test compilation in exported library
b0e993ab312e3397aba39f10b528934cb0c70c42|2018-08-13|Eduard Valeyev|amended 27bdaa50440f827785792b92625595cc145ea0ab
09c912c36974bab4b30e08e0c9539d441788eb8c|2018-08-13|Eduard Valeyev|bump version to 2.5.0-beta.2 [skip ci]
20b02b919c767c93677b356b2412ff7bb36bf981|2018-08-13|Eduard Valeyev|updated CHANGES for 2.5.0-beta.2 [skip ci]
9c8328c58d12dbacc1a549be777b805e6ffd1a6b|2018-08-13|Eduard Valeyev|default to Chebyshev engine in few more places
1fc8c6529f950793062bd12135fb734447e55ba2|2018-08-13|Eduard Valeyev|hf++ ref energy was too low by 2e-12
4afd768c92a35f537586cc769929150fcbafa18f|2018-08-13|Eduard Valeyev|added FmEval_Reference2::instance
09154e9985c91cf2b6f8c5397768c2c293e7a8e6|2018-08-13|Eduard Valeyev|gcc and clang seem to differ in how they interpret explicit instantiation declaration
85f4c0254b4128796ccdba6c191fe4690d6d3d7f|2018-08-13|Eduard Valeyev|amended 6f3aa2d43d80dd49f2e6c90754699c5c93844a4f
31c18afcb2ff641c3770cb1e57806e0d0dd44f31|2018-08-13|Eduard Valeyev|added Mathematica script that produced Chebyshev table in 9f608df0c16980e8369631fea50813958b9e53b0
6f3aa2d43d80dd49f2e6c90754699c5c93844a4f|2018-08-13|Eduard Valeyev|added test for C API computation of ERI
64d88fdaa52680aaeb0d09763a72a126af050a1d|2018-08-10|Eduard Valeyev|C API test actually computes, but does not yet test. Using C hurts.
afaf026067af70b00ae8fdfa4b2395f3a0b7c5ea|2018-08-10|Eduard Valeyev|amended 449621140fc3322d9a8e51581c2b3900cb66d4ad
fd8d3065286fbb2ef93a0b146b7bc57bca5824a3|2018-08-10|Eduard Valeyev|updated unit tests: added mock C API test, improved precision handling in boys test
449621140fc3322d9a8e51581c2b3900cb66d4ad|2018-08-10|Eduard Valeyev|header tweaks so that libint2.h can be included from C
3da00dc744912abd8fee21660b82cea059b732cf|2018-08-10|Eduard Valeyev|Chebyshev is the default Boys engine for 1-e Coulomb ints
27b819eba40935176845ad15874b9b00f88bd17c|2018-08-10|Eduard Valeyev|uniform Boys engine interfaces
9f608df0c16980e8369631fea50813958b9e53b0|2018-08-10|Eduard Valeyev|Improved precision of the Chebyshev engine
244b5e0802f4f988b2ed64f324f22a8bdec2a280|2018-08-10|Eduard Valeyev|dox
4ace92b2a64173d0ce02a37b1a2953a87d143cc1|2018-08-10|Eduard Valeyev|Refined precision management of FmEval_Reference{2}
0d55a82126a14049457ce344221f58f93f3968ba|2018-08-10|Eduard Valeyev|minor
f36de87ea23e48478b1beb2b7df1c77c0e12140a|2018-08-10|Eduard Valeyev|propagate precision in mpfr functions
27bdaa50440f827785792b92625595cc145ea0ab|2018-08-09|Eduard Valeyev|added Boys unit test
cc61c298773d1d6a22682efd114920ba2d5f03a7|2018-08-07|Eduard Valeyev|LIBINT_USER_DEFINED_REAL is now in config.h
c10dab15530dd5ded3bfcc87d918041574d56e47|2018-08-07|Eduard Valeyev|amended 056ac64ee59f96bd59b8a0cd32be4499a72a4507
056ac64ee59f96bd59b8a0cd32be4499a72a4507|2018-08-07|Eduard Valeyev|cleanup
3e1ef1633d4e4f729dd6d2a6327f3017cd4203de|2018-08-07|Eduard Valeyev|starting transition to support other floating-point types
d1cd45311dc8a5a02f6ce2414999639a2d2684e6|2018-08-07|Eduard Valeyev|- moved MPFR code from eri.h to numeric.h - HAVE_MPFR -> LIBINT_HAS_MPFR
e219238e0a7bea00d25cafe76e55df73a8765fa4|2018-08-07|Eduard Valeyev|updated CHANGES
a55afcb1cda3d4753e3b0197ac5dd4e9ebb1f3f1|2018-08-07|Eduard Valeyev|amended 3e56e22f535cc46e2fa250b06539927f2258292e
75c59eb1c36d67fcbab24b07865d0bdd6404b40a|2018-08-07|Eduard Valeyev|cosmetic cleanup of hartree-fock example
3e56e22f535cc46e2fa250b06539927f2258292e|2018-08-07|Eduard Valeyev|2-body core ints engine singleton initialization is now indeed thread-safe
d6780c72c5cd5d41e2366019e3bc3eddc0f3d0bb|2018-08-07|Eduard Valeyev|fixed more unsigned warnings from g++-8
e6dddaf66304f7a5ffe35829efc6b8456460b8af|2018-07-26|Patrick Seewald|fix dimensions of build_2eri
e5ce45fa0bef45e18fa3f41dda723567788a9366|2018-07-26|Patrick Seewald|Improved testing: Check correctness of Fortran results (compare with C implementation) and generalized test to contracted functions
e4399ec7d723230b86a3af514bc7da8d24675c1c|2018-07-23|Patrick Seewald|Avoid assumed shape arrays in compute_eri subroutine in order to make it callable from C.
038213bbb1fc209497a41c69f47fec8951ac5643|2018-07-22|Eduard Valeyev|can control epsilon for printing mo coefficients by molden exporter
99322716d01091abc5bf6ece1593cc67d57e4ceb|2018-07-22|Eduard Valeyev|molden export outputs coefficients in-order
5df03e54cc13cc1157b6859c0f08ffd6af801cfa|2018-07-17|Eduard Valeyev|added missing spaces in [MO] section of generated molden files
c8b5d3ba8ed75c05fac42d8988eb5d88427c7da8|2018-07-15|Eduard Valeyev|syntax fix
340421adad61cbbf7c41d548ba908caeaf64a369|2018-07-14|Eduard Valeyev|amended .travis.yml in 343c0fae010149b568105f13608c20bd1f05ec91
ff96c3589d495bfdad0b3331ebe3e86fb581b7b3|2018-07-14|Eduard Valeyev|amended 41867da2a520bcad6c9c89830da31a39f278cfd2
5a06995e14d625bc001e1ecf730610972e909ba4|2018-07-13|Eduard Valeyev|small vector optimized length can be configured by defining LIBINT2_SVECTOR_OPTIMIZED_RANK
41867da2a520bcad6c9c89830da31a39f278cfd2|2018-07-13|Eduard Valeyev|LIBINT2_CENTER_DEPENDENT_MAX_AM_<task> only defined when actually needed
ccde50896e8f52d7c7544b648a9441738f41f01c|2018-07-11|Eduard Valeyev|few more vector[] -> vector.at()
fdc0ab12000abb4ee10d267b5de7f60873c8cbf4|2018-07-11|Eduard Valeyev|bump to 2.5.0-beta.1
2fe36b48247fd6805cc8b73b2f52f8626aa17c9c|2018-07-11|Eduard Valeyev|updated copyright year interval [skip ci]
ee9371ff06ead25b779de9af9d24b19f985f89a7|2018-07-11|Eduard Valeyev|work around failing static initialization of element_info
d19141215d2de262853c0dc2f650d4414068196c|2018-07-11|Patrick Seewald|auto-generate libint_t Fortran type from C struct.
3ee8b7166b3f30a6a22d0c599b0d80735f53b70b|2018-07-11|Edward Valeev|added missing header for libstdc++ bundled with gcc 8.1
447c2d805f16c55b223594bafffa1eebdb3bbb47|2018-07-10|Eduard Valeyev|fixed warning due to ignored return code of posix_memalign
343c0fae010149b568105f13608c20bd1f05ec91|2018-07-10|Eduard Valeyev|added travis container build, revised travis build script
4d2f87a50aa92ce3f50952ea4fb17dde45dee826|2018-07-10|Eduard Valeyev|libstdc++-based libint required std c++ lib to be linked even into a purely fortran program .. link fortran_example with cxx also
ea06ed23acbe45ef354ac868c1e376e5b33456cd|2018-07-10|Eduard Valeyev|step towards unit-testing fortran api from c++ ... calling from C++ does not seem to work at the moment
21c7bcc6c80753497789d27c5bc6e0dbaea9138f|2018-07-10|Patrick Seewald|fix construction of fortran_incldefs.h
e124cb622e7e912b704138a1acba0d3954f29297|2018-07-09|Eduard Valeyev|typo
c7b540efe7d40e861a5e14b18d060f69ae1ef3de|2018-07-09|Eduard Valeyev|Merge branch 'master' into fortran_interface
8e770b56870a16f036741e6b6acdf1d39cd2dd9a|2018-07-09|Eduard Valeyev|[travis] initial integration of fortran interface
fb21ef757f4e23c2f528ad455f2929688c3631fd|2018-07-09|Eduard Valeyev|simplified construction of fortran_incldefs.h
46b9de5c6049997f959852c6da83370782611084|2018-07-09|Eduard Valeyev|relocated fortran subdir to export
669bb32109833cc92de40617e1d85eeefa9d02e2|2018-07-08|Eduard Valeyev|Shell uses boost::container::small_vector if available. Default to-stack threshold = 6.
901fb8c1f780b16935b9c4148c5bd9ebacaa83e2|2018-07-07|Eduard Valeyev|amended 907c176e44ae025ed9e2decde509923bfd9c2f79
907c176e44ae025ed9e2decde509923bfd9c2f79|2018-07-06|Eduard Valeyev|added missing header
dc600ef5f8f4d04cac8f31c815d7c3401548d496|2018-07-06|Eduard Valeyev|dox++
6224c9831255a542fae2cbf93ea5f73e5aa5406d|2018-07-06|Eduard Valeyev|fixed bug in Engine::set(oper) and added Engine::set_max_{nprim,l}
6b1a970bdccb727de661035ecb557665cdb625b8|2018-07-06|Eduard Valeyev|added a BasisSet ctor that takes a list of atoms and list of basis sets for each element
6e024f07608a9e5225143a0dc2bc96713b111c82|2018-07-06|Eduard Valeyev|- libint2::initialize takes an optional verbose flag - BasisSet ctor uses libint2::verbose() to control printing - BasisSet ctor throws if it can't read a file (controlled by a flag)
5f0664e8792bf9ae3a6b9bebc97ed8dd02fa2a72|2018-07-06|Eduard Valeyev|speed up unit tests a bit by 6-31g** -> 6-31g*
793c6686c5616f2ac768cbba6179b0736a080348|2018-07-06|Eduard Valeyev|shorten the eri test by lowering the max angular momenta
846de688b6fcc4606eb740c0da28a1f6e2db7cb2|2018-07-05|Eduard Valeyev|unit tests are included in exported library
45634546b6ca84f3981ecb520cdc6161a13a24dd|2018-07-05|Eduard Valeyev|ocd
7e8183ff4f68812450fd7a6cd9d2d643a993a606|2018-07-05|Eduard Valeyev|cleaned up unit test tags
e566b5bdac8083ad57b36db7d357ee6535e59f74|2018-07-05|Eduard Valeyev|added a unit test to try to reproduce #99
3ae8819503ba2ba832d07d288536f36c78861687|2018-07-05|Eduard Valeyev|fixed offset computation into build fn ptr table in Engine for 3-center ints if max am given by a list (apparently existed since max am lists were introduced in 6ae6d8bbc722db31053a53d5c5201c7a8bd78d5f )
7feb797b253057c37458f2d5ebd593bcd08bb440|2018-07-04|Eduard Valeyev|default initilize cartesian_shell_normalization_
098fc9b6dfe50513b42bdc3497b9bfb9055c724a|2018-07-04|Eduard Valeyev|fixed compilation errors
8b106d94f41e2bafc2a5a809dfc4face052c4dba|2018-07-03|Eduard Valeyev|amended cart normalization check
1b943a3221938fc6d32eb8b4dc660ef4b46ebc98|2018-07-03|Eduard Valeyev|amended e16b27a48b4b37311da1c9ea6470fb6c29521029
e16b27a48b4b37311da1c9ea6470fb6c29521029|2018-07-03|Eduard Valeyev|[travis] switched to llvm.org for clang
de59e46630232e7334410e0872eae2d871673f4d|2018-07-03|Eduard Valeyev|check for configuration
bf7ed106a21deac6bf787d4ce741c09e0d224bfb|2018-07-03|Eduard Valeyev|disabled gcc 4.9, enabled gcc {7,8}, bumped clang to 6.0
306123b7169b19ec72765d5582fc5dc045f2ecd6|2018-07-03|Eduard Valeyev|- implemented support for uniform normalization of Cartesian Gaussians - eliminated most uses of std::runtime_error in favor of std::logic_error and std::ios_base::failure - obsoleted set_{oper,braket} in favor overloaded  set() and changed their return types and those of set_{precision,params} to Engine&
d6c891fc6750daa6604fb41b96f6c9b26d7ac932|2018-07-03|Eduard Valeyev|moved unit tests to tests/unit
563163ec519640b10ec8054d28485144dfe19adb|2018-07-03|Eduard Valeyev|minor cleanup
852d288481cf68e2f3178872574a228940df675d|2018-07-03|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
33c66ebbcded2c274fbd0dd81f6677958341362c|2018-07-03|Eduard Valeyev|cxx api: added validation test, fixed 2- and 3-center 2-e derivatives
78a84a85d1e4784563ecf804bd5e1bf143666e0f|2018-06-30|Eduard Valeyev|Typo
4d83b30707d61d7afbb8f792c59b1a65e59461c9|2018-06-30|Eduard Valeyev|lower precision for derivatives in unit test
4cf742f20b945c98fa801018d0d57c8a9eb2eb98|2018-06-30|Eduard Valeyev|amended 7c77289a448861949b30aa9be9b389bfc47a364f
680f210fe9496a6e805b48283bcf5e42d542fabe|2018-06-29|Eduard Valeyev|amended to work with c++11
7c77289a448861949b30aa9be9b389bfc47a364f|2018-06-29|Eduard Valeyev|added a unit test ... so far only permutations
26bd6cfea1358a3824e24af74a5832f7c719d08f|2018-06-29|Eduard Valeyev|typo
3f44d815077e3d32cb2d5e6347af067979e2eac4|2018-06-29|Eduard Valeyev|fixed more gcc 8.1 warnings
750442f12b6e3205872d5bf9b74495e050136984|2018-05-29|Eduard Valeyev|Merge pull request #98 from evaleev/pr-20180528-ev1
8e2b0e0afa64acfae7c01b13137c50ff157416e0|2018-05-29|Eduard Valeyev|- assert.h -> cassert - added missing cassert includes
959eee9a4ac6654f7cef96b50abf7d40260deae7|2018-05-29|Eduard Valeyev|amended 72f214a972f35edc7d8517cdb43b37a34b81ec44: instead of boost version check boost.preprocessor variadic macro feature
72f214a972f35edc7d8517cdb43b37a34b81ec44|2018-05-28|Eduard Valeyev|compiler checks for boost 1.57+ , std::shared_ptr is preferred to boost::shared_ptr
b63918e2d1cc0bf97becab9028aa5fefaac64f64|2018-04-30|Eduard Valeyev|updated CHANGES [skip ci]
0b37e03099b0bb86b66ca59b96aebf6761f52ef6|2018-04-30|Eduard Valeyev|dox
9b6c362450a5126a53e98980a37ec47816cbcfaf|2018-04-30|Eduard Valeyev|fixed configure.ac to pick up env var CXXGENFLAGS correctly
9658443765f1cdbfd1b3ed8e6569694fcd6f7ca7|2018-04-30|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
3744d974619feb7019ec6739ac47ca2573403ad6|2018-04-30|Eduard Valeyev|removed std::ptr_fun and replaced std::bind2nd with std::bind
35569cd44a3d96f0532e43351cc55d40a01cc4be|2018-04-30|Eduard Valeyev|Merge pull request #96 from mfherbst/master
780b9ca38b0d5cbf44f0a8fb2c74b037d793a1dc|2018-04-30|Michael F. Herbst|Missing using statements and include
2e8c980162faaba93d70dc746843ba01d368cb52|2018-04-27|Eduard Valeyev|fixed typos in FMA4 intrinsics names, resolves #95 (HT @lukebroskop thanks Luke!)
2ca26fb8c7f1226f72a9ec4e7c3df6932075767e|2018-04-27|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
877dab7392c342831f443881d81082270e8a8b45|2018-04-27|Eduard Valeyev|added system boost version check
a0a34470e2a39ec19ef3fa1a8d8d312df6027233|2018-02-26|Patrick Seewald|Converting C++ style comments into C style comments in config.h, this is needed to include config.h in Fortran sources (cpp in traditional mode removes C style comments, but not C++ style comments).
77575a55415be6d02c03efa6fbb665abaadef38d|2018-02-23|Patrick Seewald|Fortran interface to libint2 and fortran example.
78b68345da5425bfccf8f405f4ed041f2f0ba9d0|2018-03-12|Eduard Valeyev|Merge pull request #93 from dudektria/patch-1
00d582ea1326de44477d91b357b4b7ad021c0599|2018-03-12|Felipe S. S. Schneider|corrected typo in CITATION
8deff1246817fa337aba1f044ea291987b64863e|2018-02-21|Eduard Valeyev|resolves #91
98c248c64a629bc17c1f678cc3df604f381bef7c|2018-01-17|Eduard Valeyev|- disable derivatives of property ints by default - change default spherical multipole ints max order to 4
47ba8e390c5e3468f6eec903cd40bc184d543eae|2018-01-17|Eduard Valeyev|derivatives of spherical multipoles are not implemented, resolves #90
004f32eb5a2c35598ea5c3dc3de1d1d851efaf16|2017-11-21|Eduard Valeyev|bump to 2.4.2
0f9e05de19aa3b2772366e148201c51b94683218|2017-11-21|Eduard Valeyev|fixed vector_x86.h to be includable on non-x86
1934f85080fc575a503fa783b077d6feb57f9471|2017-11-21|Eduard Valeyev|suppress benign compiler warnings
1ef32a02e766b699cc1a82d405f6a49a87dff44e|2017-11-06|Eduard Valeyev|fixed eri test to work properly if Ahlrichs OSRR is used
c7ff8991e45003c8698a929943a6703094ccae8f|2017-11-06|Eduard Valeyev|bumped version to 2.4.1
0862860488c648a653cccc6a6661b4ecb69a960f|2017-11-06|Eduard Valeyev|Fixed uninitialized variable use in libint2::molden::Export
1cea0b5913f156abcbc1077425337a24e21a4ab5|2017-11-06|Eduard Valeyev|fixed leaky Engine::initialize() used by Engine::set_{oper,param,braket} (HT Gustav Baardsen <gustav.baardsen@cma.uio.no>)
970064ee830e9e4b8c8704bd55adc1cf537e24bd|2017-10-31|Eduard Valeyev|cleaned up DF notation
ce7326bc10347dcdb1253fa375afc5938be4c3da|2017-10-25|Eduard Valeyev|bumped to 2.4.0
db1a9d567d0a20dab6bcea238d6bb979fd764961|2017-10-25|Eduard Valeyev|prefer non-bundled boost preprocessor to the bundled one to allow operation in boost-dependent code (HT @pchong90 @kmp5VT)
861114975b911ad5be246ea70581dcf70e588a7b|2017-10-25|Eduard Valeyev|assert non-null build fn ptr in 2-body part of Engine
c5f45d03256297c7ff140f9aaaa6fdf1f7138cf7|2017-10-25|Eduard Valeyev|engine.impl.h: {begin,end} -> {std::begin,std::end}
d70c5c0990c3173f131ddd88143dbf806973ccc5|2017-10-12|Eduard Valeyev|bumped to 2.4.0-beta.4
03b18154a7d78534e29a4c32313b34e604f030b2|2017-10-12|Eduard Valeyev|amended 1e25be4813da137e70759d36383c3a38efe06dae
1e25be4813da137e70759d36383c3a38efe06dae|2017-10-11|Eduard Valeyev|revised shell pair interface of 397e6de4a50c392bddc347805f183b583f4d834e to do shell swapping internally
2ae91ac8569dd1da7411618180eaab47863c05d9|2017-10-11|Eduard Valeyev|added missing spaces
47a5d3bc513f3913d737d0e98f5d8cf7c55f16d8|2017-10-11|Eduard Valeyev|libint2.h can be used from pre-c++11 code
4323b1fd9fedddc01b226bf90b8e4222a59ee623|2017-10-10|Eduard Valeyev|amended 98d0b71ab235f5dcf014b6f3e51377d360a116a4
f2cc33aa01a97f546ee36da2d061668f1af2da94|2017-10-10|Eduard Valeyev|removed restriction on unroll threshold introduced in 98d0b71ab235f5dcf014b6f3e51377d360a116a4
6ca57629e08ac9f596ec5bec17c0a371c6753f54|2017-10-10|Eduard Valeyev|added missing terms in derivative VRR for elecpot ints ... amends the incomplete implementation in 6ea90f8bbeaf1ba25c6d7972288ea37fc55b3baa and its first use in ec798e38eeedc605ad5989120b5976d07765c445
22981d51dc0b12f993e9c2c6166b91e8bdc9b860|2017-10-10|Eduard Valeyev|Amended ab3bb36faa91f23ea60d940605fd9f2c28bf3d52
98d0b71ab235f5dcf014b6f3e51377d360a116a4|2017-10-10|Eduard Valeyev|deriv code was broken if unrolling was disabled .. namely deriv (ss|ss)^m ints were unrolled. This was due to the use of unroll_threshold=1 to disable unrolling, yet enable precomputed shell sets (non-deriv (ss|ss)^m, etc.) to get unrolled properly. Added new mechanism to control unrolling of sets of precomputed ints (see GenIntegralSet::auto_unroll). Now to disable unrolling set the threshold to 0.
47ac11e63898a283b7570c0e77d689a073e26a7e|2017-10-09|Eduard Valeyev|const std::string return type -> std::string return type
d06ca98b451cfcf09effa3d9547f77c1ba9ec7f1|2017-10-09|Eduard Valeyev|typo
ab3bb36faa91f23ea60d940605fd9f2c28bf3d52|2017-10-06|Eduard Valeyev|amended 0368483bc80ce10125f89dccf8134c3938d65843
4160ff40a5068d2f7ec80c581fd3f737e33e452f|2017-10-06|Eduard Valeyev|eliminated _{X,Y,Z} macros that cygwin defines in ctype.h ... resolves #85
0368483bc80ce10125f89dccf8134c3938d65843|2017-10-05|Eduard Valeyev|fixed instantiation of deriv 2- and 3-center generic code, resolves
397e6de4a50c392bddc347805f183b583f4d834e|2017-10-03|Eduard Valeyev|prototype impl of compute2 that accepts precomputed shell pair data
7859975ce6fd647983fce37144374610e2ad5832|2017-09-15|Eduard Valeyev|fixed bug in array_adaptor::operator== (HT: @ajaypanyala )
64d13413666d76d2aebf399329356714c4a5857a|2017-08-17|Eduard Valeyev|define guard for DEPRECATED macro
de78659d12fcfa3a6b824e3fcfc4d17193813d7c|2017-08-03|Eduard Valeyev|bump to 2.4.0-beta.3
622ac95c31304846b077539cb4979fb267d5e873|2017-08-03|Eduard Valeyev|++dox
a14427d53928f21c1a2f2bfeffea1a7734686518|2017-08-03|Eduard Valeyev|old boost.pp reports that clang does not have variadic macros (erroneously), hack around this
b5fcd5c3d8e1752684d550b7f815e0bcf3e4a9c3|2017-08-03|Eduard Valeyev|amended d35b65d83b8105e8753371062a74e53823dd10d4
d35b65d83b8105e8753371062a74e53823dd10d4|2017-08-03|Eduard Valeyev|commented out gcc 7, bumped clang to 5.0
39a50aefac2a05ec9590a9d63e6b159dc4431251|2017-08-03|Eduard Valeyev|- gcc 4.8 no longer works due to missing __has_include - added gcc 7
f31aa3a5a4f5bd9ed9398ec8bdbd6a5b805e1c6d|2017-08-03|Eduard Valeyev|added testing of spherical multipoles
67dd011452e952d12b1e98373b44bd2016475c3b|2017-08-03|Eduard Valeyev|amended ec798e38eeedc605ad5989120b5976d07765c445
ec798e38eeedc605ad5989120b5976d07765c445|2017-08-02|Eduard Valeyev|elecpot and smultipole use HRR + misc improvements
387b3b89c9d879d85efc2b21604264220056df97|2017-08-02|Eduard Valeyev|print out Scalar(double) to full precision
a4df3401a80ee4db1428e207edca09c7a5b74bbf|2017-08-02|Eduard Valeyev|fixed bug in smultipole vrr so now it can build on center B
6b53fd12a3d049d5d4ecdf0e18edb17a2f1cd871|2017-08-02|Eduard Valeyev|added 2-center OS tactic
e1d6dc3c655e0a4f0606b5b3114b10a27f193348|2017-08-02|Eduard Valeyev|exported lib configure script uses AS_HELP_STRING
eb006361d5b08a3318de626f874cd3a8723fd377|2017-08-01|Eduard Valeyev|exported library --with-cxx-optflags configure flag is processed correctly ... fixes #80
18a60d3b8edd3935bf190b336ee6fe33b208a0ea|2017-07-31|Eduard Valeyev|amended fa04958d305da3c644057c1b04b00ffe7b8bc2b2
b5cff2a897f75fba56b3168fd21c995b25d58d72|2017-07-31|Eduard Valeyev|typos
fa04958d305da3c644057c1b04b00ffe7b8bc2b2|2017-07-31|Eduard Valeyev|Implemented spherical multipole ints
d47e51eec695df994c693334149122a0cadc643f|2017-07-31|Eduard Valeyev|Basis::Basis(name,atoms) by default will proceed quetly if basis is missing ... this is to make cc-pCVXZ work correctly for H-containing compounds. Also, throw std::runtime_error instead of std::string
19fd08999db2bca5a780cd9d6ac4262e1ab30a18|2017-07-31|Eduard Valeyev|use AS_HELP_STRING to format command line args properly
84f5f5ad46262fc5b7bdac14f1d47b3f904cb6cf|2017-05-25|Eduard Valeyev|minor fix
cfca7afbfd527b6208de67e094e06a6d514a56af|2017-05-25|Eduard Valeyev|report LCAO coefficients in scientific format to support bases with high condition numbers
28f52325293de99a5151fb92dfde74af0bf8a88b|2017-05-23|Eduard Valeyev|molden::Export: minor cleanup and dox
ee7e432e7043947ffcd85eacbacfca55a38193a1|2017-05-23|Eduard Valeyev|amended 4e2e2bad00d9509fe3ea641d95ec84f2f2655cb5
4e2e2bad00d9509fe3ea641d95ec84f2f2655cb5|2017-05-23|Eduard Valeyev|make distclean purges hf++.molden
8ffe9c954cf7b1a7f62c0817f7c7a287089a33d3|2017-05-23|Eduard Valeyev|molden export skips MO coefs < 5e-11 so the file size is O(N)
53e3fdcaa872f86283edc3dddc85bb66c0b2f58b|2017-05-23|Eduard Valeyev|typos
a179a6181ddd905623c3ee8d7bf4a8ab3903269d|2017-05-22|Eduard Valeyev|removed stray debug output
3167b413e4e4c3b5f31ef1c587322f0aeef8c74d|2017-05-22|Eduard Valeyev|fixed installation of molden.h in compiler tree
334261e0141c3a446a87337154aede25e064aa7b|2017-05-22|Eduard Valeyev|amended f678e846e4ba2b5cbd5b92e304e2168540dabeab
f678e846e4ba2b5cbd5b92e304e2168540dabeab|2017-05-22|Eduard Valeyev|added molden exporter … bump to 2.4.0-beta.2
b8a0db2e3511c97b670385d6faad30d04aa6a10c|2017-05-19|Eduard Valeyev|bump to 2.4.0-beta.1
f0f0d1f7d22a2651403a6ba8e98cdb1224d7e2e1|2017-05-19|Eduard Valeyev|amended 31a216e46a38bd8aa2d0dceb84e813af9312307a
ae5cddbdbfd345a65e5f47f0227c85d5f57641db|2017-05-18|Eduard Valeyev|removed unused AC_SUBST’s
31a216e46a38bd8aa2d0dceb84e813af9312307a|2017-05-18|Eduard Valeyev|solid harmonic order can be configured in compiler and generated library. Only support standard and Gaussian order for now.
6f45a695ed15dffe6ddadaa7300b65b61779e78f|2017-05-10|Eduard Valeyev|pacified clang
b06819158a5376908bd8ffd8f29027e34283a438|2017-05-10|Eduard Valeyev|x86 intrinsics now accessed via x86intrin.h header
c290f5b7711b854eee1f5828e15bb19b6842850f|2017-05-10|Eduard Valeyev|in anticipation of vector interface: libint2::realvec_t -> value_type, real_t -> scalar_type
c833815d0348962d15fef4c36dc85c49711873e6|2017-05-03|Eduard Valeyev|libint2::any fixed, bump to 2.3.1
e5f0187300751e08a9016a41f2a81812db79c8f9|2017-05-02|Eduard Valeyev|updated CHANGES
c5d86aca6436d93f17d97e85fbd3726e60c19053|2017-05-02|Eduard Valeyev|amended d4297d78472eb51330043a7b48ec09b477e392be
d4297d78472eb51330043a7b48ec09b477e392be|2017-05-02|Eduard Valeyev|amended a610ccbf52f9cf2c399fb068d5a43bf7875df529
7b4560bbcaa1b104483f65ae0b99cb9e208955d5|2017-05-02|Eduard Valeyev|amended 09052824cd04109ac83aec62ee2f6e4c5a4d440c
16f6b5d48ea4fc8f87aa7484f233a03daefe019d|2017-05-02|Eduard Valeyev|removed old (public domain) any
a610ccbf52f9cf2c399fb068d5a43bf7875df529|2017-05-02|Eduard Valeyev|initial implementation of C++17’s std::any
09052824cd04109ac83aec62ee2f6e4c5a4d440c|2017-05-01|Eduard Valeyev|slight formatting change
d359acae097ef105029597381dcfd2d8f6fd798d|2017-05-01|Eduard Valeyev|Update LICENSE
ffe9ab6cdd067a14ad69b4ebdbe839f1fea4048c|2017-05-01|Eduard Valeyev|added explicit copyright header to generated files
7b8b4565bf4b5144117564421f5d01500a118428|2017-04-30|Eduard Valeyev|release 2.3.0 candidate
7fd61158332ec394a646f47d650d1573ed43da92|2017-04-30|Eduard Valeyev|tried to export missing file
46b988e523a57ed7b0992a18454077bc52ba262f|2017-04-30|Eduard Valeyev|touched up the copyright header
839ffb995cb22f9cb687af00750b389a832aa12f|2017-04-30|Eduard Valeyev|Added missing * in copyright header
4629d622797d14144c0fcfafbdbe7d5fe14e1073|2017-04-30|Eduard Valeyev|The default is even for the compiler is to assume LGPL3
ae5a151ed493b773f7399fe9b2bb14c0b3cf0db4|2017-04-30|Eduard Valeyev|all exported files that are part of the library are LGPL3 (tests and utils are GPL3 for consistency with the compiler source tree)
0abca20160032d2caf4f3a145bbf1cde1fa58cd9|2017-04-30|Eduard Valeyev|bump to GP/LGPL3
ab73353f421f14618b58963d102b99faa10eeea7|2017-04-30|Eduard Valeyev|Updated CITATION
381d74242c30b7517f676d40c78e1c269770e149|2017-04-30|Eduard Valeyev|Updated LICENSE files
1ab8d41b469edd4eb1ceb45c62868dccaa2fc955|2017-04-30|Eduard Valeyev|(in progress) update license to GPL3/LGPL3 … updated LICENSE files, reformatted header and updated copyright year
b2c20c1f0aac70483f67ec9f569e27b784466c3f|2017-04-24|Eduard Valeyev|Merge pull request #75 from mfherbst/master
db9b2674558ac88b3f04c99c398d15840564b8b1|2017-04-24|Michael F. Herbst|Update link to reflect new gaussian website
33560a073efa5a0abd88a37486e552c954808f1d|2017-03-29|Eduard Valeyev|bumped to 2.3.0-beta.7
32a20a69e5c73bb27f5acbff0e596820a79386de|2017-03-29|Eduard Valeyev|amended bfda6ae0f4b05f35fa107cf76d0b8fd3b3489f2d
b4f7f9745d1ae5f37e7e73cc17e934223a957a7c|2017-03-28|Eduard Valeyev|bump to 2.3.0-beta.5
25648e34f539dde578ead6f72ff3630464f438bc|2017-03-28|Eduard Valeyev|added basic sanity tests for erf_nuclear and erfc_nuclear
a79164fa6e310e777a42f29cee4f973772b9a894|2017-03-28|Eduard Valeyev|added screened 1-body coulomb operators: erf_nuclear and erfc_nuclear
4eb7b89c2bc542b2e5fdcdf8934b9b6b06ea6479|2017-03-28|Eduard Valeyev|added travis tests with gcc 6
203406ab171bdac883743e33a58d167d2f91825e|2017-03-28|Eduard Valeyev|updated bundled boost/preprocessor to work with 947847e1ef27a9d3144f3072aacfe1d279a08668 and subsequent amends
b779924b6404e395b15feb03ad4e682686e84e94|2017-03-28|Eduard Valeyev|added script for post processing include paths in boost/preprocessor
813a3a9453436d296c234b34081a8737557c4f34|2017-03-28|Eduard Valeyev|Merge pull request #74 from evaleev/pullreq-03222017-1
bfda6ae0f4b05f35fa107cf76d0b8fd3b3489f2d|2017-03-22|Eduard Valeyev|extra const correctness
6195eefa067b7f5f2e8bc009671ec5789943a98c|2017-03-08|Eduard Valeyev|minor update of autogen.sh
1fb4a8e40b5822812a7e4b4e5cc7f743c98fc85b|2017-03-07|Eduard Valeyev|amended 4b92b9bd00ab2398897a39b8458a26cda9d3fdb7
adf586437537949cf8567f226ceef7c292260404|2017-03-07|Eduard Valeyev|for ‘make check’: turn on dependency building, fix boost unpacking
8b13ba9edc81035624e89d6210f73309c5a7657a|2017-03-07|Eduard Valeyev|amended 9345ad36e49cc3b90f95f77ac292589799b5c4e5
541ae4dbbee31094cb07b2822254af6f751898b1|2017-03-07|Eduard Valeyev|make clean in tests avoids creating .d files
9345ad36e49cc3b90f95f77ac292589799b5c4e5|2017-03-07|Eduard Valeyev|amended  3036e5ea5a9822bc78329c92a6bdd7e04c4eca4c
3036e5ea5a9822bc78329c92a6bdd7e04c4eca4c|2017-03-07|Eduard Valeyev|amended 4b92b9bd00ab2398897a39b8458a26cda9d3fdb7
4b92b9bd00ab2398897a39b8458a26cda9d3fdb7|2017-03-07|Eduard Valeyev|amended 947847e1ef27a9d3144f3072aacfe1d279a08668, removed tests/bagel, tests/rysq
01e012afe1294021231a8eafa1c94a5acfa7e4ae|2017-02-26|Michael F. Herbst|Fix path of README.md file for export tarball
465ca9f9be44ffdfec895cb301f6b4e689886f94|2017-03-06|Eduard Valeyev|Merge pull request #73 from evaleev/pullreq-20170307-ev1
947847e1ef27a9d3144f3072aacfe1d279a08668|2017-03-06|Eduard Valeyev|fixed include path handling of in-place vs installed headers to fix #72 (just a clean-up of the proposed solution by @mfherbst that avoids relocating the to-be-installed generated headers)
0ae1518b7dc8eac58c1c89a721e40921952b2a15|2017-03-01|Eduard Valeyev|schwarz 2-norm bounds are computed correctly (they are not used anywhere though)
1dc5baed9a6acb140c29dab2d9cbe8c25a5b846e|2017-01-12|Eduard Valeyev|amended 80d829b0e9932cd118a85e8aab03a41fe0699a7b, ready to release 2.3.0-beta.3
80d829b0e9932cd118a85e8aab03a41fe0699a7b|2017-01-12|Eduard Valeyev|- Chebyshev7 is the default engine, Chebyshev3 is eliminated. - bump to 2.3.0-beta.3
5963980bdb0b383b8cb98cc8a98b08ae72c7b8c2|2017-01-10|Eduard Valeyev|fixed compilation error in boys.h
085c3d19ce9dbd48c9624d7f015388cab575395c|2017-01-07|Eduard Valeyev|boys.h actually requires c++11 in most of vector code, add a header-wide check
b6c695f0182b544decced310cb6727880a0f57eb|2016-12-19|Eduard Valeyev|amended 0f303941e79803acff95746160cd0b800d8e0039
0f303941e79803acff95746160cd0b800d8e0039|2016-12-18|Eduard Valeyev|travis-ci: re-enable clang, bump to 3.8
096fa88cca10f91d4a012e70797fb1b4dca3b9bc|2016-12-15|Eduard Valeyev|bump to 2.3.0-beta.2
ea56f78a8ed28bfe38ca0ab2c01bff5f247b5900|2016-12-14|Eduard Valeyev|amended 63732d247c1bb9f5b8f59c08b158608c2739ed67
63732d247c1bb9f5b8f59c08b158608c2739ed67|2016-12-14|Eduard Valeyev|1. Operator::erfdamped_coulomb -> Operator::erfc_coulomb 2. added Operator::erf_coulomb
d49d274aa1fbb6065e72c7dc4e3f81ee75ce482d|2016-12-14|Eduard Valeyev|fixed buffer overrun in CoreEvalScratch for Operator::erfdamped_coulomb
287134a594c5a14e241bb03742019a4a287b4ed3|2016-12-14|Eduard Valeyev|fixed buffer overrun in CoreEvalScratch for Operator::r12
38b5ea810ca407c2651648e6527f952ca5a673a7|2016-12-13|Eduard Valeyev|amended e259464d630d4c3b902a9932e2dbb4e45639db1f
be9a170cdc27a44a403c2a7a1599e3fecb6c489d|2016-12-13|Eduard Valeyev|reformatted enum Operator dox to not get busted by clang-format
23b93dd2a070e893110bd11ecd0a3dc23ebbe1cd|2016-12-13|Eduard Valeyev|minor cleanup
8c51dbddeafede55a9cfb645ec64a228df0a2c42|2016-12-12|Eduard Valeyev|trivial cleanup
e259464d630d4c3b902a9932e2dbb4e45639db1f|2016-12-12|Eduard Valeyev|added erf-damped coulomb
0eb8cc991d040d95894e6ab7e01523b6b5ae19ff|2016-12-12|Eduard Valeyev|moved isSafePtr out of the global namespace
76b7a658af2eadf7d8ab48fe243aeaf44b12c9ba|2016-12-12|Eduard Valeyev|minor dox cleanup
99bc78f2d35fd68c1949f26c4bbacaee17520bb4|2016-12-12|Eduard Valeyev|removed unused doc/doxygen.cfg
1acaf03478af9a121d1898339fc295dcfaf3728d|2016-11-30|Eduard Valeyev|amended ff6c1628f957aa803859bea65dd02a56d9acab1b
ff6c1628f957aa803859bea65dd02a56d9acab1b|2016-11-30|Eduard Valeyev|revived the CHANGES file
22601828e7925c979d019a4d524ef2c230aac51f|2016-11-30|Eduard Valeyev|sanitize Eigen includes to hush compiler warnings due to {older Eigen, picky compiler} combo
ccbbcb050efa6a59897a4fa4c28e617ede32a9c3|2016-11-23|Eduard Valeyev|1. read_dotxyz accepts boho-to-angstrom conversion factor as argument 2. bump to 2.3.0-beta.1
cefeb44b7d35484ce7111eb8a2c6ec345f0466cc|2016-11-11|Eduard Valeyev|bump to 2.2.0 (stable)
d870dc548d55f1420da920a5177f301e2c54e286|2016-11-02|Eduard Valeyev|workaround for <s|nuclear|s> integral with solid harmonics s functions, resolves #71
cc6f4edab09bb226d04e88d7189a43e9d83315bf|2016-10-28|Eduard Valeyev|1-e ints computed over significant shell pair list only
2fd6665cdff9c366561d435febd1920be8e86ad7|2016-10-28|Eduard Valeyev|Schwartz -> Schwarz
07e1bc97a991903e107365b14315bdec936ba3b6|2016-10-24|Eduard Valeyev|trivial cast safety issue
bb975af19149c38d607df4c222d9ad78c5080d6d|2016-09-21|Eduard Valeyev|fixed mistyped email address in README.md
08171fe74c1eeaa021d133fcd128a67a958751af|2016-08-21|Eduard Valeyev|streams are partially broken in c++11 mode of gcc stdlib 4.8 4.9 (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54316)
7d4fa72e66a1b61c575735690a1a9d6b2aadc613|2016-08-20|Eduard Valeyev|kidding me? how broken are gcc libs?
ae8bd164af51a0182c48daab0c490a3c4bce1f9b|2016-08-20|Eduard Valeyev|amended de361e0e0ae0de48fa728137a8ff01b3ffa0f93c to permit use of stdlibs of gcc 4.8 and 4.9
de361e0e0ae0de48fa728137a8ff01b3ffa0f93c|2016-08-19|Eduard Valeyev|use POSIX locale to parse basis set files, resolve issue #70
d0b90fbfb0bd69233946b844572e37c94e056b11|2016-08-19|Eduard Valeyev|Merge pull request #68 from jdwhitfield/patch-2
ef3049a36dfd95586705679c9b2f907810d3ced4|2016-08-14|jdwhitfield|Update INSTALL
33347d22752a0ec580160ee9d4b9587d66d27a0f|2016-08-10|Eduard Valeyev|added missing "inlines" to address #66
25cff0c715028d94c0b997ec811a11dc2d3e92f3|2016-08-09|Eduard Valeyev|amended 9d4eda4c61aed0510c2fe2eea96fe20eb010876c , although CXXFLAGS are always added to empty CXXGENFLAGS this is easier than checking cxx11 flags for cxxgen too.
9d4eda4c61aed0510c2fe2eea96fe20eb010876c|2016-08-09|Eduard Valeyev|fixed handling of cxxgen flags ... resolves #67
9acc121db4222cb29ced1fd8f062f4dbec1f8387|2016-07-25|Eduard Valeyev|minor re-format
ddaf3f97f538bb88e8ca125e1c6087ec024e9517|2016-07-25|Eduard Valeyev|generalized SOAD to support up to Z=53 (iodine); exposed atomic density computation
1ae04f7d75958eef3ab1d284720167478105cddb|2016-07-25|Eduard Valeyev|amended 32a286192eadf1ddbde2bd0fff8d81af8c940bec
32a286192eadf1ddbde2bd0fff8d81af8c940bec|2016-07-25|Eduard Valeyev|Updated element list, including most recent 4 provisional names (http://iupac.org/iupac-is-naming-the-four-new-elements-nihonium-moscovium-tennessine-and-oganesson/)
6aa8e982ea5fbf43fcd76b5558d4c122a728d4f9|2016-07-25|Eduard Valeyev|fixed basis set parsing issues with fortran floats (EMSL seems to mix 'E' and 'D' floats in Gaussian format)
75cf8b9c9e50ce8aa3e8399e07c94a8beb5b9561|2016-07-25|Eduard Valeyev|Removed duplicate definition of CartesianDerivIterator (vexes icc 2015)
28b1799d400e601e0f14fd9794c3548161daebdb|2016-07-14|Eduard Valeyev|#error if user-defined real detected by C++11 API, related to #64
125b8f8e05184f09f4b2dd564f485e0a78369305|2016-07-14|Eduard Valeyev|trivial re-format
db6df6d7d4f2e835de6047e0aaea87cb2ed750f3|2016-07-11|Eduard Valeyev|removed unused vars to (partially) pacify compiler with -Wall
aaad6e4c34240ec518eb127a23e7b765b6c48059|2016-07-07|Eduard Valeyev|Engine now supports r12 ints
37793eafdb7e5e6cde1dd05be512905943af022d|2016-07-07|Eduard Valeyev|minor cleanup
945f64e2d6ea240494e45904f8b6ece9b959babe|2016-07-07|Eduard Valeyev|double -> Real in GaussianGmEval
a6428b8d81c48061d7fcffdfee55f605d53d915e|2016-07-07|Eduard Valeyev|added support for r12 operator
a760486c15f432e1f1a9b39c62c5e8a705331639|2016-07-05|Eduard Valeyev|minor cleanup
99f16bf55ef3246cfa067662b70eaf3cda53258f|2016-07-05|Eduard Valeyev|Updated configure option documentation
14767aeb4b7c488155dc16ea3352bc23c6391920|2016-07-05|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
ac2e823c102fbc1a4a497b8204b6bd0873f86b0e|2016-07-05|Eduard Valeyev|introduced extra initializer for flop counters ... resolves #62
92bb4e64973aa5f95a33c3d3f5f1f393e03c95aa|2016-07-05|Eduard Valeyev|introduced extra initializer for flop counters ... resolves #62
592969cdaf7f21e41ece9b5ae8df5ef76b96be1e|2016-07-04|Eduard Valeyev|implemented initializer for flop counters, see issue #62
aecda60cf72e55503a5f5ef47804255459a1c5ea|2016-07-04|Eduard Valeyev|1. If --enable-fma given, make sure that CXXGEN supports C++11 2. eliminated lambda support check, assume generic C++11 test is sufficient
3c67f6dfbf0bbb6080d30d2499a403855242a3f9|2016-06-29|Eduard Valeyev|assert that solid harmonics-specific VRR is not used by mistake
9ee0739d5975a384bb3cbd3d053fe18af7b27908|2016-06-29|Eduard Valeyev|"annotated" asserts in Engine, added a few more to report errors more clearly
23dbe17c6306b9210584f6db34015942ce28201f|2016-06-28|Eduard Valeyev|Engine accepts any as parameter, with proper checking.
1478454956f03ded477284eb5f040b3ed4544739|2016-06-27|Eduard Valeyev|1. improved assignment of default operator params 2. eliminate implicit cast of std::any to bool to match C++17
2b36781e5242f38380ef64eca382ec223ec212b4|2016-06-27|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
5eb748087490683e80af0fa4e0ea20924eda1de2|2016-06-27|Eduard Valeyev|extra measures to prevent ambiguous copy and assignment in libint2::any for compilers and humans
7186717f7308c6c7e0de44f6dff3f6045f1bb248|2016-06-27|Eduard Valeyev|extra measures to prevent ambiguous copy and assignment in libint2::any for compilers and humans
2502e900d50be646346e190a758625824d685d5e|2016-06-25|Eduard Valeyev|minor cleanup
606f0d8fdc9caedae7e70e22e2af2e23c46fb735|2016-06-25|Eduard Valeyev|profile_Gm -> profile
9feac4fd235069888ccfa3a7b8d51de691669faf|2016-06-25|Eduard Valeyev|generalized dgemm profiler to rectangular matrices
477ffe8a4b12ef2c5ec1e423ca7800956cd60cb7|2016-06-21|Eduard Valeyev|added missing inline
41137be0aa0cf2e2b8ce55111b1b8165cf163fd8|2016-06-21|Eduard Valeyev|Engine::compute returns vector of *const* ptrs
63bf0eba20a0035b0b0b8828df70db4af7c83c65|2016-06-21|Eduard Valeyev|pacify clang
630f3434741da2260ac58ea8b15fa90ea54de5af|2016-06-21|Eduard Valeyev|Engine code can now be (optionally) uninlined ... define LIBINT2_DOES_NOT_INLINE_ENGINE to do that (you will need to make a source file that explicitly #include's engine.impl.h and compile that).
6e0037aaaed1eefac307fec44782848784a0b7f6|2016-06-15|Eduard Valeyev|df fock build uses brakets now
ad54445894da387225b7a01a2ba32e5dfc76df63|2016-06-15|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
af5ae322107094f20ad721b13667e2709de7a021|2016-06-15|Eduard Valeyev|2-body ints evaluation using 2 and 3 center brakets
877be93adf10bec294e34e9e10b4528843eb111c|2016-06-14|Eduard Valeyev|Merge pull request #61 from evaleev/deriv-engine
f3ac5bfcd707bc90c565c60e9082ab7b7f922b91|2016-06-14|Eduard Valeyev|added util Mathematica scripts
3f500cd964a82b18d4c49c47b6d3a1600cd77dce|2016-06-14|Eduard Valeyev|2.2.0: alpha -> beta1
11bb0ba634ecc83bd7b334af71a2d29a265745d8|2016-06-14|Eduard Valeyev|added make_point_charges
566032a7b36d0d2ff0f8ddf08488867d2e88c66b|2016-06-13|Eduard Valeyev|allow failures in clang build
878a4f550c6fe7b6f3d8abd41b9ea87c48ccdae7|2016-06-13|Eduard Valeyev|Merge branch 'deriv-engine' of https://github.com/evaleev/libint into deriv-engine
e0aad1a64f675bda732c0199a874ced729ca666e|2016-06-13|Eduard Valeyev|travis-ci: disable clang builds
edd9296a09f25e702ca84b35d4c0fce61e8fec7d|2016-06-13|Eduard Valeyev|travis-ci: disable clang builds
cb1e4cde6df60dc2e27df946f0d50a9717f0bb12|2016-06-13|Eduard Valeyev|travis-ci: (1) switching to addons:apt: for dependency installation (2) container-based build
5880b6142b913456a3854cc5aa643e3407954a8a|2016-06-12|Eduard Valeyev|Engine::compute() returns nullptr for first shell set ptr if all primitive quartets screened out.
5ba51b350cdafb226069fc72c554e01b66c7af2f|2016-06-12|Eduard Valeyev|hessians are done
99d359e56ff5bbb1ec593d45262645594d988df9|2016-06-09|Eduard Valeyev|Progress on 2-e hessian ... some elements in canonically-oriented H2 STO-3G are correct.
5872484e853772d629dedd3ce0040ca410d83f30|2016-06-09|Eduard Valeyev|1-body 2-nd geometric derivatives work
501923a5e5c73036bc5ee43fb39e037a05bd4e68|2016-06-09|Eduard Valeyev|cleanup of array_adaptor.h
94ae30fbbf610ca59f0c17616e36468d1dc563f0|2016-06-09|Eduard Valeyev|cleanup/clang-format of intpart_iter.h
2e463e5ccdb03afdd61ad56d0f2db0d76751aef6|2016-06-09|Eduard Valeyev|replaced memset with std::fill in solidharmonics
4b6c6cf2ac160ef55f1fb0f59021a3449e56090c|2016-06-07|Eduard Valeyev|multipole int derivatives do not use translational invariance.
37b271d05b51110fddb736f69c5d56fee552fa0c|2016-06-07|Eduard Valeyev|fixed bug where FMA scalar instructions truncated to result to int
e4e4025b84e74a19997628884733ece235d02a8e|2016-06-07|Eduard Valeyev|minor fix
c8c92733e1db674e6cdf73dae771d6979a494c46|2016-06-07|Eduard Valeyev|fixed test_eri
8a7220bbbb119194f3350215f102741376a59242|2016-06-07|Eduard Valeyev|fixed --enable-fma configure option documentation
18a4a5619e12b3aab93f18a8a53aef27fa1c991c|2016-06-07|Eduard Valeyev|1. Eliminated obsolete OneBodyEngine and TwoBodyEngine, use Engine instead. 2. clang-formatted and delinted (mostly)
8bacb71de63e60bcc9c87c01e6d1cc2eb59c72d9|2016-06-07|Eduard Valeyev|removed simple derivative fock builder (only useful for testing)
10861a3f756793c2d14bc5b650d4cdc0cc9f1a53|2016-06-07|Eduard Valeyev|travis-ci: generate 2-body gradients up to d functions
450ce27cab8328a983dca2a826b0a971bd826419|2016-06-07|Eduard Valeyev|minor cleanup
7c21a5b9906ad3d232e21fd848f729d945053a22|2016-06-07|Eduard Valeyev|improved asserts in engine.h
3145ac9efc4cad81df8c452fd347b17373fc7115|2016-06-06|Eduard Valeyev|forces work: 1. major API change: Engine::compute now returns a "vector" of ptrs to each target shell-set 2. added HF force validation
a7dbb07362351c3c71624385cebef3512cd1c634|2016-06-05|Eduard Valeyev|reorganized headers: all non-integrals headers now live in libint2/util
44833cbbefa8382f5a5415f6938dcfd2daec81fd|2016-06-04|Eduard Valeyev|amended 91ede893905ae07a7bf51cb77f00de3ff0965e54
6f2727013daa3dd1987c4165ede48eb37f739fac|2016-06-04|Eduard Valeyev|Misc fixes
91ede893905ae07a7bf51cb77f00de3ff0965e54|2016-06-04|Eduard Valeyev|generalized DerivIndexIter to an integer partition iterator
78043fa4c78462962fa2656c047ec53eec59704a|2016-06-01|Eduard Valeyev|debugging 2-e derivs in Engine
d7d0c463698d5a7950ca4f4ba1767f1201efa7f4|2016-05-28|Eduard Valeyev|full sets of 2-e deriv ints are now computed using translational invariance
dad5b633c881f9f961690a705018bc1994530c09|2016-05-28|Eduard Valeyev|translational invariance relation must skip "unit" (i.e. dummy) functions
1487899e26b772958a645d037080b282a5273400|2016-05-28|Eduard Valeyev|test with gcc 4.9 and 5, abandon gcc 4.7 (too old/picky)
e86876251dc0458d95f0fa8e431fcbbe0eab6d27|2016-05-28|Eduard Valeyev|constexpr mostly uses auto now
e8fc6869d3154115afacf5d0e580919280cfd83f|2016-05-27|Eduard Valeyev|throw exception if opening xyz file failed.
5d57673d0cbc50adad99405acf02b1a781fb779b|2016-05-27|Eduard Valeyev|cleanup
2a095db7f93828ba1b3bf266297fa656aef638c0|2016-05-27|Eduard Valeyev|removed unused VectorBraket
994f805884e45a922edfd0f4e59b6589ff18223e|2016-05-27|Eduard Valeyev|Preliminary implementation of translation invariance relation (only ~optimal~ for 1st deriv), activated for 1st derivs of kinetic and multipole ints.
0885e57f48efd7d1f380cb12f4310948eb99d3c8|2016-05-19|Eduard Valeyev|fixed bug in libint2::initialize() that prevented multiple initialize()/finalize() cycles. Hat tip: Gustav Baardsen <gustav.baardsen@cma.uio.no>
c84f44996cc6b04646a3fca95d82b3788f1d1dc9|2016-05-18|Eduard Valeyev|fixed typo in help message for --enable-eri2 , closes #59
87037d21b04fe46efee42d8f8be00c0974f2719b|2016-05-18|Eduard Valeyev|switch parallelization of the rest of HF++ to lambdas
eb6f51dfc52fc761172dbe1064bcc31af6e0f0c1|2016-05-03|Eduard Valeyev|doc cleanup
76f3165fa71350e2c073670efb8e5bec4d056e7c|2016-05-03|Eduard Valeyev|assert shell lmax in Engine::compute calls
f0b46533b493a1424b8947431417436faade8260|2016-05-03|Eduard Valeyev|fix bug in Engine move ctor
87680e1d7fe8395c443644534daad8abf9e32535|2016-05-02|Eduard Valeyev|exception class dtor needs noexcept with gcc 4.7
9c5a83f80c51f45a8964e67111250232dec1100c|2016-05-02|Eduard Valeyev|amend 91b0e49dfd1cad5dcb362a492b1f90f84f5c4ed7 to pacify gcc 4.7
91b0e49dfd1cad5dcb362a492b1f90f84f5c4ed7|2016-05-02|Eduard Valeyev|Replace lmax check assert with exception throw
6867c2e605b98ff8c2f6076827ff41b34ccd5f2e|2016-04-29|Eduard Valeyev|Do not assume variation macros in build_libint.cc
044cc47be23cfb79ccbcc7fa3b408929ecb0fa31|2016-04-29|Eduard Valeyev|Update travisci_build_linux.sh
c6be1161c8dd0b5e4e5ec1bd749a8709b909b101|2016-04-29|Eduard Valeyev|Update travisci_before_linux.sh
532d97ebc16f8b7e00a0ff33ab9502458efcb2f5|2016-04-29|Eduard Valeyev|Update travisci_before_linux.sh
4312ccab33ce132676e71005ddb6cf00ea1b47ae|2016-04-29|Eduard Valeyev|Travis-ci: downgrade to clang3.7
6d8d895d4c9e193c1225876bc8baa3b69d900096|2016-04-29|Eduard Valeyev|Amended previous
884910451c385e99c8cdeee2a23c304e6d726388|2016-04-29|Eduard Valeyev|travis-ci: upgrade clang to 3.8
8d9c20b457eb248c7a585c7f527fc802c3d99009|2016-04-29|Eduard Valeyev|amended 70f4703d8a934cbaed3078196433525b93402cb4
cda91c7a3a14f074f37e3d9ca69c27cc7749c4d4|2016-04-29|Eduard Valeyev|Merge pull request #58 from swillow/master
70f4703d8a934cbaed3078196433525b93402cb4|2016-04-22|Soohaeng Yoo Willow|Update hartree-fock++.cc
a0324f7d4a313b5e343b8e5a48bbbd94eb29cca7|2016-04-19|Eduard Valeyev|atom.h now includes chemistry/elements.h
bfe3b321ef437c3626f0a07075bcfc17ca3827bd|2016-04-08|Eduard Valeyev|universal engine now supports properly 2 and 3 center 2-body ints. No derivs yet.
066c909c53792c73850a70ff239a15bfe8b1b0b0|2016-04-07|Eduard Valeyev|minor doc fix
0719c6a5d1f925dcf11976166a108ccaba0f8b6e|2016-04-03|Eduard Valeyev|slight improvement of schwartz build
dc44f522c2f189b79c22e3e24715b06902185a8c|2016-04-03|Eduard Valeyev|switched df fock build to Engine (but still 4-center due to legacy mistakes)
f8720c8bfffca4e3c00dbb2b9823d1cfc7af298b|2016-04-03|Eduard Valeyev|Basis::max_l must be signed to support default
25a739b8bc58ca83e077108bf565555e47edff69|2016-03-31|Eduard Valeyev|Merge pull request #57 from pchong90/cabs_basis_fix
26c5c85b65e7bb04de5f25414828f9a33b37bf74|2016-03-30|Eduard Valeyev|added missing (on Linux) <memory> header
ac79accc162efc182449359082f81054ee6308da|2016-03-30|Eduard Valeyev|minor optimization in hf++
058e8dddfddb4ff8aa5afc65752468213fe19863|2016-03-30|Eduard Valeyev|amended 2b48e349c37076c90630ef51e901269b39eefc1d
b0b1e73b4d60d43ba13c07f50d03da059409a60a|2016-03-30|Eduard Valeyev|eliminated init/cleanup to non-deprecated initialize/finalize
01df0e8e4f23e324c863fb009d104747276889f3|2016-03-30|Eduard Valeyev|refactored static initialed flag handling in libint
2b48e349c37076c90630ef51e901269b39eefc1d|2016-03-30|Eduard Valeyev|moved cxxstd.h to util
175486d084f225ed1be88a9c1ec9b81c8d990686|2016-03-30|Eduard Valeyev|factored out definition of DEPRECATED
57ff4e521cb46eaad304ab9654fe4b09fe527c93|2016-03-30|Chong|update cabs basis sets from "https://github.com/ValeevGroup/mpqc/tree/master/lib/basis" files generated using python script "https://github.com/pchong90/WorkScripts/blob/master/mpqc_cabs_basis_to_g94.py"
e2390047758d2bd964dc873b244d9dd9af913c11|2016-03-30|Eduard Valeyev|Update README.md
09a2910fd819440ba4ecdf26b27cf9f5f807fa85|2016-03-30|Eduard Valeyev|switched hartree-fock to Engine
f3de5ad3dbc8b143af3c3d5a172723a8e79bc3fa|2016-03-30|Eduard Valeyev|minor cleanup
86b3d11a7c2355f3acc4cb55471108904bf3c6aa|2016-03-30|Eduard Valeyev|switch to header-only static initializer idiom, resolves #56
3d40d96320db7d3a770dd5454949cfd5b6fc5ce8|2016-03-30|Eduard Valeyev|Fix range overruns in Engine::init_compute_ptrs
f0e4e9b0394dc96aefd15dae220a89668d1b857f|2016-03-27|Eduard Valeyev|removed obsolete checks in configure
5f235459ba7441ea6a34acb839bfd7a025ca2eee|2016-03-27|Eduard Valeyev|check for argument-less cxxflags configure options, to prevent scenario like #55
721b14053825233bfa607352d1a4e4cc86d0ff57|2016-03-27|Eduard Valeyev|2.1.0-stable -> 2.2.0-alpha
6101f056b5fa2ed0ca4ef5556cc7fd0e44bead1b|2016-03-27|Eduard Valeyev|minor dewarning
44d0d93f6993a2147b4f25d51f76ace900894e5b|2016-03-25|Eduard Valeyev|Merge pull request #54 from evaleev/universal-engine
3bec712c62727da36098377636fa372b24515a28|2016-03-25|Eduard Valeyev|minor docfix/formatting cleanup
fb43ae45ce6301781724dcfce28bff021cd1dfed|2016-03-25|Eduard Valeyev|minor boys cleanup
294db65b475816082fe6622a08e64a22a82986db|2016-03-25|Eduard Valeyev|add -DNDEBUG to default optimization flags (especially important for Engine to avoid overhead of "any")
91986c31570ba35e4e7f15d801f20ee6855e5e6e|2016-03-25|Eduard Valeyev|all 2-body ints work now in Engine. No derivs yet.
393c544820daf635440e8b2556a14af17c3cfdfc|2016-03-20|Eduard Valeyev|universal engine receives correct max deriv order
13fd33ee290ac122cab862c36b56cba44234a0ed|2016-03-20|Eduard Valeyev|amended 20225957ccb7f57097c7837fd3af07a8f37f0f91
20225957ccb7f57097c7837fd3af07a8f37f0f91|2016-03-20|Eduard Valeyev|Engine works for 1-e ints
b43a4b8b8572d5f65be33a1318462eaff0f21db6|2016-03-16|Eduard Valeyev|Minor step toward unified Engine
adeeb9cf3332a46952a07683f95edd35a3fe4e34|2016-03-15|Eduard Valeyev|install compressed_pair.h, resolves #52
3cdb29ae523302ae6cdbd868cb10013121cd8dfa|2016-03-15|Eduard Valeyev|api_basic_compile_test now only does schwartz-style computation, but on all 2-e kernels.
5549f8721891d2eb3f5ce86be184eb2e46d3520b|2016-03-15|Eduard Valeyev|Generalized Schwartz builder to take any 2-body kernel.
397043b4926fb66d3efa5c58092dc5c02480bfce|2016-03-15|Eduard Valeyev|fixed thread-safety issues with the core ints in TwoBodyEngine<cGTG_times_Coulomb>
b7300b58b0e9dd371146df3f40564762b0cf3623|2016-03-15|Eduard Valeyev|added util/compressed_pair.h
8dd5287186850b1243e854ad1ca4895b1cc46db4|2016-03-14|Eduard Valeyev|removed ugly GmEval::scratch_ hack in favor of EBO-optimizable private base
7ea218c24df8033cb8827fecaeae096280f9f128|2016-02-11|Eduard Valeyev|Further refinement of engine precision control.
ea6272f94fd44f4442d91f22717a34fa53c01b2b|2016-02-11|Eduard Valeyev|incremental fock precision ++ (totally empirical, now takes condition number into account)
5675b29be17ef4bca70e5473b60b67d6c9425cc9|2016-02-11|Eduard Valeyev|refactor
e9b557ce4641dfc2de4d99b093119ea8a3cef341|2016-02-11|Eduard Valeyev|By default *for now* assume that can handle condition numbers on the order of 1/epsilon. Probably 1e10 is where things start breaking down.
da125e35d5af1dda57c8486ef00e27ed011a71b6|2016-02-11|Eduard Valeyev|precision handling inside fock build is fixed
1d8305768529ca56688437d900d0b69908b9368f|2016-02-11|Eduard Valeyev|comment++
735cb467c6c492c8112086881853319961011656|2016-02-11|Eduard Valeyev|SOAD fock matrix should be computed more accurately than I ever thought
b4a5cc0634f65731f786f9db58886145500b0521|2016-02-11|Eduard Valeyev|geninvsqrt enhancement
6a37e6cc92bae62f9fe5e46be64027ccdef7b9e2|2016-02-11|Eduard Valeyev|comment++
00d4d2c0227792dcd214df83bd924b892ed206f6|2016-02-10|Eduard Valeyev|Merge pull request #51 from pchong90/master
d15c4b245f22b55853e407c9ccb3c3ab8f71981d|2016-02-10|Eduard Valeyev|Switch to canonical eigensolver shifted the reference energy by few picohartree
bfb815a0aad38dfba38cfe813d226200bb9e2625|2016-02-10|Chong|rename basis files using lowercase
3508b62c1bd157ed9b4e81a0fa6ce7b7ab9be6d2|2016-02-10|Eduard Valeyev|Switched to robust generalized eigensolver (canonical orthogonalizer by default).
9fb43b7f92358c3d601cd1efcb085f096e81acd4|2016-02-10|Chong|parse CABS basis set name corretly
fe6ff8cc1964c88addcef64b9865abc691bae918|2016-02-10|Chong|added CABS basis from OptRI series of basis sets
ef833c882da831d46301d933e836afe71d5ca09f|2016-01-30|Eduard Valeyev|Merge pull request #50 from evaleev/pullreq-issue48
25c5b3c47ef79ec8b776897f4af79765bef6d60f|2016-01-29|Eduard Valeyev|added asserts to avoid user errors like in #48
410fccc7e5530538c23c16da145ce0f0fdf0c21c|2016-01-22|Eduard Valeyev|Amended 90716384c4101932b620a11d8b7b9bcfeb2dc5c8
90716384c4101932b620a11d8b7b9bcfeb2dc5c8|2016-01-22|Eduard Valeyev|Added def2-j and def2-c basis sets
17a7ad656fefeb9bf515aee7dd56899390ac1010|2016-01-22|Eduard Valeyev|updated def2-jk basis sets
d97cbb7b3bd769370cc5e392b4c2164c3720d324|2016-01-22|Eduard Valeyev|More robust gaussian basis file parsing
9c7daab759e16297d3fa44c73a54dbffeca79278|2016-01-21|Eduard Valeyev|added def2-..VP-JK basis sets.
ba746ae03f9a96e245730102b25a63c5331bfdcd|2016-01-21|Eduard Valeyev|skip comment lines in g94 basis set files
207d6ecfbab6c98e6631ea5851f25431e625bc42|2016-01-19|Eduard Valeyev|Merge pull request #47 from pchong90/master
58aa3afb2dfd5a93f4cb14b783b2f2d952b0cdf5|2016-01-19|Chong|added missing header
f1eadf4bcf15b4926007b90a1eff39152a182e64|2016-01-18|Eduard Valeyev|engine deriv rr prefac optimization
2be79a528ee5943d93d0d6650d9a21c98559354f|2016-01-18|Eduard Valeyev|added canonical orthogonalized to hf++
667da8d4b4fc86c4d9b54ad9ae60f5a3e8717951|2016-01-18|Eduard Valeyev|misc doc fix
1f82c27a6b29a863f35f19f28180d3f05e91bb0a|2016-01-04|Eduard Valeyev|Turn on shell set unrolling by default (threshold=100)
a244ab0afdebd753aad0849bb11cefd544e1d004|2016-01-02|Eduard Valeyev|added 6z basis sets
cfa40a52b83b3a21296193543e2ef7a51ba75ed6|2016-01-02|Eduard Valeyev|aug-cc-p* basis sets are constructed from components. aug-cc-pvxz-ri now work.
3f1c16c158c3866ee6eb2d01ce371ca4019dccb2|2015-12-22|Eduard Valeyev|Addresses the bug in #45 ... closes #45 , @pchong90 re-open if this does fix the problem.
c48b3775f8fa4312a320e19b9d74829dc914b9ae|2015-12-14|Eduard Valeyev|Fixed range overruns of int64_t in solid harmonics coefficient computation. Should resolve #43.
8985e17ab63d5f24866c5455537c5c179c78f2a1|2015-12-09|Eduard Valeyev|Removed unused includes from eri.h so that it can now be used "standalone"
7c566f5781492fd80d90c36c8cae9a6de01e3cd0|2015-12-02|Eduard Valeyev|Minor comment fix
1b78459b4eb95c86d6c8fb23ab4cb2e648259c73|2015-12-02|Eduard Valeyev|Fixed performance regression of multithreaded fock build introduced in d30172c9b72b75d8c515143ac28a60039d2823f2 (HT @calewis)
827fae95fd8b150bfde51ea9a86deca237f57ec7|2015-12-02|Eduard Valeyev|Updated ref values of forces and multipole moments with higher precision values, adjusted tolerances in validation suite.
d41bb0087ef99d26c3315d1558e7519de01e05fe|2015-12-02|Eduard Valeyev|Reduced verbosity of print output from the compiler
e29841e0038f9d3114ff2c30b6fb736fe339e5d0|2015-12-02|Eduard Valeyev|Fixed bug in schwartz/DO ints computation introduced in 3aec815 , closes #42
49abddd9410ac3f46080b8235c1bbae5e83d9bde|2015-11-29|Eduard Valeyev|Amended abe42cb38322f086858893c1e2cc17358b7e15c5
abe42cb38322f086858893c1e2cc17358b7e15c5|2015-11-29|Eduard Valeyev|bumped up libtool to 2.4.6
dfc65d1c5beac2a98b9e4ca40fdae2fa8f8cb9e8|2015-11-29|Eduard Valeyev|Fixed concurrency bug in shell pair list computation
7f5382ee361898529033f408ed503447fbccc055|2015-11-29|Eduard Valeyev|Added python configure checks
600a10775f60abc1639a00a91198d83aeca079b2|2015-11-29|Eduard Valeyev|Added pthread support to C++ test in exported lib
22763fb4375be9ecf2be73a15ab32aa905231b8b|2015-11-29|Eduard Valeyev|Amended 5b414190fbfab189abe8d7f55f4f22b44ccfe9b5
5b414190fbfab189abe8d7f55f4f22b44ccfe9b5|2015-11-29|Eduard Valeyev|Fixing HF validation in exported build
05aeb4063e164d1880685cc0d488ab09c7aeecf4|2015-11-29|Eduard Valeyev|Replaced unordered_multimap<int,int> to unordered_map<int,vector> to maintain storage order
edd451e9595d2345378f05fdffd3fc60e473d360|2015-11-29|Eduard Valeyev|Refactored general fock build using lambda for C++11 threads.
577db9a3b0bd1f308eff6061edf8683408c14a8d|2015-11-29|Eduard Valeyev|Fixed bug introduced in d30172c9b72b75d8c515143ac28a60039d2823f2, related to assuming preserving storage order in unordered_multimap
69dd6e11e4c6193ff3fc0cf5cd8da48b50258885|2015-11-28|Eduard Valeyev|Revert "travis-ci: debugging shell-pair-list concurrency issues"
dc2167c6445a0143e17b21596ef12ee4b077db34|2015-11-28|Eduard Valeyev|travis-ci: debugging shell-pair-list concurrency issues
51fc0c9b7dfc369d68f01baa59cd2d9f86e6ba5f|2015-11-28|Eduard Valeyev|hf++ failure is not ignored by make
4d6eba5b9599104ff4ef240b5f945f5dea0200c4|2015-11-28|Eduard Valeyev|Cleaned-up validation
ef67f90eeb88d4a496e46f21286cfde0d8962f1f|2015-11-28|Eduard Valeyev|Simplified and strengthened validation of HF tests
276a477ac0e8b7aadc7ee174c470c37e2a99af80|2015-11-20|Eduard Valeyev|Amended d30172c9b72b75d8c515143ac28a60039d2823f2
d30172c9b72b75d8c515143ac28a60039d2823f2|2015-11-20|Eduard Valeyev|Most-used Fock builder now uses non-negligible pair list (i.e. now it's properly O(N2), additional benefit from O(N) should be small).
e716ac3f7746f9cc0ce100729ba385317b183c62|2015-11-18|Eduard Valeyev|Bumped required autoconf version to 2.68 to be able to use config.status --config. Resolves #41.
fbcbb46af54a36ff7092f927895cb827ba641501|2015-11-16|Eduard Valeyev|Cleanup of build system to produce less output and hopefully allow travis-ci tests to run
6143c61d064046133e16fd75484c2aaacb94cd02|2015-11-16|Eduard Valeyev|Update README.md
49d105f61f5b147a66a7e4301496f0deaf683777|2015-11-16|Eduard Valeyev|no message
6dee243594db9579bdb3031f732ecf44ff94ccf8|2015-11-16|Eduard Valeyev|Update README
d195406f39a77f009183cb579db1c3228acaadce|2015-11-16|Eduard Valeyev|Amended b610624c275edd722839228ca7f6ac2752e61f49
6f0152fdbbeb96378b75af6e10734ff41d735ddf|2015-11-16|Eduard Valeyev|travis-ci: enable validation of 1-body derivs in HF++ code
354132a0c5b7250c25ac1d2e9f3a056ad48d95d6|2015-11-16|Eduard Valeyev|Added unvalidated one-body force computation
b610624c275edd722839228ca7f6ac2752e61f49|2015-11-16|Eduard Valeyev|OneBodyEngine can do 1st derivatives now. Multipoles not yet tested, overlap, kinetic, and Coulomb are ok.
bba8a145135d808de508caa9bce28becdbf1dd39|2015-11-16|Eduard Valeyev|Fixed the use of translational invariance for one-body ints derivatives of coordinate-dependent operators (multipoles, point-charge Coulomb)
af02ba5e823ffe4d0141278adabe44b76964ab29|2015-11-16|Eduard Valeyev|Added method to force (post-construction) BasisSet to cartesian/solid harmonics (only for L>1).
cb2ac69299ebb14b9426665389a36faf1d88c351|2015-11-12|Eduard Valeyev|Removed unused relations from strategy for overlaps
f5722ac36b28efbfbd8219ec1fc7914bc909fc83|2015-11-12|Eduard Valeyev|Derivative kinetic ints also check out
7c3571b52aab05e26b9d90ff3b33336d6aa25064|2015-11-12|Eduard Valeyev|1-st order geometrical derivative overlap ints give correct Hellman-Feynman force
3570dee4ff345d502b14d1e4a48b2060118cceac|2015-11-11|Eduard Valeyev|Starting conversion of OneBodyEngine to universal engine.
108fe5bb7db11cc4178d366414003fd2c0064571|2015-11-11|Eduard Valeyev|Starting conversion of OneBodyEngine to universal engine.
1f9089a4ef23c1f23bcb27c01b6d3582f0fb9e1d|2015-11-04|Eduard Valeyev|Added debug output to strategy application
71aaf8ec8e8761c5684149e0ba18bea15a6dc7fa|2015-11-04|Eduard Valeyev|Added pretty class name printer.
de720d0ed8e64234246b07f427bb0e857ae67e86|2015-11-04|Eduard Valeyev|Fixed key ranges for 1-dimensional Gaussians
817bec8ee002ab1f43e3c4a95c026530234b5691|2015-10-31|Eduard Valeyev|Minor formatting fix
3aec81594763dace3d053574b2ad7a2d4f658c56|2015-10-30|Eduard Valeyev|generalized Schwartz ints evaluator and added differential overlap (4-center overlap) ints.
6f4038d0b4aca00623e08600675adce2ce055cde|2015-10-29|Eduard Valeyev|Added new 2-body integral kernel, Delta (delta(r1-r2)), used to evaluate 3- and 4-center overlap ints.
52a6ecb60490b8ce861468aa5a365ade38a293eb|2015-09-14|Eduard Valeyev|Finally added df-based build ... define LIBINT2_HAVE_BTAS, add -I for BTAS library, and -D_HAS_CBLAS=1 to enable BLAS support
06613e84fade0e0b1262ed6fa8ee125b5ec32c65|2015-09-14|Eduard Valeyev|Added BasisSet assignment oper
e2d9b1b4fc16ff3bd29e58a0b0e8b9000ffbcd64|2015-09-14|Eduard Valeyev|fixed bug in BasisSet::shell2atom, hat tip: Soohaeng Yoo Willow
b6aaf55eb037ec8d9f0e90b4e9219a01d86d3818|2015-08-28|Eduard Valeyev|amended f4177b7e5adca65f871e8c834be857b11f73d3d0
f4177b7e5adca65f871e8c834be857b11f73d3d0|2015-08-28|Eduard Valeyev|extra verboseness for the Intel compiler 15.
2128f8240ac0b8f285c63b14c11238c3e946bb2d|2015-07-18|Eduard Valeyev|Added Def2-SV basis
58db030a905866011bed7379cf292d536688f7ef|2015-07-17|Eduard Valeyev|Merge pull request #38 from pchong90/master
4390bedc813effdf7bb66c4b7ec6b48c8bf791b8|2015-07-17|Chong|add cc-pvxz-f12 basis set, tested
5106487924dd08e0f99bac2723b2367f88e13c13|2015-07-16|Eduard Valeyev|Merge pull request #37 from jdwhitfield/patch-1
753112ce6e143fe610579c6e38028e51103f6172|2015-07-16|jdwhitfield|A missing comma in the example
ffbce62c62451e423bfe9e4a115a3b2f250c6729|2015-07-10|Eduard Valeyev|sync up to switch to @evaleev@ old laptop
1ce2ac45f52ad04f5d24068594ca4f4792766939|2015-07-08|Eduard Valeyev|Started to replace overlap with multipole<0> operator
795ab482d6c9acaff3b592373f5e00279fbefd18|2015-07-08|Eduard Valeyev|Flush cout to be able to detect a hung build.
9143c91baff74aaeb8d265d49714b3f76704880e|2015-07-07|jdullea|Merge branch 'master' of https://github.com/evaleev/libint
cd1c65f56338451fc84bd029963caab6133f9bbc|2015-07-07|jdullea|changed so there is a funciton to reduce the VectorSIMD, very little change that this will be the way that it is done is final code \nthis is likely a slow way to do it
7ba98d6f08836f17805541ed43810df8f1623af1|2015-07-07|Jonathan Dullea|Update test_eri_rys.cc
cb307dadad1f4e67d140c522ac1dd08fcb4591eb|2015-07-07|Jonathan Dullea|Update test_eri_rys.cc
f820320619813630bd4e495032adc6acbec426a0|2015-07-07|jdullea|Merge branch 'master' of https://github.com/evaleev/libint
09bf324f2fa185fd16a5e60c42c21154ff6729b9|2015-07-07|jdullea|Jon's recent changes.
e33c2b6cfafe573c0d5969d06af41f23c9fab8b3|2015-07-07|Eduard Valeyev|improved formatting
72c69556a64601558c9ff4476249f4cbbdb3c891|2015-07-06|Eduard Valeyev|DG::handle_trivial_arithmetic now properly handles corner cases (1*1, 0+0, etc.). Closes #5.
5d941a5fab014590a47565482f751ff6af4990ca|2015-07-06|Eduard Valeyev|Added compiler core tests to the Travis-CI build
553307ced65701574120ac14e2dc12dfd1eca7a0|2015-07-06|Eduard Valeyev|new method: BasisSet::shell2atom
46c68b1b064afa44a086fc515ebff8e1e32b63f2|2015-07-06|Eduard Valeyev|Minor cleanup.
24bfe65e5ce7d7f3bba82f1ff06daa755368cbca|2015-07-06|Eduard Valeyev|Switched precedence order for geometric derivatives and operator components (only multipole are affected so far, should not affect anyone yet).
96c9e6d4458132658be27d9fc80d97f90f04e903|2015-07-06|Eduard Valeyev|Clarified an expression in libint2::num_geometrical_derivatives()
fbb304bac2234a0b6c34dab3230619bb93d447e4|2015-07-05|Eduard Valeyev|Added a couple of checks for deriv orders in C++11 API.
555b3b37b647ce219d9eff4356a296826b48210e|2015-07-05|Eduard Valeyev|Fixed BasisSet move actor
52cfb21e2f58e4eac3b90b6b8ef682a168f0f6b8|2015-07-05|Eduard Valeyev|HF test can only run wit standard shell set (but any ordering).
7b0962732090763b16e9eafefbfe27bd392bad11|2015-07-05|Eduard Valeyev|fixed processing of LIBINT_SUPPORTS_* macros
54fb92968796d8d0ac8b78cc9f88c2aef4043701|2015-07-04|Eduard Valeyev|quadrupole moment check should now work with nonstandard orderings
0c688637e7fe5d2227e1ef0f1b0f675402322bf9|2015-07-03|Eduard Valeyev|C++11 API now can be used with nonstandard orderings. quadrupole ints test is likely to fail.
5ca54ba3a2e99768da24af59a5c82b48394a6825|2015-06-29|Eduard Valeyev|Added moving move's in Engine move ctor/assignment; formatting
b36c672be57fda1af152470eeb2540a7486c96f0|2015-06-29|Eduard Valeyev|Fixed bug in OneBodyEngine move assignment
cf3b76409c70ffd49220f9e9f4757d03332af6a9|2015-06-29|Edward Valeev|Updated for intel 15 (move ctor and assignment cannot be "= default" ... autogeneration is fine apparently + other fixes)
9f7c5ca7a7ee646a810a3b40e9b491dd05b85031|2015-06-28|Eduard Valeyev|amended a2f0b4081d76e342d24af75e895ad82bc5cae561
3abef2da2f959657f1c3af70192c780b168e4d7a|2015-06-28|Eduard Valeyev|Amended 57ae201ad06c11db6992d85191e72867eb1761a8
57ae201ad06c11db6992d85191e72867eb1761a8|2015-06-28|Eduard Valeyev|Removed const qualifiers on returns by value
395fe6d32f734bd6eda7dd8e1aa18cea47a1d578|2015-06-28|Eduard Valeyev|included missing Eigen headers in diis.h
645e200ed1dde89bfc3c493ab0079592fa63c056|2015-06-28|Eduard Valeyev|c++ version checks are all performed via LIBINT2_CPLUSPLUS_STD macro defined in cxxstd.h
a2f0b4081d76e342d24af75e895ad82bc5cae561|2015-06-28|Edward Valeev|fixed bug in cxxstd.h; now using it for slightly more robust C++ version checking in configure
a4ed2fcdc1e2ae1b040d9bdd0e5246776f1f8052|2015-06-28|Eduard Valeyev|(improved) cxxstd.h no longer asserts the standard version
96124a6bff1afcb3fc1e4196054ed46a44c52d88|2015-06-28|Eduard Valeyev|Minor refformat
fec5f4bed62e7727f5dadb82f595804fd2ee2dfc|2015-06-27|Edward Valeev|Added more robust c++11 check (against standard intel defines __cplusplus to 1)
99dd9204aea1c4472e8d29bdde3bb126b22a7bd7|2015-06-17|Eduard Valeyev|Delete updates
840da33bd103ead6e0f1b616873bf93c1f5b8429|2015-06-17|Eduard Valeyev|Delete updates-libint2
ee3470264018d0ce66cfd103cb3ca1f9619e4235|2015-06-14|Edward Valeev|Misc changes for gcc5
41567baa3afe4247bdf122083b3068699ecc02d4|2015-06-14|Eduard Valeyev|Remove comments alluding to the bug fixed in ae8150093833de8317d9366064d5f0d30b8014b4
ae8150093833de8317d9366064d5f0d30b8014b4|2015-06-14|Eduard Valeyev|fixed long-time CTimeEntity<Real>::key() bug ... resolves #36
36c709b62defae9536785cbe3d50489285e76e3c|2015-06-14|Eduard Valeyev|minor cleanup
d945e06e83b1d2e646463569ea03aee307b2df62|2015-06-14|Eduard Valeyev|fixed stupid typo introduced in 4eb2485046d051638342a886f6642cb265a0aa96
32e42378758efda2d5abbe4236c46dc658d423af|2015-06-13|Eduard Valeyev|Amended 4eb2485046d051638342a886f6642cb265a0aa96 to satisfy gcc 4.7
6c209367c0f09613a5f801db08c38ce5e73f853e|2015-06-13|Eduard Valeyev|Ensure posix_memalign is successful.
4eb2485046d051638342a886f6642cb265a0aa96|2015-06-13|Eduard Valeyev|Amended 2d4d0b59ff4372bfed44776b3fa78a6db71cfb6d to satisfy gcc 4.7
2d4d0b59ff4372bfed44776b3fa78a6db71cfb6d|2015-06-13|Eduard Valeyev|Amended 7b89fb33831fa23ee3d62a4742e931d774287f5e
7b89fb33831fa23ee3d62a4742e931d774287f5e|2015-06-13|Eduard Valeyev|Shell::unit() returns a ref to singleton.
c67ed09b204824114e583f499a000729f038bf05|2015-06-12|Eduard Valeyev|Amended 33a8aebe9caca524b9f10854c82cce0e3d58e878
ffa5b4806a76e9afbf12627f6559a22f632fb4eb|2015-06-12|Eduard Valeyev|basis set can be specified on command line now.
aca1ae49e31a0526aeca059b8d4d56bf7d055dee|2015-06-12|Eduard Valeyev|Added missing copy/move/assignment defaults to Shell and OneBodyEngine
7ca6dee48791d419efc9fa888e7bdc35bcc9be47|2015-06-12|Eduard Valeyev|Fixed copy constructor of OneBodyEngine
33a8aebe9caca524b9f10854c82cce0e3d58e878|2015-06-12|Eduard Valeyev|Fixed problem with Shell::unit() introduced in 4784c89b70a558c4043264e585076c5591cfbaeb
b2843c5583ef9f5a65fc74a9bbcb4270354eedc9|2015-06-06|Eduard Valeyev|travis-ci: lowered quadrupole moment validation tolerance
b62872f090afe09c80433c4727ed5a4327de16a9|2015-06-06|Eduard Valeyev|travis-ci: hushish enum comparison warning coming from Eigen.
44dfcef9f3759129d8d019d857902f42e33f5410|2015-06-03|Eduard Valeyev|Reverted bc81e940f8bd7c83d787cb247ea7680354a46781; lowered multipole ints validation threshold for tests of exported lib.
bc81e940f8bd7c83d787cb247ea7680354a46781|2015-06-03|Eduard Valeyev|Bumped conv in hartree-fock++ to increase precision of multipole moments.
4784c89b70a558c4043264e585076c5591cfbaeb|2015-06-03|Eduard Valeyev|1) no need for explicit renorm() call any longer 2) Unit-normalize shells by default ... to revert back to the old behavior do libint2::Shell::do_enforce_unit_normalization(false) 3) checking dipole and quadrupole values from hartree-fock++ less tightly since it turned out they were only converged to 10 digits.
a6b1105642bc9ffd7dd564e96dbb22bbd86a0fd1|2015-06-03|Eduard Valeyev|Use Gaussian convention for forcing cartesian d functions in some Pople basis sets (3-21g, 4-21g, 6-31*g, 6-31*g\**).
1a15a86ca5066062ddfa7d76e60af7d0b2463fff|2015-06-03|Eduard Valeyev|added 3-21g and 6-31g** bases
8ef27a4f3445fd406ca738b226ea7142fb13201e|2015-05-28|Eduard Valeyev|Added timers to rys test
8c677906eba2ffdde66d406f696566c6f3f49dbe|2015-05-28|Eduard Valeyev|Boys engine profiling uses "random" T values from [0,30] interval.
3c5c2d87e47d59dc1b63a9162d26f4006c070f12|2015-05-28|Eduard Valeyev|Added 7th-order Chebyshev Boys engine. Much smaller, but does not seem to be any faster than 3rd-order.
a155e6255234c2c4ff39f515ddef394594b9b08b|2015-05-26|Eduard Valeyev|1) implemented generic build for 1-d GTG ints (path to Rys) 2) added test_eri_rys ... currently requires libroots OR total L=0 or 1.
742695f85fb9d9a40ba200ddcef04690025f867e|2015-05-21|Eduard Valeyev|Re-amended bd5f08b8cf3e2a37bd6591047caf8b04f514ff15 to use proper one-body operator types
c1171f8c0c33a9adf85a5d402cd6a512ea39d563|2015-05-20|Eduard Valeyev|Amended 3c65d60 to support compilers without variadic macro support
3c65d6047b1a62a0f6c6adb48136e058a9170c6e|2015-05-20|Eduard Valeyev|Added octupole ints
2d94d006866dfa4d2e58ede3a22a92d0f2393d24|2015-05-20|Eduard Valeyev|Slight cleanup of OneBodyEngine::operator_traits ... closes #35
9f2f1046d0c8129060cea7f4763bd9e4a61b287b|2015-05-20|Eduard Valeyev|converted operator_traits::default_params to a function ... addresses #35
8d4751a011cdf8f72fcbcc62556b8aba2cee03c1|2015-05-19|Eduard Valeyev|Amended 0071bc5a5dc35930d2044082ef9717c0024bd2b2
0071bc5a5dc35930d2044082ef9717c0024bd2b2|2015-05-19|Eduard Valeyev|Fixed include path in exported tests path to look for libint's boost PP code
2b99aeff314f84a2824943197978e165250877a6|2015-05-19|Eduard Valeyev|fixed exported lib HF++ output validation
f0fbd18897389655aea95df1b888be95c6adfde5|2015-05-19|Eduard Valeyev|boost unpack fix
33ac9a090a98ecff22e3c8c4f67100515fdd2c22|2015-05-19|Eduard Valeyev|Use boost PP to compress verboseness of OneBodyEngine
a478b923b83dac7cd23e4a35ad87fc23d1457f01|2015-05-19|Eduard Valeyev|Added missing <iterator> include
7228a0ed9b248f58280eedc7976f76976d2a6824|2015-05-19|Eduard Valeyev|minor distclean rule improvement
abb0edb7b627b5d8dcdb609c8e384355f0238c21|2015-05-19|Eduard Valeyev|Added multipole moment tests to the HF++ example
79529c302d61e7b461a5a306e8d9a41e83c300f1|2015-05-19|Eduard Valeyev|Any -> anything
f7281432bdeb36da5b6de87683bf3fe9a6677abf|2015-05-18|Eduard Valeyev|Resolved the issue with multiple instances of shg_coefs
710169f2ed36ea13b52659c6bdf34c5815922382|2015-05-16|David Williams-Young|Fixed the copy assignment (at least locally) #32
32bf2792a1a74478f6aa902abe6837eaf7bb5fbd|2015-05-16|Eduard Valeyev|Added missing inline attributes to OneBodyEngine members.
c6a93b94f7469e0f87571b57e25b72347921d90d|2015-05-14|Eduard Valeyev|Amended bb9998baaa334c3e0e45695d4cc6369f850279c1
bb9998baaa334c3e0e45695d4cc6369f850279c1|2015-05-14|Eduard Valeyev|Bumped buildid tag to beta.2
c0be175149388afa26b5c8b0e754c8d0c8e12d09|2015-05-13|Eduard Valeyev|Minor Makefile fix.
07a434815ccfc6c761c57917d263a7fb8828aa4d|2015-05-13|Eduard Valeyev|Fixed minor typo.
77517890e983e63b7efa4824dd3e3b53a20d372e|2015-05-13|Eduard Valeyev|Electric multipole moments work.
928e37f85592c7d1bfd08b9f0757a7890e63b164|2015-05-13|Eduard Valeyev|Reversed PrerequisitesExtractor's order of storage of vertices; targets are allocated in the same order as they as added to DAG.
45e760c10fc8c01a149b8e2d0e870f01b10c124f|2015-05-13|Eduard Valeyev|Pacify clang
e6fa6032b5d86715383f5062dd62fd4cb7c2ccfe|2015-05-13|Eduard Valeyev|Added Any class to help avoid making OneBodyEngine templated.
68b3ff1c02f7f02c197571f3b6c4241f62671b4b|2015-05-13|Eduard Valeyev|Minor fix to pacify gcc
fa51d0ce87b0edde465765edef90e72b809c0e51|2015-05-12|Eduard Valeyev|Compressed 1-body operator descriptors
c6e15fe43b4ce1a5131dbb949ff6d5d942019e25|2015-05-12|Eduard Valeyev|Added flag to TwoBodyEngine to skip core ints evaluation (useful for profiling).
93d5c5f9f7df7988c84d71f884d93b34f7a2e741|2015-05-12|Eduard Valeyev|moved CR_XYZ_...::compute methods to namespace libint2 explicitly to pacify gcc4 (clang was fine as is)
af9bdc84ef035eee05d35d70d318489f21c05149|2015-05-12|Eduard Valeyev|Updated library export to match changes in df98840de8ae7f5314017b40e4aff931296ac945
10f0b2596f2d4d2a9bad0866ebca2c3c40763985|2015-05-12|Eduard Valeyev|Fixed broken coulomb ints in one body engine ... did not initialize VRR prereqs.
ed4a21cf48e69f27dc3363fa36d06b5f96897d24|2015-05-11|Eduard Valeyev|Minor comment cleanup.
d32b233a70d5cdf243b3437a5aebbc405af40cee|2015-05-11|Eduard Valeyev|1) Overlap and kinetic energy are computed from 1-d ints. Needs cleanup. 2) Dangerous implicit conversion from ConstructablePolymorphically to CGF/CGShell/... are made explicit. 3) Minor improvements throughout.
93bd6325c94c85d2ee20db31cfacf694088723eb|2015-05-11|Eduard Valeyev|Minor cleanup. MPL is pain.
f58c480301c8a777648ed1eb07dc31463444ac93|2015-05-11|Eduard Valeyev|RR code generation now uses FewestNewVerticesTactic (some new RRs are "multistage", hence ZeroNewVertices no linger suffices).
1fe70dfe77abfc7290c81f7affeaf4a24fddf89d|2015-05-11|Eduard Valeyev|FewestNewVerticesTactic really meant FewestTotalVerticesTactic. Fixed. Now can remove ZeroNewVerticesTactic.
5fcca739a6d2c59c8e2a3caff13c3bd7db3a2ff4|2015-05-11|Eduard Valeyev|Dependency tracking in test dirs
f61f25f5da64b55ed548f55b8029cbe0eeb55b64|2015-05-11|Eduard Valeyev|chebyshev -> chebyshev<double>
df98840de8ae7f5314017b40e4aff931296ac945|2015-05-11|Eduard Valeyev|Moved content of test_eri/eri.cc to the header file.
2c12da759de6570768a3b186adf8493bd1a4cdaa|2015-05-11|Eduard Valeyev|do not try to run HF tests unless 1-body and coulomb 2-body ints are enabled.
afc24502194523bc61d4854e1b3aa0ca3cec2c43|2015-05-11|Eduard Valeyev|Removed stray Fm testing code in Coulomb 1e engine
a56bf226fc4203dc475f72ee9d4f24be8fe0846d|2015-05-11|Eduard Valeyev|Bug in DirectedGraph::remove_disconnected_vertices() when trying to erase the first element in container.
03d1f3899c639ba48957326a1ba5d2df340e40b2|2015-05-09|Eduard Valeyev|Minor cleanup
31788ab69f670273f8468b50e4c8da6d61bc1c0d|2015-05-09|Eduard Valeyev|Slight optimization of 3-D overlap VRR.
e8a790fa7ea3573ed8801e03e78432cece7695fc|2015-05-09|Eduard Valeyev|1) Introduced 1-d Gaussians 2) this meant also OriginDerivatives with variable # of dims
9e0e0c65b6edac2277b29e4be5519356617d5c3b|2015-05-08|Eduard Valeyev|Renamed 1-body shell set typedefs
bc8e27961e1b57adf3c4a002302e7f24f0219291|2015-05-08|Eduard Valeyev|build_libint returns 1 if caught exception.
8dee4ad35e0d893b4be76a408beba6785dd2aa03|2015-05-02|Eduard Valeyev|Minor bugfix
b576967e87229cc1b258a23d3932e5a54fe9d987|2015-04-26|Eduard Valeyev|Cleanup.
b16088169c3c969bb352b01dc72821694bae6a7d|2015-04-26|Eduard Valeyev|fixed a tpyo
807677f7b7f0de46d9cc515ca0c75b0c4db3d2be|2015-04-01|Eduard Valeyev|Merge pull request #30 from certik/gcc4.9_fix_gmp
c0a83fa7e2554ea71a14dbae47bce0a3559e1a54|2015-03-25|Ondřej Čertík|Also fix the source files
b19757ce93ebd818ba333b54d3bfe6f5f9b4cae6|2015-03-25|Ondřej Čertík|Fix a configure error with gcc 4.9
c1be4f680ada1797e71741fa882b68e926fc05a9|2015-02-10|Eduard Valeyev|Added prototype BTAS-based DF exchange builder
999061c6a3948bed6042e52d051130cfb7169f24|2015-02-10|Eduard Valeyev|slight cleanup of read_xyz
7802c700b842fe66ec4a90e3cfc0841ad9ab4b03|2015-02-07|Eduard Valeyev|Count total number of ints computed in Fock build
225681e95bdce4fd14f19abf5990dea5059f906a|2015-02-07|Eduard Valeyev|minor tweak of hartree-fock.cc read_xyz
06be4d68a7b0da073469c40ccf49acb9ed62a18e|2015-02-07|Eduard Valeyev|libint2::cleanup = libint2::finalize
8982b56812ab20174fd4f91d2328442e4a42a201|2015-02-07|Eduard Valeyev|Minor tweak of travis linux script.
60c677175342c030e099cb0a4eb4abbe20bad65d|2015-02-02|Eduard Valeyev|Amended c398e50ff5c370efb53e96bbddb8dfab98922716
49bb80afd817ccac4ac7c27f5c1ead5d93e9e8d9|2015-02-02|Eduard Valeyev|Minor comment cleanup.
c398e50ff5c370efb53e96bbddb8dfab98922716|2015-02-02|Eduard Valeyev|Corrected reference water HF energies due to slight numerical deviation due to slightly lower precision of chebyshev code (now taylor used in 1-e ints). Should fix the CI failure.
1de9ac1cc982fb5cb8c389ed23722b5f7bec6803|2015-02-02|Eduard Valeyev|added incremental fock build
30ea3cd4474c740bee7713bbc633d60f95b3a4c2|2015-02-02|Eduard Valeyev|1) Chebyshev is parametrized by Real 2) Taylor and Chebyshev default template params added/refined
9c9e8e6250a3706602c5e03415f1841d9122d291|2015-02-02|Eduard Valeyev|Switched from FmEval_Reference to FmEval_Reference2
52eddb812651e59ad96ba1503b55314550278f3c|2015-02-02|Eduard Valeyev|Added FmEval_Reference2
bf579e217f698ad726523e26f41ab3e5eeb1f7c1|2015-02-02|Eduard Valeyev|Updated documentation for FmEval_Reference
838d3b6a1df50a4a368b2836872b62454565073f|2015-02-01|Eduard Valeyev|fixed a couple of bugs in schwartz (and threaded it).
751b4e89bc7c9b13afb27a95ead539a6d0867917|2015-02-01|Eduard Valeyev|Shell uses double for all floating-point params
b5683ee912d917ad96a5c329f9bc4a1d31567602|2015-01-31|Eduard Valeyev|1) FmEval_Reference checks the argument type to ensure that it has enough precision. 2) added log for pf_class
27ae6e7bb0f97f102376641791729a5fe95ca74b|2015-01-28|Eduard Valeyev|1) libint2.hpp redirects to libint2/cxxapi.h 2) hartree-fock.cc and hartree-fock++.cc now include libint2.hpp
c54ea61a8c0f76be46569885f1317075e9810d4a|2015-01-28|Eduard Valeyev|minor libint2.h cleanup
ebd4e7d1ceaf5b0e69086a15d694e17555388a68|2015-01-28|Eduard Valeyev|Factored out c++11 header includes out of libint2.h -> libint2.hpp
2509cca6ad72c254f70b84b24102bfb59dbc5562|2015-01-28|Eduard Valeyev|Copyright header to elements.h
e5607b35742e3f58a0c2dcaf635f120c68f454dd|2015-01-28|Eduard Valeyev|engine.h includes solidharmonics.h
5149a996325464f996a7d72cf7f8f439af8961cd|2015-01-28|Eduard Valeyev|minor cleanup.
cdcee3b9ef4e16e28dd5ae47d672f3e995d3474d|2015-01-28|Eduard Valeyev|minor cleanup of configure.ac (factored out gmp c++ checks)
c0ba7c6742b40cf5bf0501f0d255d5f986742864|2015-01-28|Eduard Valeyev|hartree-fock tests require C++11 support by CXXGEN, added configure tests for that.
6f4491f80e1ba18b3b982a7ddc1dab81d44d9daa|2015-01-28|Eduard Valeyev|fixed install_data make target, closes #27
d52fa2c17c728d0148fff323f87fad7c84a4b639|2015-01-28|Eduard Valeyev|wrapped C++11 headers in libint2.h, added engine.h
b89d440e7b8e3aa1b63531dc117667ec14e752d5|2015-01-27|Eduard Valeyev|Merge branch 'calewis-master'
b542f8fdd0a48aa1f02da56ecf4bceedf2824bb0|2015-01-27|Eduard Valeyev|Merge branch 'master' of https://github.com/calewis/libint into calewis-master
6e8a857c96580569545638833873c53d3f0e93fa|2015-01-27|Eduard Valeyev|Amended d0dbdf1f52bc92bad40c525128895c5231dfa96d
d0dbdf1f52bc92bad40c525128895c5231dfa96d|2015-01-27|Eduard Valeyev|1) lib/data -> lib/basis 2) make install installs basis data 3) BasisSet(name,atoms) constructor makes reasonable attempt to seek basis set data
b624a11cf21babfe6326a8169a023fc4dac3b87c|2015-01-27|drewlewis|Merge branch 'master' of github.com:evaleev/libint
3bae53a86aa4e65065a9f4ad396df1eb2529344c|2015-01-27|drewlewis|Added missing headers to atom.h and basis.h.  I also added guards to chemistry/elements.h as well as missing headers.
e066ca02478734ecd06c0489970aef924ffa7f0a|2015-01-26|Eduard Valeyev|standard Fock builder can use OpenMP and, if OMP is missing, C++11. The latter seems to be slower on my mac, hence OpenMP is preferred. OMP_NUM_THREADS is no longer used, instead use LIBINT_NUM_THREADS
fd69747a52ceacf593d78cdf2422d8f8004fc80c|2015-01-15|Eduard Valeyev|minor cleanup of 1-body ints construction in hartree-fock++
d53a71dea072ef44e855cc97e0a9c746e29f9ce0|2015-01-15|Eduard Valeyev|Boys Taylor build is AVX-ized for interpolation orders 3 and 7. The latter might be particularly promising for AVX-512.
3a02c7ef8c1e83497ab599ba687817f147e4a722|2015-01-14|Eduard Valeyev|Reversed mistake in f7b492853cf6803a903921b6f2b3eff369e1d6a9
f7b492853cf6803a903921b6f2b3eff369e1d6a9|2015-01-14|Eduard Valeyev|SOAD is much faster (D is diagonal); added schwartz screen to Fock build.
3157a4a2ddb5f678fb26da17540cae855896319d|2015-01-14|Eduard Valeyev|Updated profile_Gm code build, randomized T values fed to Fm(T)-engines to more accurately represent practical cache behavior.
2af661d15a514ced31271f50fae34995ea0432a2|2015-01-14|Eduard Valeyev|Added Shell::unit() . Closes #24 .
eb5f7a2c803ddd248dc8575a5962bf3603f5de5a|2015-01-13|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
64236c961e2bc0862d63f5f92d659837bdf9cfca|2015-01-13|Eduard Valeyev|Chebyshev Boys engine is simd-vectorized (SSE/AVX). All F_m (m<=mmax) for one value of T is computed (i.e. vectorization is NOT over multiple sets of values). Requires mmax >=1.
1e242d82fb188c95dc2cad0f68ad609da831f90a|2015-01-13|Eduard Valeyev|Chebyshev Boys engine is simd-vectorized (SSE/AVX). All F_m (m<=mmax) for one value of T is computed (i.e. vectorization is NOT over multiple sets of values). Requires mmax >=1.
85b05ce835b57815d4b74bfad02fe2dcb1eb7cd3|2015-01-12|Eduard Valeyev|Initial attempt at AVXization of Chebyshev F_m code
2bab458f6f42e31b11807dfca4248a9ecdd9b48c|2015-01-12|Eduard Valeyev|Added TwoBodyEngine::precision method
4c1c5d5beb57f2b5415944e1fbcb2edd0d757127|2015-01-11|Eduard Valeyev|Added cc-pVXZ-RI bases.
c79d7c92e09c901f300a5fdc2d90118de2cf9392|2015-01-10|Eduard Valeyev|amended 591f1fd0a45ad2c2d76a86739416bb06e36245d7
12fde7ac11b09414056d021ca8a6d534528d2d1a|2015-01-10|Eduard Valeyev|Reverted mistake code
050ea888ffec759ee677d25a9dcac0c8473ab165|2015-01-10|Eduard Valeyev|TwoBodyEngines collect additional stats when profiling ints (# of primitive sets, etc.)
591f1fd0a45ad2c2d76a86739416bb06e36245d7|2015-01-09|Eduard Valeyev|Fixed install target of exported lib.
c5d0f852ac9deb0fb4dbd7763ec53c0236b22477|2015-01-08|Eduard Valeyev|f12/r12 ints require thread-local storage.
9ed94f713f3cb91cc1e9fb88410aa1b74e1e8ad5|2015-01-06|Eduard Valeyev|Tweaked FourCenter_OS_Tactic to prefer rr-with-smallest-children, new flop counts for VRR are lower.
beda671e9147948694ed00fc4feeadfd8b23266f|2015-01-05|Eduard Valeyev|Misc cleanup.
2de8ab247ecb0f37a8b0ad262fb4e9f26fff4b4b|2015-01-05|Eduard Valeyev|Minor cleanup in hartree-fock++
e98c7da2a5566f67b5a80a96c36f028e3db05c33|2015-01-05|Eduard Valeyev|TwoBodyEngine can use ITR now + minor cleanup.
28ebe4d7ba479830570ecebe372488e287f4332b|2015-01-05|Eduard Valeyev|Merge pull request #23 from calewis/master
a22c95ef759193e903fcef353da20b846219db03|2015-01-05|drewlewis|Merge commit '42a6ac8f65cb4c79d46572bcb25801bf96c19966'
ff92d685cbaac396418a2af6b48dddcd7de5e34f|2015-01-05|drewlewis|Added two missing headers.
42a6ac8f65cb4c79d46572bcb25801bf96c19966|2015-01-05|Eduard Valeyev|ITR as implement is restricted to (A0|C0) and (0B|0D) classes.
d330d75aa2155d4eb84fbce9275cb686f90107fd|2015-01-05|Eduard Valeyev|Shell does a bit more sanity checking in renorm() ... can call the zero-exponent Shell
83363ddd356fc72015c7ac59fa25caf55cf5253b|2015-01-05|Eduard Valeyev|Merge pull request #22 from calewis/master
a67efe400df6475dd028f865016d2e26efd0a113|2015-01-04|drewlewis|Upated hartree-fock++ to take account of the change OneBodyEngine integral_type enum.
82bf20fbbd9377f94ddc1bbd2cfada5d376bf46b|2015-01-04|drewlewis|Merge commit '06c4a3076a53ebd206c76de5be43ff352042aca0' into HEAD
343c80ea78fd69033807c137d52c5771cc4df855|2015-01-04|Drew Lewis|Fixing Hartree Fock example to work with new integral_type.
e69dd4b068a454b8ed110baf991ddcac9f46bbd8|2015-01-04|Drew Lewis|Changed the name the type enum in OneBodyEngine to integral_type to avoid a conflict with the new function named type.
eae617c7c68d7297cb10ddd22b226e974cc3675f|2015-01-04|Drew Lewis|Adding the immintrin.h header to vector_86.h because it is needed for some of the intrinsic instructions.
06c4a3076a53ebd206c76de5be43ff352042aca0|2015-01-02|Eduard Valeyev|namespace sc -> namespace libint2
440d5948d53281bc66f44e71d39936a700e1cf36|2015-01-02|Eduard Valeyev|Removed all instances of direct use of LIBINT2_REALTYPE in C++11 face in preparation for vectorizing the interface.
06c5d9bd4727fc0f7ec2aea0c6e681984ef8257d|2015-01-02|Eduard Valeyev|Fixed minor tpyo.
4b1b9302855a88db9a4af9f7abe4072a9abe914f|2015-01-02|Eduard Valeyev|Added vector traits in preparation for vector interface
e866b5d7ce1a96366b2216a1f4b7e7b6f77f0877|2015-01-02|Eduard Valeyev|Can split profiling info into integral class bins.
3edb22ce67c26b8ab62329be6acc9a0f23cf7714|2015-01-02|Eduard Valeyev|Minor comment fix.
ebb39fc996bd53071863e3fb6708f734e59b8321|2015-01-02|Eduard Valeyev|am_symbol <-> l is in Shell now.
1a1481909a7381c47ad7538b18048f5617536ca1|2015-01-02|Eduard Valeyev|Updated Timers<> docs, stop() now returns the elapsed time since last start
7b06882327cc0d76d86c4a8fc5ee8639ba446773|2015-01-02|Eduard Valeyev|fixed filename of def2-SV(P) basis
2bb1f71c27f46d2307ae4b96485296a531f719cc|2015-01-02|Eduard Valeyev|Fixed bug introduced in 32ca975c04b2f0d4f14a21457d8e270f78b20efd
a016faeb412ab66cecdee75f306c415799c75982|2015-01-02|Eduard Valeyev|Documented TwoBodyEngine::timers content.
449f3e8ca06c3da89b718fb6c9cd792c05358db9|2015-01-02|Eduard Valeyev|Added simple program to determine overhead of chrono's high_resolution_clock::now() . 25ns on my 2-year-old i7
32ca975c04b2f0d4f14a21457d8e270f78b20efd|2015-01-02|Eduard Valeyev|Support fine-grained instrumented profiling of internals of OS build.
c94cdc572748c634ebe3692bd9f1a1c75b579ab7|2015-01-02|Eduard Valeyev|Added turbomole basis sets
d1940d737c65a07a25bdb7866fa08f42eb127347|2015-01-01|Eduard Valeyev|Revert "Libint_t::nflops is now a variable, not a ptr."
e8226ee503624c37d0454a62d438828e0ad28f3d|2015-01-01|Eduard Valeyev|Improved SCF iteration status printing
e150b30e2ff1eea7482df751403f1e265c54d7a1|2014-12-31|Eduard Valeyev|support "extended" XYZ files with extra info on each line past the coordinates.
d697a6c691d657201a1443fcc2e4bb2c0c90360d|2014-12-31|Eduard Valeyev|Amended 59918a46bb40904131340529478ed8116c1cd125 to use aug-cc-pVDZ in hartree-fock++
f1416fdeb60637f62774a8f404efd41b3b8f5dfd|2014-12-31|Eduard Valeyev|Fixed precision=0 behavior.
59918a46bb40904131340529478ed8116c1cd125|2014-12-31|Eduard Valeyev|Added dis
0f2e6facefe47238be03f45ace4472eeaf82ee08|2014-12-31|Eduard Valeyev|Improved basis set name conversion to file name.
6ebf4cbdb6a437fc91f59f42d5836d2f2e7878a1|2014-12-31|Eduard Valeyev|Updated TwoBodyEngine's precision to correctly handle exact case (precision <= 0).
6067250765524968c3aab4eef71ab4f9d499faf6|2014-12-30|Eduard Valeyev|contents of include are doxygenated
74a73270b16618fb4f52223214365e1cdcc64788|2014-12-30|Eduard Valeyev|Hushed build_libint
ef1e3a9a2196e47f5bd2a5c6c1a6ab6821181bda|2014-12-30|Eduard Valeyev|Minor comment fix.
a18b9124e1c4dda9ea685c04dff0ec1e4551e9bb|2014-12-30|Eduard Valeyev|Introduced primitive screening to TwoBodyEngine
801ee0111481851f089faf3f599730b96110fab3|2014-12-30|Eduard Valeyev|Minor fixes to BasisSet
13e78b9532045e4201dffd0552480dce454e284b|2014-12-30|Eduard Valeyev|fixed XYZ format parser to handle comments properly.
c15d3c513a2ce110581fc6520f3bd801363e3735|2014-12-30|Eduard Valeyev|Added 6-311G**, 6-31G, and cc-pV5Z basis sets to the library
74e6f696ee7a893f31572c25c0f9c22c1c9826d5|2014-12-30|Eduard Valeyev|Renamed 6-31G*.g94 -> 6-31g*.g94
cf5a8a18bbca17b975d15cce2c195e822e4681c3|2014-12-29|Eduard Valeyev|Reenabled integral timing if OMP is missing.
7353d231d0d18cb1b35231894ad42dc69f90f798|2014-12-29|Eduard Valeyev|Minor refresh of configure and export lib build
bab6ce07385817c532aeb54bde3aa97697bace6d|2014-12-29|Eduard Valeyev|Split off the "production" HF test to hartree-fock++. The default is H2O aug-cc-pVDZ
24b0abc6f9025c073a08c80920290d371af22755|2014-12-27|Eduard Valeyev|Added commented-out example of reading in library of G94-formatted basis files.
d37b5d8b9957fdefd7afb2b809d0200f1b9a916e|2014-12-27|Eduard Valeyev|Added TwoBodyEngine profiling using Timers<> class in timer.h
c0a807c60a016a42f28fe9828062e452c52ff7e7|2014-12-27|Eduard Valeyev|Added integrals-only timer.
673b9ba44c50bac2d4e07945bc1ab61ff7ec6e9e|2014-12-27|Eduard Valeyev|Fixed compilation error displayed by gcc 4.8.x (HT: Qiming Sun <osirpt.sun@gmail.com>).
da3affe882a0898e780a221a3b97070220a92a05|2014-12-24|Eduard Valeyev|trying to fix hang in libint2_init_shg in BG/Q ... likely something to do with "small" types (char vs unsigned char, etc.).
4c100d4e27441b715b529a79626f1a8bb5c8f08d|2014-12-16|Eduard Valeyev|Significantly improved the solid harmonics transformation. Now on par or better than MPQC.
89f1c2edbf08fbc39d7faf4af92f314893bd6ae9|2014-12-16|Eduard Valeyev|Improved TwoBodyEngine::compute_primdata
9346af40646860895df88de342364c478dc37eb7|2014-12-08|Eduard Valeyev|install include/libint2/chemistry headers when building in-compiler
2a23b289d04a2cd91c5513dae69bf490b9ad40cc|2014-12-08|Eduard Valeyev|Amended 57ad06c6483d3b0f397e13cdbd6939163e28576e to install include/libint2/chemistry headers
46a96f8e0fa4b13cc44d13c750e6ff394758da73|2014-12-08|Eduard Valeyev|Imported a few g94-formatted basis sets.
6cd1e2518f55dc73e8c95e36082b37ebacc2ed35|2014-12-08|Eduard Valeyev|The default guess is SOAD.
1e3f68309189da37a91424f6819f9f47204c93c6|2014-12-08|Eduard Valeyev|Added g94-formatted basis set file importer.
4eca77c891fcf1037a068015ca620d2fc5e3d82e|2014-12-08|Eduard Valeyev|Added mixed basis fock build (density basis != orbital basis), used by SOAD guess.
558c635078db766a95663b143243be4991c6b809|2014-12-08|Eduard Valeyev|Added Shell::cartesian_size()
1ea9dd9359e6cd9e86dfe7871eaa6c25cd11da4a|2014-12-08|Eduard Valeyev|Added comparison operators to Shell and Shell::Contraction
8b644477e45642d6cd6ab0da5b2d08a24f3d8cc0|2014-12-08|Eduard Valeyev|Minor comment fix
57ad06c6483d3b0f397e13cdbd6939163e28576e|2014-12-08|Eduard Valeyev|Added chemical element registry
da101c6d3d5dd80a1fe7b855d23f47bf11eed866|2014-12-08|Eduard Valeyev|Solid harmonic infrastructure.
07e6ed556a9f62f4189204eb84c7e4cc992bb729|2014-12-08|drewlewis|Changed name of function integral_type() to type() in OneBodyEngine.
245406517a8a2a966aeaf4bf8ac6ce834d043754|2014-12-08|drewlewis|Added integral_type function to OneBodyEngine to return the type of integral the engine was constructed with
5317ab62895f7be4527743043dccf1f7b5ff0811|2014-12-02|Eduard Valeyev|Squashed bug in 2-body engine related to un-permuting shell sets
9e227ee0dbbac6cd1a1d8bb6a2bd825c77344448|2014-11-28|Eduard Valeyev|Open-MP-enabled Fock and overlap builds will test also sequential builds.
4aafb90f563d9b21a37be9c6ddf9958d16641532|2014-11-28|Eduard Valeyev|travis-ci: fixed (?) hartree-fock test build with exported lib
58dc4b217dd7d4edfb17065ad19f7947bd4d0493|2014-11-28|Eduard Valeyev|travis-ci: updated MakeVars.export
dcc0c9a5c05e156ac0794ed206198649c2cedca1|2014-11-27|Eduard Valeyev|travis-ci: debugging export build problems
6ab7810a893069d75c98e0d062e4da71f83c02eb|2014-11-27|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
c8992f9c66bf9633f61282edae82ab95b38a99ab|2014-11-27|Eduard Valeyev|travis-ci: debugging export build problems
22126c8ae96df97126208bfc5d1a2b774224fe18|2014-11-27|Eduard Valeyev|travis-ci: debugging export build problems
0d0edb29841489546e16229f597b5670db499a5b|2014-11-27|Eduard Valeyev|hartree-fock: computation of 1-body integrals are also threaded with OpenMP
d6a9b4a75a4f2624b598017f6faa4cf2260a8e95|2014-11-27|Eduard Valeyev|Fixed OneBodyEngine destructor to avoid destroying non initialized engines.
ca405edf5aa885e898139473a616669da7406f33|2014-11-26|Eduard Valeyev|travis-ci: disabling build of exported library.
d05753ced5b5cb67294d7ef4bb78656caf67df72|2014-11-26|Eduard Valeyev|travis-ci: added tests for exported library
a2cfa28843b7ef479efa4a6e0528f5ae2eb9d7f0|2014-11-26|Eduard Valeyev|travis-ci: finalized openmp ... only gcc can seemingly be used
af9882616e34599d59351487c83ac873a213dd9b|2014-11-26|Eduard Valeyev|travis-ci: more shell issues
81bd09af3445baf7c94c10e397d75d92030b93a7|2014-11-26|Eduard Valeyev|travis-ci: more shell issues
e0448ae333f4216e3a45cf6ff3b4628a4b976d93|2014-11-26|Eduard Valeyev|travis-ci: more shell issues
c290b5c107bc0a948877e1b26155774c22573acd|2014-11-26|Eduard Valeyev|travis-ci: battling shell
2ce4ef8884dd18c0bed616038f743f6c671a2c02|2014-11-26|Eduard Valeyev|travis-ci: more openmp tweaks
2c2e31a1d4cf235255575046a2dfe58bde7273b7|2014-11-26|Eduard Valeyev|travis-ci: trying -openmp for clang
17b665d673705dfd41faa29e150782de52af908c|2014-11-26|Eduard Valeyev|travis-ci: testing openmp support
8cfd95ae2b863970f8cd6994afcae9c79f7f3b17|2014-11-26|Eduard Valeyev|Added an openmp-based Fock builder; default is openmp is available
0a0780308394a2490493abf246144b5730a61413|2014-11-26|Eduard Valeyev|One and TwoBodyEngines properly deallocate memory
2327ecdf80a0a9150f292b0c6b41c2be0f4bc439|2014-11-25|Eduard Valeyev|Fixed copy and move constructors/assignments of One and TwoBodyEngine's.
59ee47c82f9ca619e286d6444131a05553b716bd|2014-11-24|drewlewis|Actually the last commit was in error, the number of primitives needs to compared against <= to the max number of primitives.
653df26768996c60eb9cccfd51e1f67feabe98b4|2014-11-24|drewlewis|Fixed logic mistake in engine.h in comparing the number of primitives.  There should have been a <, but it was <=.
027937bddcdd683d0af13c54f39f6cd37ab0988c|2014-11-17|Eduard Valeyev|travis-ci: cleanup
24fbfd3ca4f20b3d9b3c86b81073f7b59ddbe8f7|2014-11-17|Eduard Valeyev|travis-ci: added gcc 4.7
43ffe4570cd243fcb348ef35c56db483f061df24|2014-11-17|Eduard Valeyev|travis-ci: gcc 4.9 seems broken
e341e14cddef4fbd12960016c168bbb4afd9ccd9|2014-11-17|Eduard Valeyev|travis-ci: moved build commands into a script
ede5237221505567a5b1de1870bf4f422fc63f86|2014-11-17|Eduard Valeyev|travis-ci: debugging
26153dc4f0618b18ada0876716f25dc3fd861de5|2014-11-17|Eduard Valeyev|travis-ci: using gcc and clang
ab92962f3f90872a85fa46e49ae666f3d715c693|2014-11-15|Eduard Valeyev|Fixed --with-max-am and --with-opt-am list issues ; using lists in CI checks.
75c2844bb4bb838dc2ea149a937c6eb3ae89c1f0|2014-11-14|Eduard Valeyev|travis-ci: broken again
8b1a5d2499294eee7981282b54c10b7c6832e0ef|2014-11-14|Eduard Valeyev|Minor tweaks.
4e2b22ca8837c2fbc33956977cf84dddac6561f3|2014-11-14|Eduard Valeyev|Libint_t::nflops is now a variable, not a ptr.
7e708ab9c8e2e0bab0d63ab64c8f2490cfbba8f7|2014-11-14|Eduard Valeyev|Reverted the max angular momentum for ERI tests to the old value (non-derive ints up to l=3).
56c8b90a3f2de5a1ddd30ce8d83f1dc45792d579|2014-11-14|Eduard Valeyev|minor tweaks of travis-ci config ... added google labels to the emails, etc.
6ae6d8bbc722db31053a53d5c5201c7a8bd78d5f|2014-11-14|Eduard Valeyev|1) --with-max-am can be a list 2) 3-center ints are computed up to (LIBINT2_MAX_3ERI | LIBINT2_MAX_AM LIBINT2_MAX_AM) case, i.e. --with-eri3-max-am now specifies the angular momenta for the "auxiliary" center; the other centers use the value(s) given by --with-max-am
8f878819b00ee4b7e014d2430556aac43a96a976|2014-11-14|Eduard Valeyev|travis-ci: trying os x, trimming down test a bit
e4ca6c967841f5a2b285aa35a6310ccbf773c021|2014-11-14|Eduard Valeyev|travis-ci: seemed to work last time; shortened the test, tweaking to get eigen detected under linux properly => HF test
eb6415c17d422a887d9b53773a6132a27cbdb7cc|2014-11-14|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
8d17058476b549ae6ade9002e50fa5fa357fb651|2014-11-14|Eduard Valeyev|travis-ci: fixed add-apt-repositories interactivity issue
2e763e944e0df20148ca6ac6c6d50197aaad9069|2014-11-14|Eduard Valeyev|travis-ci: fixed add-apt-repositories interactivity issue
6981ae9948a0db389efcde095572a746253a40a9|2014-11-14|Eduard Valeyev|travis-ci: trying to get a later boost
0a80e4cc8fb16060eed00784bd6379ca490bd5cf|2014-11-14|Eduard Valeyev|Yet another travis update
4713d55bbf0036d3b2baee085dff3bcedb20b789|2014-11-14|Eduard Valeyev|Another travis bump
793f3fe1a24eaf3d478853105d3d10eca927e01b|2014-11-14|Eduard Valeyev|Another travis attempt
caf0e6b321bf3ee2216b99122f2f93be109a03e8|2014-11-14|Eduard Valeyev|1) attempt to fix travis-ci script 2) speeded up basic check
6f4e185b7ae709f0b85430a8eda6eacdbd52c298|2014-11-14|Eduard Valeyev|Added experimental travis-ci script
e1dfd32cf32310484db0be0fbf9bd6be8f8da62d|2014-11-07|Eduard Valeyev|cgshell_ordering.h and cgshellinfo.h are moved
e78bf696fd30d8046d576985cf03172e60527267|2014-11-07|Eduard Valeyev|Build hartree-fock test only if support for contracted ints present.
ac2e6a62ba3a73c1e8337156a1adb25006924f03|2014-11-03|drewlewis|Added inline to out of body definition of init_core_ints_params, which may not be strictly required, but is good practice.  I also added inline to the explicit specialization of init_core_ints_params, which is necessary since template specializations are not implicitly inlined.
db332e0bec23b951867747aa698e17cc31d6bd23|2014-09-17|Eduard Valeyev|Some free functions are inlined. Resolves #17
7437f6d0c135f7e22fab4cfc9612b2be576dd6e1|2014-09-12|Eduard Valeyev|Exported library can only be compiled in-place; configure now exits if not in-place. Resolves #16
9c5c79365ce7eac84d39f0c3e98306816226341b|2014-09-10|Eduard Valeyev|disabled DAG writing by default ... closes #14
21a6c79fb32918b91ea9250b8d3f72a7c09c2e00|2014-09-01|Eduard Valeyev|libint2.h was not installed.
f588bd7cf6ce428347c97ab07e92a714634d8143|2014-08-15|Eduard Valeyev|make check is a bit faster ... test smaller subset of ints.
4c6b3797fc7739ee0e840ef6dc0d71762993514d|2014-08-15|Eduard Valeyev|make check works correctly with shared libs
c06aaabae6504bb8245e1e1a0f646d30977ca21c|2014-08-15|Eduard Valeyev|1) factored out C++11 and Eigen into lib/autoconf; reused by the exported library 2) restructured header naming and locations 3) HF test is now also part of the exported library ... needs Eigen of course
b60a550d95cab1f7ccb6503a8df545d7589a3bbb|2014-08-10|Eduard Valeyev|Clarified the license info for acx_check_cpp11.m4
c680a41c810b3637743d080c4a6ec4f179c8db7f|2014-08-10|Eduard Valeyev|Added Hartree-Fock test program
0c3f0f67cba6a796aa427919afffdfe366f4f996|2014-08-10|Eduard Valeyev|Added Eigen checks
4557f6d11720cefdc502b85fb20e3b2d7075a16b|2014-08-10|Eduard Valeyev|Minor changes to C++11 checks
2db7f0f646f8995aa4c5718f94033ec3a6b080a7|2014-08-10|Eduard Valeyev|formatting
1d7fa971d5eeedf7f11bc2f8e1e3f029e84d07e9|2014-08-10|Eduard Valeyev|Minor make rule updates
7216c41459c191b9cfd3c76f7b2f298ed8030a68|2014-08-10|Eduard Valeyev|Clarified the license of stdarray*
1fd63a182fbfe5c95c6211d8b96532ea9f36e5aa|2014-08-10|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
0e5564ce575b0f06a61fbf4bc30e13b8afb598b9|2014-08-10|Eduard Valeyev|Exported library is now fully LGPL (except tests).
bd2f09f923163637cd753720ababbb6c8b45cf2a|2014-08-10|Eduard Valeyev|Eliminated duplicate integration shell-set test: now the exported and in-place-compiled libraries use the same test.
3ab3481c385407b3d5f823b20bfb97428677df7a|2014-08-10|Eduard Valeyev|test_eri.cc that accompanies generated library can non-standard-ordering libraries
2273a8da45e76cc3a3e5096482c8007e422de4d8|2014-08-10|Eduard Valeyev|Added headers to each C++ source file specifying the license. Most are GPL, but some are LGPL to allow use with the generated LGPL library.
74bab25b585c14e2ffa3b91981a94749b7f40a42|2014-08-10|Eduard Valeyev|Removed unused+incomplete src/bin/test_g12
137f4d9b30dbab3adb8195ca0a517edf3cc5ee4d|2014-08-10|Eduard Valeyev|Added LGPL text
8e3ec7d7813b30e6f95c9f01516c2332c4f54c18|2014-08-09|Eduard Valeyev|Removed doc/sample ... will move examples to src/examples
4012a5e447a2a0fbe3b9f1163695277eb662fb65|2014-08-09|Eduard Valeyev|Removed doc/sample ... will move examples to src/examples
878da6376143de7e981cd9c32390446b073c05c7|2014-08-04|Eduard Valeyev|'make install' implies 'make all'
4724fc1071e526d4f3b217d110ce8ab2a85e0b0f|2014-08-04|Eduard Valeyev|'make all' works correctly
5c6eef2aff0b5cced43cb6819b46ce84607779b0|2014-08-04|Eduard Valeyev|'make distclean' works correctly.
fb8f38c9307e997c1bf27aea21e9c57bcede9b60|2014-08-04|Eduard Valeyev|Minor updates to INSTALL.
c325bf2c3c2f140264612a7d49c0abd4fd6d7721|2014-07-31|Eduard Valeyev|Closed #11 , fix courtesy of @jeffhammond
38b375fb63e1c8c5c8b2c108b66b0eb78e9276db|2014-07-25|Eduard Valeyev|The default is to support 1-body ints. Related to #10
77d1c9ded6406803dff16080249a1013f5b3ab14|2014-07-25|Eduard Valeyev|Fixed header guard name in src/lib/libint/engine.h
d97db8d739007e087a309d0d76ac2d71d85cf883|2014-07-12|Eduard Valeyev|Full support on for gaussian integrals; to be tested next.
65b22e3d32cb49fecac293a4107720c6ccb43460|2014-07-12|Eduard Valeyev|Chebyshev boys engine interface takes precision to be consistent with others, but it's unnamed and not used
cd556a489b761dff1403d7dda6b6535544f38e0a|2014-07-12|Eduard Valeyev|Fixed out-of-order initialization warning.
957f8980b318242672f6a18b1b95c107ce970e40|2014-07-09|Eduard Valeyev|fix bug in [832c428]
d7acd12a5e3568e22170d317adbc397de8998d14|2014-07-09|Eduard Valeyev|Fixed bug introduced in [8cc13f7]
832c428e47d93c2fed93ee110f339f59a875fec7|2014-07-08|Eduard Valeyev|Fixed bug in last commit.
2d5b07db6c83c2bfdfd880adf8269788d8ec188c|2014-07-08|Eduard Valeyev|Added C++11-only thread-safe singleton interface to chebyshev boys. One and TwoBodyEngine now us it to avoid constructing the interpolation table once per such object.
e6f0cd049ad1cb0167a217e0bb9f2c1d97328ce6|2014-07-08|Eduard Valeyev|Minor safety updates to the new C++ api.
17dcd35148798568d13785bca250dd2599105183|2014-07-07|Eduard Valeyev|Merge pull request #9 from evaleev/1body-ints
eb2e0fc51f6ba331e64bc543295b75d36aad7c36|2014-07-07|Eduard Valeyev|New C++ API = bump to 2.1.0; not complete = beta
cbe62aa781cf671627a9abc0ad0d5daba2a9a51a|2014-07-07|Eduard Valeyev|Pacified warnings about explicit conversion operators in vector_x86.h
07229cbe13df85fba85aa75c2a35c070505a2206|2014-07-07|Eduard Valeyev|Moved simple_api.h to cxxapi.h
63431443f78ee084923fb3fa06a1d2296f8d4ea0|2014-07-07|Eduard Valeyev|TwoBodyEngine works for Coulomb kernel
ccb6148af5c8c0ba16eb2ddbaa3d922e70bbe268|2014-07-07|Eduard Valeyev|Simple API now can handle nuclear attraction integrals.
b619614c106c196e4613cabc17bc5117b49a040b|2014-07-07|Eduard Valeyev|Chebyshev-based Boys can be initialized with negative mmax, this will avoid initialization of the table, etc. Aimed at generic code.
61a464f59706707436471c70f951e672cf34975d|2014-07-07|Eduard Valeyev|Clarified the source of chebyshev-based Boys
6ea90f8bbeaf1ba25c6d7972288ea37fc55b3baa|2014-07-07|Eduard Valeyev|Nuclear attraction integrals are implemented (one nucleus at a time).
8cc13f70fb4de33066c80156d407a058bfc0ec5d|2014-07-05|Eduard Valeyev|HRR-less build of kinetic energy ints implemented.
81dd395e040e1508c0ce03c25e56699c80da6101|2014-07-03|Eduard Valeyev|Simple API for one-body ints works for overlap only (cartesians only, no derivs, etc.).
697208dcdefa5c7fb1951b84e5a0a50bda61c312|2014-07-03|Eduard Valeyev|Overlap ints tests passed.
1ea9945914a6e19a8fc6e62aed935163a6fde13e|2014-07-03|Eduard Valeyev|Working update of 1-body changes ... overlap compiles, testing next
c4fc1e18167e608e37bc7abab3dd5326f6026d6a|2014-06-20|drewlewis|Fixed test.cc, Although I am not sure that this fix is actually what was intended.
f5e69046ab4c65f6b2609cde04443b9a3f92784e|2014-05-27|Jonathan Dullea|Revert "Added vectorized floats to integral types."
e7dc923da19b618175a3e4cd545e173316bba027|2014-05-27|Jonathan Dullea|Added vectorized floats to integral types.
d26309548c6b198e12146861f23af213f8e7bb09|2014-05-27|Jonathan Dullea|Added AVX float capability for x-86 systems.
abfb71d005de2b6875df6928e7648c3df762b4bd|2014-05-23|Eduard Valeyev|Improved DAG printing.
d9dabec28a1b143d3faa46108c2b2eda496b7cc9|2014-05-23|Eduard Valeyev|Disabled DAG printing to .dot files
72488d96fb9d3cc9f7967b262e46746a7b145968|2014-05-23|Eduard Valeyev|dot files are named in a more civilized manner
2868626838a2159ada4fddc1395db7f6b0156a96|2014-05-23|Eduard Valeyev|CSE did not work correctly because CTimeEntity objects were not singletons. Fixed.
4004d85632d4fc18a7eab945826d8bc71da04ff5|2014-05-22|Eduard Valeyev|Merge branch 'master' of https://github.com/evaleev/libint
8d7c763378e6130a0eb5953dddf555b70c9db90e|2014-05-22|Eduard Valeyev|profile program now works again.
f77fab6a7cdbcc4d86e68af0cdfcca2abe423eed|2014-05-22|Eduard Valeyev|profile program now works again.
0d9d389f263e691af0c0376a8f6599d49efe0be8|2014-05-22|Eduard Valeyev|Additional vectorization-related to the validation suite.
3b3485e5687e01a42981dcbb05e82e77a61f0226|2014-05-22|Jonathan Dullea|Merge branch 'master' into vectorization
27bfe9986c03b2d6a4aac2a7edbd7cef17d53f70|2014-05-22|Eduard Valeyev|Added wrapper for possibly-aligned malloc. evaluators must use it also.
703d4c69daf5948174b9d72c0448b4ca25f23403|2014-05-22|Eduard Valeyev|posix_memalign is now required
f26e99641aa3890344660ad0dd3e840b38354d89|2014-05-22|Jonathan Dullea|Merge branch 'master' into vectorization
5438f5e61efce58ab8da2e71825793aed570fa69|2014-05-22|Eduard Valeyev|Added minimal support for Agner Fog's vector class library (http://www.agner.org/optimize/#vectorclass). Wiki updated also.
10440c2f50b25e10f0760ab09243fbbc54cd84c2|2014-05-21|Eduard Valeyev|Comparison of scalar and vector types factored out into an overloadable cast function.
37bc46706819d4d055dda4e21b904b6fccac20bf|2014-05-21|Eduard Valeyev|removed unused code
282da9a03fd671098fdd7fd667032f350667a176|2014-05-21|Eduard Valeyev|minor cleanup
84d07c2aaa32f16d41bebab8ce5f513b5f725b82|2014-05-21|Eduard Valeyev|VectorSSEFloat now works.
b63f90f50ac48712a4d10b1c19a79beccd8d5d91|2014-05-21|Eduard Valeyev|Added a missing header.
298265a9239865e810cfca7054903ceb5f8a4d02|2014-05-21|Eduard Valeyev|added .gitignore and AI logo variant
acd2cfa3d90537778b5e76ffe02f0d1430f3f89b|2014-05-21|Eduard Valeyev|SSEFloat can be multiplied with doubles too
050f728dbce7dd13ef7ebd4d1b7ffe15ff18b52f|2014-05-21|Eduard Valeyev|Minor improvements to clean targets
f21b6e8b9cad797481231e23537e6f0e9753ff8d|2014-05-21|Eduard Valeyev|Added explicit conversion operators to x86 vector types
2e7c075208cb3e30168a45854f31170f8f2951a9|2014-05-21|Eduard Valeyev|--with-real-type moved to the end of configure.ac to that CXXGEN is set correctly by then
0825d499ecd72bb20f15059de7ddbc132ea982ca|2014-05-21|Eduard Valeyev|Minor refresh of INSTALL instructions
3116489c7f423c5bcbaac7f73c38a84abff43640|2014-05-21|Eduard Valeyev|Updated project url and bumped copyright year
98e690cf619262f77084f558dcb9dd105cb51cd6|2014-05-21|Eduard Valeyev|Updated perl url
b2b8cfb0eaef77945bcfe1c01ec5168d3735aa97|2014-05-21|Eduard Valeyev|Eliminated remaining places in generic RR functions where REALTYPE is not used.
ab74eff2cfceda448e301f6559676ff05d3ec042|2014-05-20|Jonathan Dullea|Merge branch 'vectorization' of https://github.com/evaleev/libint into vectorization
429ee8a6ee83b86c991fdae4fd5ee519d13292ff|2014-05-20|calewis|Removed random comment using it to learn github.
f325da810390fbc014e7688d05a832f2774a411e|2014-05-20|Jonathan Dullea|added comment to eri test
c786f81654c6004341198a101f024d2636594781|2014-05-20|calewis|Removed random comment using it to learn github.
4911b345468d0e3185246dc0716238292abb33f5|2014-05-20|Jonathan Dullea|added comment to eri test
fcf637d9e90dcbc367d79061105ea1230d036c4c|2014-05-19|Eduard Valeyev|time_eri now uses gettimeofday for timing.
b676c9056646fcc1777c6f0456b2a9438f9d2729|2014-02-13|Eduard Valeyev|exported archive now contains compiler.config file that includes the configure options given to generate this library.
8d537f4e3de1e580c4d33dbfbe8776f0dbdb0d54|2014-02-13|Eduard Valeyev|Bumped version up to 2.0.5
3a4c270074798d93af0b64cad3a1cfb6be476ea3|2014-02-13|Eduard Valeyev|Updated documentation and extended API for core integral evaluators.
7f304cbd231572671541b1b61987f8a139182817|2014-02-03|Eduard Valeyev|“Completed” bump to 2.0.4
209fe69c26230fb2d6907e0ab475bb0d8b190cb5|2014-02-03|Eduard Valeyev|Hardened clean target
249ed7899a26876384dc138e57106e507cc130a0|2014-02-03|Eduard Valeyev|Exported library validation should not flag failure if can’t validate the library due to nonstandard ordering.
c9dd1a7ccb98fe0f9077d3569861fdf939c952e7|2014-01-24|Eduard Valeyev|Updated contact info.
e3d4019399188d156a72af964faf691ca436f42f|2013-12-17|Justus Calvin|Merge pull request #3 from ktns/feature/pkgconfig
80a86686dfb1415950e1c3cb05addbbb55ded90e|2013-12-17|Katsuhiko Nishimra|Add include directory to libint2.pc.in
81c58ca0aca73fa89224fd4594bf686fc2c2fea0|2013-12-11|Katsuhiko Nishimra|Export pkg-config data file installation rule
9c626bf8f66f0002c254c2eb79e47e66645b03a0|2013-12-10|Katsuhiko Nishimra|Install rule for pkgconfig data file
58fef0276c4552294dcf5cc34ff762fccf839a1c|2013-12-06|Katsuhiko Nishimra|AC_CONFIG_FILES libint2.pc.in
c638b5601e91d8a48ce63906ba5874603f3437ef|2013-12-06|Katsuhiko Nishimra|libint2.pc.in
c200af57e3942f077df23bb2d577e09383a4fc4d|2013-11-28|Justus Calvin|Rename autoogen.sh to autogen.sh
972434813b309880b3d82644c88e6d9e766fa442|2013-11-28|Justus Calvin|Added a script to generate the configure script
12a55d91fd68d87f8c7374d254677ad9587ff578|2013-11-28|Justus Calvin|Updated with references to GitHub
8942a1db5eb9d93636084757017c262f54e6f48c|2013-08-16|Eduard Valeyev|RESOLVED - issue LIBINT-49: --enable-g12 --enable-t1g12-support breaks http://valeev.chem.vt.edu:8080/browse/LIBINT-49
94b4209411e8437bfe4d710d52c8f33f1e492e95|2013-08-14|Eduard Valeyev|Delete .hgtags
f5b35d36149bc72200a864de83da881bd155dca2|2013-08-14|Eduard Valeyev|Delete .hgignore
a3cb48845cfa30c05f6c1fa070d3f1dbddf004e0|2013-08-13|eduard@valeyev.net|bumped version to 2.0.4
e78c2aa1314e5c20f971a64d2d97e64b41a150dc|2013-05-29|eduard@valeyev.net|Not all libtool-related *m4 files were installed during library export. Fixed.
3e1ba80f668371942b88f9e3590d7e32d6b8c260|2013-05-29|eduard@valeyev.net|If neither CXX nor --with-cxx are given, CXXDEPEND is not assigned.
b368596c4da1c5b46694b855d421d02376cc51f9|2013-05-28|eduard@valeyev.net|Checked in a non-working test harness for rysq.
b754b6dffaa3cbfd389ad0bc3c457bb7d43a1e2b|2013-05-19|eduard@valeyev.net|Avoided \newcommand in IfThenElse clause altogether to please redhat 5. Now using \providecommand instead.
b4122e2c254a3afcab2278546d93e0f7b6f133f9|2013-05-19|eduard@valeyev.net|Minor improvement of the \braket macro.
48e6b65fced594ed2f4feb39e208f0ff1404c4a4|2013-05-18|eduard@valeyev.net|Added pdf, ps, dvi, and html, and install-* targets.
b7aabb0d282b1c0b96a13df8f5eb99f4c6ff078b|2013-05-18|eduard@valeyev.net|Replaced tex's \def with latex's \newcommand to please redhat 5.
dc9a9fd1c4b88cb7a9feab789222b102958e0e12|2013-05-17|eduard@valeyev.net|CLOSED - issue LIBINT-45: libint2 optimization flags (--with-*-optflags) need to append to CXXFLAGS, not be ignored when CXXFLAGS is given http://valeev.chem.vt.edu:8080/browse/LIBINT-45
554ef2b769217f206fcebc3587ee5088e6bad771|2013-05-17|eduard@valeyev.net|1) braket, sfmath, and bbding packages are compiled in conditionally. 2) A couple references lacked proper journal names
9a05acc54a984a1890d98628e7cf3640f58d1dc5|2013-05-15|eduard@valeyev.net|CLOSED - issue LIBINT-43: bump libint to 2.0.3 http://valeev.chem.vt.edu:8080/browse/LIBINT-43
47ee87866deaa43e839ff57cdf7331cdef2fec7d|2013-05-15|eduard@valeyev.net|CLOSED - issue LIBINT-43: bump libint to 2.0.3 http://valeev.chem.vt.edu:8080/browse/LIBINT-43
0b8d24397481cd78037108a46565bd641af3f6c9|2013-05-15|eduard@valeyev.net|CLOSED - issue LIBINT-43: bump libint to 2.0.3 http://valeev.chem.vt.edu:8080/browse/LIBINT-43
3ec97311321056384d6bcc2ae9e74a39af8f15c5|2013-05-15|eduard@valeyev.net|IN PROGRESS - issue LIBINT-43: bump libint to 2.0.3 http://valeev.chem.vt.edu:8080/browse/LIBINT-43
b92e2e835e2c27bb6200ae6bca57f1add499adf2|2013-05-14|eduard@valeyev.net|1) added missing reference 2) minor comment fix in lstusecpp.cc
69374e2cb0fb4c3eb7885ae88f0ef37a91cb1384|2013-05-14|eduard@valeyev.net|Fixed minor mistakes in progman.
d832690d8a26dd1d032d24da947ae44080f86d71|2013-05-14|eduard@valeyev.net|Fixed progman source code example so that it compiles.
0ef66f465d2c5358a85b0233af44ce5b9e159e26|2013-05-14|eduard@valeyev.net|Extracted out the fat code sample from programmer manual to be able to check that it compiles.
97d3186f4c2c2216b288bfefb4ba9c6723f10120|2013-05-14|eduard@valeyev.net|Pacify picky compilers.
3393bc259bddc3f2f8718464940c0661f9af78fa|2013-05-14|eduard@valeyev.net|Minor improvement.
6daed0968ea6271ecd6a3556acd2fc9a803d962c|2013-05-14|eduard@valeyev.net|removed dependence on srandomdev (BSD only).
79ab829ae79d08cdc68a9e75a40470cc0789a9b0|2013-05-14|eduard@valeyev.net|Removed a stray line in export/Makefile.
20bf16834cf3486b7b9ab74f70944eb4601cde89|2013-05-14|eduard@valeyev.net|Pacify picky compilers.
4f17c7eada98ff344489fbd565a0ad4a08243058|2013-05-14|eduard@valeyev.net|Pacify picky compilers.
50a660514b8d70709706af20cd107e5c2eccfcb3|2013-05-14|eduard@valeyev.net|Minor update.
67bc9bf3f41c79623e584ea0d9fc833574c9e2fa|2013-05-14|eduard@valeyev.net|RESOLVED - issue LIBINT-42: make export misses COPYING, doc, tests; busted libint2_config.h on some archs http://valeev.chem.vt.edu:8080/browse/LIBINT-42
7881518f66eafc633f34fbd9972741b1da08dcbe|2013-05-10|eduard@valeyev.net|can do 'make check'; by default only limited subset of the library is tested to save time.
c21dd0b4b443d38e0ef0e2453d4dcf001f173318|2013-05-10|eduard@valeyev.net|Removed stray debug statements.
5cdee30e33a4f04a30d97179a0466eea3767b69f|2013-05-10|eduard@valeyev.net|CXXGENFLAGS are now set correctly if they were not given explicitly.
790cc81a2cef96de244751a0eb68aebd218783f4|2013-05-09|eduard@valeyev.net|Updated for 2.0.2 .
102cdf63bf068a47add534582667caed3e2b63be|2013-05-09|eduard@valeyev.net|Updated for 2.0.2 .
119d2f5bfc4d12bc4870151cca08c1725a4220af|2013-05-09|eduard@valeyev.net|RESOLVED - issue LIBINT-40: fails to compile on a 32-bit arch http://valeev.chem.vt.edu:8080/browse/LIBINT-40
ce62f7b8ffacbe3c1bd3badef954372aaa0e129f|2013-05-09|eduard@valeyev.net|Added missing logo file.
6af6835da1ff046e25b7384358591ad99b37467e|2013-05-08|eduard@valeyev.net|1) Updated FSF address and refreshed the contents of the LICENSE file. 2) Added CITATION file 3) Renamed configure.in to configure.ac 4) Bumped libtool to 2.4.2 and config.guess/sub to the latest 5) Refreshed INSTALL file 6) Added COPYING file with GPLv2
ae951ee8a231c6bf2b1d51be3a55e300947127ef|2013-05-08|eduard@valeyev.net|==== Bump to 2.0.2 ==== 1) --with-max-am can take list arguments to specify different maximum values for each derivative order 2) introduced generic deriv build code 3) Yukawa is commented out by default 4) Fixed minor compilation issues.
d7d87f5599f0344e6cfb54f6334e78727fac8258|2013-05-08|eduard@valeyev.net|IN PROGRESS - issue LIBINT-37: Compiler fails to build on dev Fedora http://valeev.chem.vt.edu:8080/browse/LIBINT-37
21c45e46aeb8d4254754b51f0073075594396a7e|2013-05-06|eduard@valeyev.net|Exported library did not install boys.h .
73a133dd3c4e4c2117f0aa96214596782e568669|2013-01-22|eduard@valeyev.net|CLOSED - issue LIBINT-38: Fix minor install issues noted by Susi Lehtola http://valeev.chem.vt.edu:8080/browse/LIBINT-38
cca3f9efcdaf0e0b5599bd8f73f9f1c8fe4b51b1|2013-01-16|eduard@valeyev.net|Same as last changeset, but for exported library: To make a large shared library, feel libtool object file names from a file.
b9cb10083ae75f409156be45bcb29694bdfbcf5d|2013-01-16|eduard@valeyev.net|To make a large shared library, feel libtool object file names from a file.
fa8789929421bf633ea2767358256b78300320e8|2013-01-15|eduard@valeyev.net|Added the new logo files.
73c2ebed031cd23b2ec3c04416c55f08149aed5a|2013-01-15|eduard@valeyev.net|Misc manual updates. New logo.
1cf6f297088cb0ee820a9f26b5c4e46bb74889c9|2013-01-15|eduard@valeyev.net|1) Further improvement of Gm evaluators. 2) All profiling code moved to src/bin/profile/profile_Gm.cc
c40ced0e45f62e8da545de13b00bf3c5e342735a|2013-01-15|eduard@valeyev.net|Slight optimizations in 4-center prep_libint2.
eed5619c380f8a423126c5d883ab8ceb358684a4|2013-01-15|eduard@valeyev.net|Some updates for libint2+bagel profiling.
5e69d5ad178e944a82df0d9c6479e5d5c03fb71e|2013-01-15|eduard@valeyev.net|Switched back tests/eri to do testing, not profiling.
2f55d8a44875267d8daa7936223f6d1451329215|2013-01-15|eduard@valeyev.net|tests/eri now compiles also with shared libint2 library.
d20263a843d7a5d9e9ff1b39f763ba0253104f7c|2013-01-15|eduard@valeyev.net|Fixed bug in CompilationParameters that caused nonsensical default params.
76838d8fb5cd7b53d7e06208ad8d17f82c67f1a5|2012-12-21|eduard@valeyev.net|Fixes to make generic g12/r12 integral code to compile.
5687de7449c4bfb738d4cc6c66c01576728f999f|2012-12-20|eduard@valeyev.net|Fixed the compilation problem for g12-comm.
5eff80054ceaa548f2a65f049d2139e2df608643|2012-12-20|eduard@valeyev.net|Fixed compilation problem of test_eri discovered on Ubuntu.
c610d179873e2df68a524fefa8bf3bf7ab6ec3e9|2012-12-20|eduard@valeyev.net|Fixed linking problems discovered on Ubuntu.
1e8f2038d56ff8b55d81c7955cb980189880c832|2012-12-20|eduard@valeyev.net|Fixed libtool-related problems discovered on Ubuntu.
f885ebbd5d594a1f8bd11b65d67bc61bf2e27165|2012-12-17|eduard@valeyev.net|CLOSED - issue LIBINT-35: https://sourceforge.net/p/libint/tickets/9/ http://valeev.chem.vt.edu:8080/browse/LIBINT-35
1c620d9e4b3cdf5e8acaa453eefe30b25b7f8fbf|2012-12-17|eduard@valeyev.net|CLOSED - issue LIBINT-33: sf ticket #12: unable to make a shared library http://valeev.chem.vt.edu:8080/browse/LIBINT-33
7c60e1ea18d2b5cefe1802df9917f6f9a723ca4f|2012-12-13|eduard@valeyev.net|bumped up libtool to 2.4.2
461a0a1609ca467b512586a33a167f62e7aee754|2012-12-13|eduard@valeyev.net|CLOSED - issue LIBINT-32: compile fails: libint2_build_eri is not declared properly in libint2_static_init.cc http://valeev.chem.vt.edu:8080/browse/LIBINT-32
bccc42c4f14d705bf75787a072ef3ae217c38103|2012-12-13|eduard@valeyev.net|Fixed compilation problems related to missing #include's in vector_x86.h
20b2eadced3097f647260b4835d5d2476075bc45|2012-11-29|eduard@valeyev.net|Tested STG-NG integrals.
316325f3059eea6bf51dbc9e0727b8708d73813e|2012-11-28|eduard@valeyev.net|Minor Makefile improvements.
a31dca4db848b730e9ed76861214288a78ee813f|2012-11-28|eduard@valeyev.net|STG-NG fitting and core integrals are implemented + profiling.
f78a2bd7bfe9b0b2cc8123a242ef541e9c0609a0|2012-11-26|eduard@valeyev.net|IN PROGRESS - issue LIBINT-29: Implement seed integrals evaluators for STG-NG http://valeev.chem.vt.edu:8080/browse/LIBINT-29
a24a57d3ff7aeef86d7b4b62b72f7da9eb988f4b|2012-11-26|eduard@valeyev.net|Added Fm(T) profiler code.
c546502183a71fc3207b8f0df8d7a0b753703071|2012-11-20|eduard@valeyev.net|CLOSED - issue LIBINT-31: test_eri bombs with SSE/AVX data types when casting to double http://valeev.chem.vt.edu:8080/browse/LIBINT-31
a54981fd3c5b0f900daec571929185de2d5df2c6|2012-11-20|eduard@valeyev.net|Minor improvements.
acfc4cbd48d740cf04978c747c822a55ddd249a4|2012-11-20|eduard@valeyev.net|test_eri examples now use the 4-center OS RR tactics.
18c06d53962239912c0a266d97a235dedadb73b0|2012-11-20|eduard@valeyev.net|CompilationParameters' default task name can be changed.
efbab4e634edf238d053f32be1c6923e5f541790|2012-11-20|eduard@valeyev.net|Replaced direct #include <array> with <stdarray.h>, which allows to compile even if array is not given.
fa743a0ec477339b3b59b9b245adb83040c4882b|2012-11-20|eduard@valeyev.net|libint2.h now wraps its #define's.
8a054618e48573d8172cd1cea2c8831d389e92b2|2012-11-20|eduard@valeyev.net|Fixed a minor compilation warning.
4459f5f307b2f975b201dd4df8598128c2759567|2012-11-20|eduard@valeyev.net|Replaced initalizer list construction with static object constructor.
0b17b1ccf1c6c0940ae3c32e0842b7a1c0390d7a|2012-11-20|eduard@valeyev.net|Added tests for C++11 features, including stand-alone implementation of array.
7d067d0194a12a2ec7f16e58d4b01344c6e1a663|2012-11-20|eduard@valeyev.net|Minor update.
28325fbd6eed98e6b3533873d30cd0e41e623ec8|2012-10-24|eduard@valeyev.net|1) bumped version up to 2.0.1 (will be released to allow use of Libint2 from C codes) 2) boys.h can now be used standalone, from C++ only.
3d5b15815997df1cc06cb8584b676e30489d0e40|2012-09-21|eduard@valeyev.net|Jumbo changeset: 1) ITR now works. 2) CR_Deriv for shell sets was dumb, now introduced the concept of "directional" RR for shell sets, adjusted Strategy accoridngly. 3) FMA generation can be turned on/off. 4) Complete support for Ahlrichs' variant of VRR -- however, it doesn't allow use of compute relations or ITR afterwards... tough!
dfcbd4ec5f25f470939484db91e72c4f25fd4c9b|2012-09-21|eduard@valeyev.net|Added an in-progress ITR that shifts p1 -> p0
dd3c2898bf97f08310ae25b84286a2bff6fbdbbd|2012-09-21|eduard@valeyev.net|Updated prep_libint to use "reverse" HRR geometrical prefactor.
75f02093adb825a68491ae84223887234b3f5902|2012-09-21|eduard@valeyev.net|Added some asserts...
318e6a1634b65bd18bf46e3e4cbc4bcf6bb49fbe|2012-09-21|eduard@valeyev.net|Added timing ability to tests/eri/test.cc
f0f5156b950fd307375496df92acaa86f9c3c868|2012-09-21|eduard@valeyev.net|time_eri now compiles again.
2902a1e9c3894cf6e0b854baf44f2860bb56fe07|2012-09-21|eduard@valeyev.net|Added two new tactics, ParticleDirection to manage ITR better, and FourCenter_OS to serve as THE TACTIC for OS.
fa373b8f1a35efb9e40795059da734497db0c9e9|2012-09-21|eduard@valeyev.net|Added the particle-1 ITR typedefs.
0cb6a6500969e561c691e879e655e89032ce77aa|2012-08-27|eduard@valeyev.net|Implemented improved 2- and 3-center ERI relations, including the Ahlrichs RR.
7713256a2342ba815f45010a5f6e0e3009bfc8c3|2012-08-27|eduard@valeyev.net|Minor cleanup.
0545667c455d1aa67ffa05efe6030b4008431b6c|2012-08-24|eduard@valeyev.net|TORU -> BAGEL
08aebb7c85f925b69ce3d3176fd1b1566cff1ac1|2012-08-24|eduard@valeyev.net|Minor changes.
24d3dd617e4346812795c7e74aaf0125ad629334|2012-08-24|eduard@valeyev.net|Fm evaluators' eval() is now const.
74bb159b845f8c3b9783019af352be00192e6c97|2012-08-23|eduard@valeyev.net|Minor reoarganization.
a36b49fdd1f661cd1102e3a23d67ac9cf19848d4|2012-08-23|eduard@valeyev.net|Added test code to compare with ToruS' Bagel integrals.
e58103e7f03e51c99ac27beb46f1cf7bd2404bfc|2012-08-23|eduard@valeyev.net|Provide functions to also "build" s-functions-only integrals.
77f6e85bb08fcba7617fb323cef891382c2123a6|2012-08-22|eduard@valeyev.net|Minor fixes in boys.h
0c7765c5eb8e3018c341a9a0c4b9663219ff8138|2012-08-22|eduard@valeyev.net|Minor fix -- libint2_intrinsic_operations.h etc. headers now installed properly from the compiler directory.
e373fbd6e052cb1a7a674595481eab019b43752b|2012-08-22|eduard@valeyev.net|Minor fix -- vector.h etc. headers now installed properly from the compiler directory.
f47f91651fed25a850fc7bdb5aefa2e4d3f4a8b4|2012-08-22|eduard@valeyev.net|1) Added new ordering of basis functions in shells, 'toru', to match that used by Toru Shiozaki's program. 2) minor updates.
a8f2e2f5e42b10d2d65d328d79df78070a4e433b|2012-08-22|eduard@valeyev.net|Minor change
28780cff2bad26366db50257d82b0ff4f3b9ca3a|2012-05-24|justin.fermann@gmail.com|Merge with b4973b9dd108645839fcdab0ffcd24b344170695
f1c2b0296287f5efea2d32fcabd5ed7cd3ce505e|2012-05-24|justin.fermann@gmail.com|changed link order to resolve library dependency in Ubuntu 120.04 linux
9c3613a86712d60433f77e00d0c3dd3ce2ba65f6|2012-05-24|justin.fermann@gmail.com|changed link order to link system libs (mpfr, gmpxx, gmp) after libINT.a to properly resolve on Ubuntu 12.04 linux.
07f92c91ca5eb7387acb375583f4993a1e71bac7|2012-05-22|eduard@valeyev.net|1) Added Taylor-based Boys function engine 2) much clean-up
2630af4688c22ec29ae057dd171f36eb15a27c97|2012-05-22|eduard@valeyev.net|Added prototype Boys function code for testing and vectorization.
072fc23890e9266022ee09fdbb604e19d39ba0f4|2012-05-07|justus.c79@gmail.com|Merge
4440274c2973195e8bab970dc3093f4bd9fb3f99|2012-05-07|justus.c79@gmail.com|Added autoconf/automake files to ignore list.
4d82f4db4a48d0b017e04d1854983284a4618903|2012-04-18|eduard@valeyev.net|Fixed minor problems that affected compilation and installation of exported library.
d9a347961fb1ad3c81c229698f56e016d500eda0|2012-04-16|eduard@valeyev.net|Fixed compilation issues with clang on linux.
233ad2212f4ae7b290fa4d27a27cde862f5720ca|2012-04-16|eduard@valeyev.net|Fixed minor typo.
92077d0bbb911ed0dfa631bec71c69ffebfb6afd|2012-04-16|eduard@valeyev.net|Can use GMP+MPFR to compute reference ERIs in arbitrary precision.
a96a174c45e28994dfc7bb80c61cb8c8f23716b5|2012-04-07|eduard@valeyev.net|For some weird reason LD detected by configure on RHEL 5 does not work.
f352c082421abcdd5764ebb9698c0536b322f176|2012-04-07|eduard@valeyev.net|Removed duplicate object file in linking "test"
21f0b39ca4879eb8d7f281683e78ea2fa66fb578|2012-04-06|eduard@valeyev.net|AC_CONFIG_MACRO_DIR is trouble on Linux.
c49ebab57a6f9c30faef10ef0cfab3aca05491ba|2012-04-05|eduard@valeyev.net|1) make seems to produce spurious results when run from test_eri.pl, remove generated sources every time before build 2) stdtests.pl cleans up after itself 3) reenabled some tests in compiler test
8cc573c9d459ed4094ad9146b0f4b752f4b8242f|2012-04-05|eduard@valeyev.net|test 1 seems to hang on the group server (OS X, g++ 4.6). Disabling temporarily.
57f211eb3faf16cb37bf4753c35b905bdf84643e|2012-04-05|eduard@valeyev.net|Re-enabled all tests by default in src/bin/libint/test.cc so that can do CI testing in Bamboo.
a4cda7efd2b8bd9083bc86902a114d1e7a304afa|2012-04-04|eduard@valeyev.net|additional opportunities for FMA instructions are found in HRR and VRR.
26f1dd6fefaf22d8c9787a937fe90adee5901933|2012-04-03|eduard@valeyev.net|1) Data type and alignment can now be specified when configuring the exported library. 2) other minor cleanup.
274050f48a9f2de55f0322c4dbd8c101fb53f524|2012-04-02|eduard@valeyev.net|Minor changes.
351d1b2e0d51f0854e764c0bc16da3dc680e555f|2012-04-01|eduard@valeyev.net|Fixed minor errors in AVX and QPX SIMD classes.
fa8397ed561d2c9726013867b75c0072e43049fd|2012-04-01|eduard@valeyev.net|Minor changes to doxygen config.
f9f6ae47883da2c8158561edd6048fd827ac334f|2012-04-01|eduard@valeyev.net|Introduced libint2::simd namespace and improved user interface to SIMD vector classes.
7ec5c7886c09895412c7cecc1850c6507d4c605b|2012-04-01|eduard@valeyev.net|1) Renamed DoubleHummer to FP2, to follow the nnaming convention of clang. 2) Tested FP2 on BG/P, assembly looks ok.
1023dd32902891a94f369c745205185b54f639f3|2012-04-01|eduard@valeyev.net|General fma_minus op had a bug: + instead of -.
b51b56413bab56536b0be551a30e161ea130cb05|2012-03-31|eduard@valeyev.net|Implemented support for scalar and SIMD FMA instructions. Not fully tested yet, only superficially on x86.
d136c6921bd90275aee7e2708bac541c54c09b33|2012-03-29|eduard@valeyev.net|Minor fixes in the vector_ppc.h
8f10d2a7eb3e2002fe12cae5f8206bd15b5cbc47|2012-03-28|eduard@valeyev.net|Added support for Double Hummer instructions.
71708823e6507de8bc89adc01a0ddb3ce1bc878f|2012-03-28|eduard@valeyev.net|Added support for QPX intrinsics with clang on BG/Q.
ceb012fa40732693c6960454e71bbd29197aec38|2012-03-28|eduard@valeyev.net|Fixed minor compilation problems in QPX vectors.
8b87ef7144bcfd7b3abaa8986ca4acf94868de9a|2012-03-28|eduard@valeyev.net|1) added support for QPX instructions. 2) minor cleanup.
3d0c91bd9354b58e2711f85660a814b781deddda|2012-03-28|eduard@valeyev.net|Minor fix to pacify picky compilers.
354c8518bf6ee880f2a5cbb35c3685dd460fe8b9|2012-03-28|eduard@valeyev.net|Added immature support for SIMD-style vectorization. It is implemented by using custom vector types (see src/lib/libint/vector.h and vector_x86.h).
a2e237095216a8a429e72cd8fc1b309661bd252b|2012-03-22|eduard@valeyev.net|Test for and use posix_memalign to control stack alignment in Libint2.
b666ac2dd516c0ff97cb10a940627a27dfcf2169|2012-03-20|eduard@valeyev.net|use CXXGEN as little as possible in test_eri --cough ... xlC sucks ... cough
ff12ee7c0bc8a1883b3f721f6ac8f0726208b2c7|2012-03-20|eduard@valeyev.net|1) added configure checks for    - posix_memalign, and    - C++ features. 2) fixed a faulty use of C++ lambdas -- now with proper compiler support I can use them.
638c49eff7a34c14736a35e3a577b24e4b145c63|2012-03-20|eduard@valeyev.net|Loosened the threshold for declaring ERIs produced by LIBINT wrong.
96aea04eb4dc97f25ac111d2f029c1dc3d612d27|2012-03-20|eduard@valeyev.net|Minor fix.
6ce9755a1a55bcad32e67f7267c2a57f188febb8|2012-03-15|eduard@valeyev.net|More changes to allow use from C.
f2e4e747c4d7768f8b485eb7e4d3fd61fb6d90bc|2012-03-15|eduard@valeyev.net|Another minor change to allow use of libint2 API from C. Thanks to Xiangqian Hu <xqhu@duke.edu>.
5acbf3b101309e3f2bde390044a9638243eeb60d|2012-03-15|eduard@valeyev.net|1) Added Intel-specific vectorization pragmas 2) Hid "mutable" keyword inside C++-only preprocessor blocks.
2b10c9214fe9d3610c491e38b0598dac929796bc|2012-02-20|eduard@valeyev.net|Vectorization is back!
d673d4eeb66759cc8156ba832fb0981e65a30657|2012-02-19|eduard@valeyev.net|test_eri failed wirth g++ and icc; fixed the culprit (CompilationParameters::TaskParameters::num_bf was not initialized).
948892cbe274f9a2085cb30db14d18dedf6ff312|2012-02-17|eduard@valeyev.net|Updated comments in doc/sample and tests/eri.
7f3a6fcbc3ae27236e2030017894473f0604bb73|2012-02-16|eduard@valeyev.net|1) rename: ShellQuartetSet -> ShellSet 2) updated email address.
78318c5f33899a6589588b9e7f0c92ae086b6ed2|2012-02-16|eduard@valeyev.net|Added missing cstdio header includes.
af8b1ad9cd15fe2b09d9b8803ec4a5e9a4503491|2012-02-16|eduard@valeyev.net|RESOLVED - issue LIBINT-13: does not pass tests if contraction support is on and unrolling is on http://valeev.chem.vt.edu:8080/browse/LIBINT-13
df9620317f093ee17f3af916bd64f10e93884d5c|2012-01-25|eduard@valeyev.net|CLOSED - issue LIBINT-20: implement two- and three-center ERIs and derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-20
7023244e078c13c40eb004215cb1d6390970a84c|2011-12-15|eduard@valeyev.net|GAMESS ordering is wrong for l=4 and higher functions. Fixed l=4 case manually, for higher momenta there is no standard at least in GAMESS-US.
57870fbc7448ba64f72de24227cb61b1de5f4332|2011-11-21|eduard@valeyev.net|IN PROGRESS - issue LIBINT-18: Update documentation to explain how to use contracted functions and derivatives. http://valeev.chem.vt.edu:8080/browse/LIBINT-18
2c0522f649c2414c3e6bf29f9a91a30d8bcd9558|2011-08-16|eduard@valeyev.net|1) Latest intel compiler (v12) now works; clang doesn't on OS X Lion (some functions are not instanciated) 2) ITR is supported 3) GMP is now required
871c10a9a2d9ec0cd40b6796f26bbbcc4c5c3d68|2011-08-15|justus.c79@gmail.com|Added virtual keyword to purge function.
82262b879a997fcb5359fb56e44e2d1785b9a5aa|2011-08-15|justus.c79@gmail.com|Added missing include for an undefined symbol.
ea8bed56a9497d01a0c63b395b96fac4c6456b25|2011-08-14|justus.c79@gmail.com|Moved template function implementations for DirectedGraph into the main header file.
7879216b3879fc845399068868d7f8ca28845673|2011-08-14|justus.c79@gmail.com|Removed template implementation file.
00b1ccd6f37d9f41d73a8fb1815cbae30938b351|2011-08-14|justus.c79@gmail.com|Moved SingletonStack member functions into header.
3f13a430105d2ebe78322eb1bcc45b52597f5b5a|2011-08-14|justus.c79@gmail.com|Moved template function implementations for RR into header file.
b9f011d9c33eafc7f011cc93e0f942dbfda72f9e|2011-08-14|justus.c79@gmail.com|Moved Pergable::perge() functions into header file.
5cb99c8b7a6c6747766023193da04491d3dc2e0b|2011-08-14|justus.c79@gmail.com|Removed "using std" from header.
20e518eccbbc0e5c9493a5677f0c5b5f16b964c9|2011-08-13|justus.c79@gmail.com|Added missing virtual destructors.
7f1f35ec9adadde5525e3dfb7620dbdca3033670|2011-07-05|eduard@valeyev.net|Changes to make export and install work correctly with recent changes for GAMESS-related features.
011701f52810226e7ba6bccfcd5c57666c8d50d9|2011-07-04|eduard@valeyev.net|1) fixed minor bug in cgshell_ordering.h that occurred when compiling for gamess ordering. 2) can install cgshell ordering headers ...
8e24c55841fddb74115aa0dae74ff1a1f4eebcb6|2011-07-04|eduard@valeyev.net|Added MakeSuffixRules to doc and src/lib
591989365f9a261e85a8ecb319c92baa87ccfed8|2011-05-18|eduard@valeyev.net|RESOLVED (followup) - issue LIBINT-11: Ticket 6 (revision 483: configure fails) http://valeev.chem.vt.edu:8080/browse/LIBINT-11
ff133343420452f8d0e784f1ee0390d1f7f69da5|2011-05-16|eduard@valeyev.net|RESOLVED - issue LIBINT-11: Ticket 6 (revision 483: configure fails) http://valeev.chem.vt.edu:8080/browse/LIBINT-11
a91bbc77fa877f07342222e3f2552e3cd62aef08|2011-05-16|eduard@valeyev.net|Merge with a598f67e081fd7647a7b11a4892f1dff2b759677
ba4c2598a38fe967e16554fabd603ea07f0c647a|2011-05-16|eduard@valeyev.net|Only generate HRR for uncontracted functions.
fda9acc7aeea1671a241f2fba3b1739b11c4cf2e|2011-05-16|eduard@valeyev.net|merged default with the rest of prerelease-2-branch.
a7980e729c51efed061f376fb48606fb49fe3922|2011-05-16|eduard@valeyev.net|Merged prerelease-2-branch to default.
87a51a5b06cddd24265b8dad63ebab08ad29ee46|2011-05-02|eduard@valeyev.net|Removed stray debug print statement.
c0a25df069bfe6ac47b10c2020d209bd655e7d11|2011-05-02|eduard@valeyev.net|RESOLVED - issue LIBINT-9: issue 4: Segmentation fault from build_libint when asking for support of [Ti,g12] integrals. http://valeev.chem.vt.edu:8080/browse/LIBINT-9
5743eac9e509cd2b4f49c9e15f7be5a21e996c9d|2011-05-02|eduard@valeyev.net|installation of headers was messed up in revision 353:af68a6ded20a. reverted the mess
63dfdbf64be42ccfbb20fc075ae9822a288f469a|2011-04-29|eduard@valeyev.net|Added Readme to doc/sample
ae989562b9ae48634426e081c374e2a7201e792d|2011-04-29|eduard@valeyev.net|RESOLVED - issue LIBINT-8: issue 2: configure does not pick up env. variables (e.g. CXXFLAGS) http://valeev.chem.vt.edu:8080/browse/LIBINT-8
d2881d56ead0bc56882b8a8231a313a399638e9f|2011-04-25|eduard@valeyev.net|resolved issue LIBINT-7.
b0eb6f4462a47019113e1f5937fa18d872956df5|2011-04-25|eduard@valeyev.net|CLOSED - issue LIBINT-6: Avoid generation of CR_g12_Ti_g12 recurrent relation code http://valeev.chem.vt.edu:8080/browse/LIBINT-6
8e0faec117f4357fc1f76d9f9d31ffcd01e6900e|2011-04-24|eduard@valeyev.net|Closed - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
1c3a9874eda16e634c4c070617bf1aad4809d94c|2011-04-22|eduard@valeyev.net|verified derivatives for standard and orca orderings - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
a6c6261941ba9c0858577a97e65de02ac5219bf6|2011-04-21|eduard@valeyev.net|implemented tests for derivative ERIs (of any order); generated derivative ERI code now works - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
3d75a4c5a952f147f34bf0ca68007e271222426a|2011-04-20|eduard@valeyev.net|added (untested) generic OSVRR code for xsxs *derivative* ints- issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
45bfebeabb22ebe7a525b9e9d24850c832db15d9|2011-04-20|eduard@valeyev.net|first derivative code can be generated and compiled - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
daa5fbe92198e378c369c8bb3353b8fa173e75fd|2011-04-19|eduard@valeyev.net|driver is ready to generate 1st derivative ERIs, compiler core breas though - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
b80ceb1e558877ee053c9203ca9531fcb30eaa91|2011-04-19|eduard@valeyev.net|*I THINK* all code for derivatives is there (except the driver) - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
e89f68f29f817a6ab7b617c9e9aca6384136542a|2011-04-19|eduard@valeyev.net|resolved runtime issues of the previous commit - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
70956d6bf5148d817b85509446f733d14a62ffc3|2011-04-19|eduard@valeyev.net|Derivative ERI VRR and CR are implemented -- test::test6 fails, need to debug through valgrind under LInux - issue LIBINT-4: Implement ERI derivatives http://valeev.chem.vt.edu:8080/browse/LIBINT-4
b0b43da348b47e646a35d81e730c9f68bac42a92|2011-04-17|eduard@valeyev.net|tested ERI and G12 (no commutators) using MPQC - issue LIBINT-2: Implement contraction http://valeev.chem.vt.edu:8080/browse/LIBINT-2
8ee889b30ffcba8a3e03f96ba200d0c91e08145f|2011-04-17|eduard@valeyev.net|generates compilable code, not tested yet - issue LIBINT-2: Implement contraction http://valeev.chem.vt.edu:8080/browse/LIBINT-2
2024bc053a06a111a4ba1359d5c3fc094463ffac|2011-04-02|eduard@valeyev.net|Appeased cppcheck and built-in Eclipse static code analyzer.
273831f84bfe8bc7e12c27fb2e6a5e3024eb355c|2011-04-01|eduard@valeyev.net|Fixed bugs and complaints by clang and gcc -Wall.
f5de9f797ff353d3087d55d7e8d820f416aa0de3|2010-10-19|eduard@valeyev.net|update tags
735176586fa99ba3d8d386c028d3fce5033eb2eb|2010-06-09|eduard@valeyev.net|Fixed minor bug introduced in updates related to memory management.
e62b8c19ed4aa9638ff72d9d91d2a6758cf2e832|2010-06-09|eduard@valeyev.net|1) libint2_need_memory functions now use max_am argument to properly compute the stacksize. 2) some preliminary work on contraction handling. 3) misc fixes/updates.
70c2d65c0ae85743c6867a2e0484bb1b136cdf50|2010-06-09|eduard@valeyev.net|Minor update of the intallation guide.
1d1b125749d88e7fd23f9f5ff376f1bf3aa6a9e4|2009-06-27|eduard@valeyev.net|Fixed the bug associated with static array size (noted by Frank Wennmohs).
6bf45b4cb12d68de094b81effb7397d30a000ec2|2009-05-15|eduard@valeyev.net|1) added support for G12 integrals using ORCA conventions 2) made first steps towards support for contracted functions.
6f2cc9184af9ed4da6a51c59e367e4f8d43a2daf|2009-05-05|eduard@valeyev.net|Can generate separate evaluators for each integral type in the G12 set, for now assuming no support for [T,G12] integrals).
84049a1bda7513b2ef5f626f4bc32d8fba2e43d3|2009-04-07|eduard@valeyev.net|1) reenabled subtrees, but they don't seem to work! 2) turned off safety checks by default 3) turned on elimination of trivial arithmetic. May break [Ti,r12] code.
e85aa839055e2eed0f86621daecbae0d46e3d58e|2009-03-22|eduard@valeyev.net|Updated the contact info.
ed561316510b42ca4ae8e62984789a160a04c1b5|2009-03-16|eduard@valeyev.net|Another update.
8c5db3378dd6f76e9bb842d62b51b7581af50946|2009-03-16|eduard@valeyev.net|Subtle bug introduced in FOR_CART() macro by using local variable with a common name "xyz".
8f37140146eff6c72c3c202c40c8f02f696c3b1d|2009-03-16|eduard@valeyev.net|Added generic VRR build on B
d332b51d5dc630ad5c6bf6998ef01e2c9e2c5c98|2009-03-16|eduard@valeyev.net|Implemented generic VRR for ERIs of (0b|0d) type. There is still a bug.
bbbad3ab3c28265a6536b55bc3b4a03ceaec4e6d|2009-02-27|eduard@valeyev.net|Added inline flags to local functions in cgshellinfo.h
8ff98e252ed442ee374eb0d429d510f7a122ecb3|2009-02-26|eduard@valeyev.net|cgshellinfo.h needs to be included in the export.
80690047fa8e639cd4872d72ba48eec378778907|2009-02-26|eduard@valeyev.net|Started adding G12 tests. Not finished :-)
9b54620fd9c266b64a2515aafb863cab69ac7fae|2009-02-26|eduard@valeyev.net|Able to pass command-line arguments to make via command-line of test_eri.pl . This allows to perform timing tests for multiple compilers and compiler options.
7afca132b7ab8a068b91a2506174ba4de4eda275|2009-02-26|eduard@valeyev.net|Removed an unnecessary test
ce23be60de3609717e2e5dc3cf13b1edb426aaf7|2009-02-25|eduard@valeyev.net|1) the choice of shell quartets to be generated (standard or ORCA) is specified via configure. 2) added timing suite.
a88fa949dfddf5012764bc8f65097557036d82c9|2009-02-22|eduard@valeyev.net|Correct ORCA ordering for up to lmax=8.
faee74b14b7fda4e08c4c189839dede044409eb7|2009-02-22|eduard@valeyev.net|Added Makefile for eri test
a746d1aaad9334e6a310c956203e50910132a5b7|2009-02-22|eduard@valeyev.net|Implemented correct shell angular momenta ordering for ORCA.
1962cd7de30296df89b9a64faaba65ac3bde7428|2009-02-22|eduard@valeyev.net|Minor fix.
58a18a748dff6691ce9e406881018309310db761|2009-02-22|eduard@valeyev.net|It seems that making GenIntegral non-Singleton breaks the RR logic.
bec03aa2b634c4288fbb2cacb20f3dbf4edc912c|2009-02-22|eduard@valeyev.net|Debugging the problem in HRR.
0611ba80f45ecd682fd21e41597e9a6fb4341360|2009-02-22|eduard@valeyev.net|In the middle of porting to ORCA.
c4673837b4a73660b6751268109a7456cc20eeab|2009-02-22|eduard@valeyev.net|Updated e-mail address.
15759b544554de129f2cc6acd6bd7178c8ae74c5|2009-02-21|eduard@valeyev.net|Porting Libint2 into ORCA: can do now. Need cleanup.
ae491c4439b12ba6c8d9bb535d7ad9d580d8109b|2009-01-28|eduard@valeyev.net|MemoryManager's destructor needs to remove cyclic references.
039ecf995a2cccc4a64cd89e05a5b71c2f5146f5|2009-01-27|eduard@valeyev.net|GenIntegralSet should not be a singleton.
456040a8029666797f09c84f2e779c66d9f77dfd|2009-01-27|eduard@valeyev.net|when generating RR code purge the stacks.
4168f6558dcf7eeb92135db549638416256ba5e8|2009-01-27|eduard@valeyev.net|Fixed SingletonStack::purge().
18a041806de03e5009f5dead5a4912e2a5ceb875|2009-01-27|eduard@valeyev.net|SingletonStack can now be purged if its contents are derived from DGVertex. See PurgableStacks.
a79011afa4fd6f989169239b6f490de0855faccc|2009-01-27|eduard@valeyev.net|Minor refactor.
4d014a36c8cb1a053155e0aeabe4d0b9a0550aa6|2009-01-27|eduard@valeyev.net|Unregister must be overloaded for GenIntegralSet_11_11 since the objects of this type are managed by its own manager.
e78980a7ace02dcb58315d3afc20d585133ae5c0|2009-01-27|eduard@valeyev.net|minor cleanup.
c9f713da6227684063d7dae63ac6f791836fe658|2009-01-27|eduard@valeyev.net|dummyintegral.h is not longer needed.
853fa6f1965b39390aa2df1e3f81653313103de8|2009-01-26|eduard@valeyev.net|Removed an extra character in symbol for R12k_R12l_G12 operator.
41df634fe0d94802118c87e106b146de285e521c|2008-11-12|eduard@valeyev.net|description() output should not be cached to minimize memory use.
f3f4feb56b0cd706621e4f6131c6551b0e64990d|2008-10-10|eduard@valeyev.net|Removed junk.
38ea4b9872217779bfd141ca91980932269f4e02|2008-09-03|eduard@valeyev.net|1) extractor should skip unrolled integral sets composed of precomputed integrals 2) update libint2.h macros to account for the "s" -> "s_" conversion.
7135ada2b018784c5a2cd05f3fbb1dcf74151bac|2008-09-03|eduard@valeyev.net|Removed integral.cc
698db92d1a2670ace291c3211c3803b80cc55df9|2008-09-03|eduard@valeyev.net|1) remove_vertex_at no longer throws but return true or false 2) memory management had to be slightly tweaked to cover the gap in logic exposed by DivG12prime_xTx integrals.
d66155b5c1138090417df5e6c7c4bdb0780a0013|2008-09-03|eduard@valeyev.net|Generate DivG12primt_xTx integrals for electrons 1 and 2.
3f44f0f02c64f4a23a3fbeccde749a8fcbc4846f|2008-09-03|eduard@valeyev.net|More debug printing added.
90d2bca335d35bad0be1474a755dc90b123b0520|2008-09-03|eduard@valeyev.net|Denote s-type CGFs using "s_" symbol.
be13abb70938c48825a00aa08194d6c6c7291755|2008-09-02|eduard@valeyev.net|DibG12prime_xTx integrals must be computed for electrons 1 and 2.
7a67163dfe18bcbfa49ff88bff8eaacfb48cb76a|2008-07-08|eduard@valeyev.net|Fixed an incorrect path to find source and object files.
a0f9a82cc225864133235719ff71447fd3bd0580|2008-07-06|eduard@valeyev.net|Switch to find to avoid command-line overflow problems.
4315bbea9ddf1b85e69ffbd50f408dea9bbfdca1|2008-07-06|eduard@valeyev.net|Forgot to redefine LIBINT2_CGSHELL_ORDERING_.... in cgshell_ordering.h.in for the case of including in exported source.
2847846a471a5b11aa9a0415d3ee5b89283d7ac7|2008-07-04|eduard@valeyev.net|1) Reimplemented DivG12prime_xTx in terms of R12kR12lG12 integrals. 2) The definitions of known orderings are now also part of libint2.h so that MPQC can use meaningfully-named macros instead of integer constants. 3) used CBra instead of PBra in many spots.
c0ba056a14191fccb568a131a6ec3f4471164ffa|2008-07-03|eduard@valeyev.net|Another massive lis of changes: 1) Introduced R12kR12lG12 operator and reexpressed [Ti,G12] integrals in terms of it. 2) Split master.h to _ints_ and _rrs_ 3) removed typelist.h 4) Introduced VectorN and replaced tuple<int,int,int> 5) misc cleanup
78b5e13dc418f12bd8a128d7f37b3fd86aa047a5|2008-07-03|eduard@valeyev.net|Added run_test target.
73521af27a28933b520feff2d249e0dfc5d4355f|2008-07-02|eduard@valeyev.net|Ready to switch to R12k_R12l_G12 in implementation of [Ti,G12] and DivG12prime_xTx.
4a5dd49e5a9b3f4d58c37119fdd787589f7ad7f5|2008-07-02|eduard@valeyev.net|1) Updated Operators to report permutational symmetry and hermiticity. 2) HRR now checks hermiticity to decide whether it can transfer quanta. 3) HRR can be used to build [Ti,G12] 4) DivG12prime_xTx seems to work also, but not tested.
f1996fba91731070d3bdef14dcfad07001f8d404|2008-06-18|eduard@valeyev.net|Adapted test to recent changes.
3a25d98ce15d3dceb2784ac90b197364be274572|2008-06-18|eduard@valeyev.net|Hide "unrolling" diagnostics begind #if DEBUG.
9e50695ac6614501a1d28a4110a72a8184a688d0|2008-06-18|eduard@valeyev.net|Added typedefs for HRRs for [Ti,G12], but can't use yet because non-Hermitian operators do not announce properly their properties.
b080f82bc5cf0c679537e5fbfcb250bd82fe7280|2008-06-18|eduard@valeyev.net|Removed test from build_libint.cc . Need to retrofit test.cc to work with the recent updates.
ebd4eb632e8b127d0f9fd9dff2051311ec8da510|2008-06-18|eduard@valeyev.net|Implemented [Ti,G12] integrals using R12vec_dot_Nabla code.
a72f221fc5f184a27954e68f44bcd6d9885822a7|2008-06-18|eduard@valeyev.net|1) remove_trivial_arithmetic is not robust enough to handle unoptimized [Ti,G12] code -- disable for now. 2) couple of minor fixes.
4c5408dc366c746937d81e79ce033345316739ef|2008-06-18|eduard@valeyev.net|Added a debug statement in del_exit_arc to match that in add_exit_arc.
a8b7c3da496017694c0dd7ac4527952c367921dd|2008-06-18|eduard@valeyev.net|Announce unrolling with a diagnostic statement.
536df25bb652718dc4f836d7faf2f167d9a44d3c|2008-06-18|eduard@valeyev.net|Prefactors' compile-time constants now use Scalar.
c7022b23963fddd0df70be467a1d4eb274a21654|2008-06-18|eduard@valeyev.net|Fixed a serious bug in add_child -- it always returned the last child.
cfa120a4c72e2996d48817517140b700e3ad9d4d|2008-06-16|eduard@valeyev.net|1) Introduced algebra::LinearCombination and algebra::Wedge 2) Implemented R12vec_dot_Nabla 3) Started implementation of CR_11_TiG12_11 using the above functionality. 4) Moved make_child to GenericRR.
6d436d63b0d4f079957510bf4de990e08ac54f73|2008-06-10|eduard@valeyev.net|Converted CR_11_TiG12_11 to GenericRR.
8ac03f31e11ba67c2429a06d94bf886f97a89684|2008-06-10|eduard@valeyev.net|1) Replaced old VRR for R12kG12 with the new GenericRR-based version. 2) Converted OS VRR to GenericRR.
d1bd7147c7a8e8438abc72110e6fda3b1f54b90e|2008-06-10|eduard@valeyev.net|1) New implementation for VRR for R12kG12 integrals passes tests. 2) ITR seems broken.
d55f72f72b1e6c3a8c218ee2555676e7e3f689a2|2008-06-10|eduard@valeyev.net|Make static library using for loop + ar.
582494aa6b2a230ccc9f363f8ec8fc0424780f54|2008-06-10|eduard@valeyev.net|1) Removed RecurrenceRelation::cpp_function_name and otehr similar unused functions. 2) Introduced GenericRecurrenceRelation which is a host template for making RecurrenceRelation. 3) Reshuffled some header files.
2a975a043da156c8608b04b7f1d245a5cd2dcc82|2008-06-05|eduard@valeyev.net|Started rewrite of [Ti,G12] relation. Realized that I need to rederive the expression to make it more efficient. Added the integral to the master list, however, CR_11_TiG12_11 will currently throw if used.
e0150ac4d4a69fc027a8768bac909495bfd6c8a3|2008-06-05|eduard@valeyev.net|ITR now also works.
601183ec2ed34ea9867d01d16b6402fff84a041b|2008-06-05|eduard@valeyev.net|1) Long-anticipated rewrite of Strategy using metaprogramming constructs. The power of MPL is pretty amazing. 2) Variadic templates no longer required.
242ec5829deeaab80ce347f64534ae49f6642068|2008-06-04|eduard@valeyev.net|Converted R12kG12 VRR to the new coding style. MPQC tests passed.
be8fabf579043dc5e8949ac594418afeb7020530|2008-06-03|eduard@valeyev.net|Proof-of-concept rewrite of VRR_11_TwoPRep_11. Expressions looks much more natural. Will not need Prefactors any longer. Fixed libint2.h so that tests work again (symbol of TwoPRep operator has changed!).
9f93539cae51c3c9f87c1ce3a8c7cbc205a30194|2008-06-03|eduard@valeyev.net|Added algebraic operators that help express RecurrenceRelation in very compact form.
162c2bd760d9344abc8638a38e7d816520ac85d0|2008-06-03|eduard@valeyev.net|1) Decreasing IncableBFSet can result in invalid state, which is persistent. This is useful for expressing Obara-Saika and other recurrence relations. 2) Added operators + and - for CGShell and CGF.
ff42b14475187d1a74005adc39b18153858a0d0d|2008-06-02|eduard@valeyev.net|In the midst of massive changes designed to simplify the code. The main changes so far 1) all operators are implemented in terms of a host template that accepts operator descriptor object; 2) all 11_Oper_11 integrals are implemented in terms of a host template. These changes require gcc-4.4 to compile. Only standard VRR, HRR, and R12kG12 VRR have been modified so far. Next will go back and reformulate those to make them much more compact.
fd1dda36d7f26fd93754622333dbb99fa70aec57|2008-05-24|eduard@valeyev.net|Added --enable-generic-code configure flag. G12 VRR code seems to work correctly.
5751a845ef250433d6a6654c18ba864bee735fd7|2008-05-23|eduard@valeyev.net|Now compiles.
5d7a54edfde0046a1fd46412609a819692187c73|2008-05-23|eduard@valeyev.net|Missing include directory prevented in-place compilation.
9386321e69f69a55fed774923bfd55cbd304fac3|2008-05-23|eduard@valeyev.net|Added generic code for VRR r12^k * G12.
40d17b7f6af2c4c4a1c5bbb17a00e7e1f966765a|2008-05-23|eduard@valeyev.net|Removed an unnecessary conditional in INT_CARTINDEX for standard ordering.
c9685032e6e3304cd69a7bac62a4eec5d42e6164|2008-05-23|eduard@valeyev.net|Minor fixes.
913fecf2b31b20beee3f4ba5e6a06aecff60227a|2008-05-23|eduard@valeyev.net|Lowered the threshold for maximum allowed difference.
839c78f7aad0415e7c808d1faaa8829e259a01c6|2008-05-23|eduard@valeyev.net|Added brief documentation and eliminated one variable recomputation.
cd1410aab6af3a7de834e6f6251f6633fce009b4|2008-05-23|eduard@valeyev.net|Refined the logic that determines whether to use generic OSVRR code.
f19150dd17ead39927b7c5c8ab17ff953a2073ab|2008-05-23|eduard@valeyev.net|Ooops, FOR_CART iteration variables cannot be unsigned!
9999eff26e775d3fc3a1f7a7818855fc06fbb577|2008-05-23|eduard@valeyev.net|Standard ordering FOR_CART loops did not work with *unsigned* integer loop variables.
c1c248a923482d5146c4ffaaf36b6d80fabd78ec|2008-05-22|eduard@valeyev.net|Can now generate, compile, test, and export using generic OSVRR code.
91fcdc6fa6ba46f319f42772bbe8ffcfa52af2f1|2008-05-22|eduard@valeyev.net|Moved FunctionPosition and FunctionMovement to separate source files.
f08d91d5c36c08c2f93822d0234c74487fd80c71|2008-05-22|eduard@valeyev.net|Pick up vector length from CompilationParameters, not from macros.
2ac61e81bf758a1145fdc02cde7e81643a19778e|2008-05-22|eduard@valeyev.net|Need to set inteval->veclen.
9ad9e4612a51228dd53dac4123483703f1265043|2008-05-22|eduard@valeyev.net|Must add include directory to use generic code.
5a2b7e189951f86cbad03cf313debac3b87888da|2008-05-22|eduard@valeyev.net|Enabled use of generic OSVRR code.
6568b431f7f77c47e51ddef1370dcfa16e4a59f7|2008-05-22|eduard@valeyev.net|Can now use generic code.
0e437e6783cb55ab83d2b4eb56b06ffc49d6a029|2008-05-22|eduard@valeyev.net|1) clear func_names_ in reset() 2) factor out production of header from generate_code()
1878fd8bd7bc4f473458086570aef456bda5054c|2008-05-22|eduard@valeyev.net|Deleted unnecessary functions (base version are identical).
96fb1ffb68c9c5f99a3065e6003acd9ada053224|2008-05-22|eduard@valeyev.net|Some innards of evaluator structure should be mutable.
01f3b8b0535553e0e05c911fcbaa5792c3f6261d|2008-05-22|eduard@valeyev.net|1) made many members const 2) added mutable_modifier()
bf15fc317f3d74e6afc511871d5cda1a6d3dd88e|2008-05-22|eduard@valeyev.net|Added generic implementation of OSVRR.
d1358e5f75f5e3c0660d95cff31f9e7d0cd20717|2008-05-21|eduard@valeyev.net|Condensed explicit ordering code using MPQC macros.
ae10fa8df21adb35d34d120c71a864aa0b81aaa5|2008-05-21|eduard@valeyev.net|Imported MPQC macros for dealing with cartesian Gaussians.
b68d7c7b4db9457575874249a0851de86f94ed32|2008-05-21|eduard@valeyev.net|Make nflops a mutable member.
129d1a54702ad63429139a4e36334764aed8ebbf|2008-05-21|eduard@valeyev.net|Removed obsolete code.
c2ab9b80c1f50ca4bd3bc72132a3609919d91a20|2008-05-19|eduard@valeyev.net|'export' should install file by file to avoid problems when there are too many files.
a4ad3dae71e1ee748837434cd73ce3080411f2dc|2008-01-29|eduard@valeyev.net|G12DKH calculation requires r12^k * g12, where k = 4, 2, *AND* 0.
386de09ef747a53fc573355cc968b5b4581c5475|2008-01-29|eduard@valeyev.net|Added a missing #define.
0cd1349d90b933ae39e584a71a45655d86b79982|2008-01-28|eduard@valeyev.net|Finished with G12DKH changes.
f6ce11a17ba2b68a0e54ca928034985ce8989a1b|2008-01-28|eduard@valeyev.net|Added G12DKH capability.
f9a5ce59cff73c7f6e10abfd6fb4167de2c41410|2007-12-06|eduard@valeyev.net|Add ordering info to the API.
7de2a8e8605c83dbefc6ed13795d92dbd215b2a3|2007-12-06|eduard@valeyev.net|Upgraded to libtool-1.5.24 which works on Darwin.
3543c4498a36304c65ab53b426a27b20d5d73f22|2007-12-06|eduard@valeyev.net|Upgraded to libtool-1.5.24 which works on Darwin.
ee8bf54a0d821bfcf49b3eb48b6d21a5bea8c4ea|2007-12-05|eduard@valeyev.net|1) Updated libtool to 1.5.23b 2) renamed HOST_ARCH and TARGET_ARCH to LIBINT_HOST_ARCH and LIBINT_TARGET_ARCH.
d0009a3627b89b92bdbb4bd3ae67ec7606d30315|2007-08-29|eduard@valeyev.net|Additional refactorization of Makefiles.
a4ebc9170e755bd62ca4f19684b2b22d801bdf32|2007-08-29|eduard@valeyev.net|Repeated distclean still didn't work. Should now.
f84fed72f36bc855461ebf05fd5d3d4389fe4c53|2007-08-29|eduard@valeyev.net|Fixed Makefiles so that repeated distclean works.
2e4a169c7a6afaf959d75e9ff6ce41056f593263|2007-08-29|eduard@valeyev.net|fixed severe bug in libderiv and improved/fixed build process following Daniel Leidert's tips.
6c497e723c61b7a7ceec6bdeaaeaf0efb2eb1036|2007-06-03|eduard@valeyev.net|Upgraded to libtool-1.5.23b .
85d08db63ef9c0f973345bdd1b626d8a81bb48db|2007-05-16|eduard@valeyev.net|Added configure option to disable support for [Ti,G12] integrals.
8a690161e66dcb741b479842de5678766d8da1f5|2007-05-10|eduard@valeyev.net|Fixed serious bug: DirectedGraph needs to use a Sequence container to hold target references.
c59e12cab316c69ccce5cc8d65365724d1dd7d4a|2007-05-10|eduard@valeyev.net|Very minor changes: 1) use a macro in Strategy to switch on/off use of HRR for [Ti,G12] integrals; 2) Move some includes inside header guards.
7f0944930b291e29b2a257311f536b1cd5a52639|2007-05-09|eduard@valeyev.net|Forgot to add R2dotR2...
d303671b327875558fdc67e352edd77a0e6a70da|2007-05-08|eduard@valeyev.net|Added R2dotR2G12 etc.
65a46f780b9f260b0a9252e285d75820c3a5e3c4|2007-05-08|eduard@valeyev.net|1) minor fix 2) r12^2 gg12 also needed in geng12 case.
d919e81c171c42bdcc0ec333549208b5f0a437e1|2007-05-07|eduard@valeyev.net|MAX_AM for GENG12 were not set properly.
8e4a901b0121c726833a16357e1abe110da720da|2007-05-07|eduard@valeyev.net|Minor fix.
b51ee6026e0bf1cd109401d08254adb94fd135b0|2007-05-06|eduard@valeyev.net|Use HRR to compute integral over [T_i,G12].
6f071816ef704b9a771ffb1447c461bb2c0bd471|2007-05-05|eduard@valeyev.net|05/05/2007:	1) First take on computing integrals over exp(-a(r1+r2)-g(r12)). 		2) Updated test. 		3) Treat geng12 as an independent task. Task management much improved, especially in CompilationParameters. 		4) Fixed a bug in VRR_11_R12kG12_11.
fe3082456419c71db27ab118b447af7223488775|2007-05-05|eduard@valeyev.net|Need to add expr0+expr1
0adf354178e700539f3dc16bd4c00364bca81fd9|2007-05-05|eduard@valeyev.net|Need to include task.o .
e35701af95bb60e97963b9d9137d437dde51e479|2007-05-04|eduard@valeyev.net|05/04/2007:	1) First take on computing integrals over exp(-a(r1+r2)-g(r12)). 		2) Updated test.
8c4343f75a272ae813749ecf8ce214d2eceb59cb|2007-05-03|eduard@valeyev.net|More updates.
069289c0ca1586812bd7374b923211d95d5834e9|2007-05-03|eduard@valeyev.net|1) Built in many services needed by RecurrenceRelation's derived classes into the base class. 2) Introduced operators r_1 . r_1 * G12 and r_1 . r_2 * G12 and their integrals. 3) Updated test.
a055b566cd2a748d716109ec6012139e4becd80d|2007-05-02|eduard@valeyev.net|Fixed a few bugs which affected build_libint (not test_eri...).
7a37936318e388cde5717dfd0ab3f70ff1703b5d|2007-05-01|eduard@valeyev.net|Made some "expensive" safety checks conditional on a macro variable.
68c1a4adba46af96720b2e2a9b69009bc67e5ec2|2007-05-01|eduard@valeyev.net|Changed storage of arcs in DGVertex to more efficient std::list + remove/turn-off unnecessary safety checks.
8104590766339ed447741e9f42b9f6631feb6509|2007-04-30|eduard@valeyev.net|DirectedGraph::find_subtrees should use hints to avoid doing pointless work.
bea6eb3cb441ba1b3dad77d27e9791f84a76329b|2007-04-30|eduard@valeyev.net|Get rid of tabs.
850f6cb9fb2ae31e12c3f545c9b121591cc9ba01|2007-04-30|eduard@valeyev.net|DirectedGraph::apply_to can check whether outgoing arcs exist to avoid further work. This should speed up graph generation significantly.
9f9128d9d314f9cd38fc0994694a1d95cf06abce|2007-04-29|eduard@valeyev.net|RecurrenceRelation::generate_code() can determine whether to use CSE.
27522961d43625850733ba5c725987a4707fe8cc|2007-04-29|eduard@valeyev.net|Free up subiterators for bra and ket.
39e6c551b5a784a12a6d95088654101b223a94f2|2007-04-29|eduard@valeyev.net|Add some obvious functionality to IntegralSet<T>.
b409a790cb9762120782c882553ddbb9d2119cf6|2007-04-29|eduard@valeyev.net|IncableBFSet can now compute norm of the quantum numbers.
edd048545313462f00d26ba346a59de7c06f6b1d|2007-04-28|eduard@valeyev.net|Braket::member_subiter allocated subiterator which were never deallocated. Fixed this.
ce6d066f1883252d468d5e0e9dc8ccb37fac8a3b|2007-04-26|eduard@valeyev.net|Converted DirectedGraph to use std::multimap. Many improvements to speed-up DirectedGraph remain, but this is the first major step.
553cad6cc12cf01146a1445b02b5b9f93679a82d|2007-04-26|eduard@valeyev.net|DirectedGraph can also use multimap. There is a bug somewhere, which may be caused by gcc on OS X??? Something fishy, need to test elsewhere.
d04fa65291b9d6a6bc0eeac01861840d3628ac30|2007-04-26|eduard@valeyev.net|Belongs to the previous checkin.
730ef06c0b9f6c841e6a2cdc6c837842b4157474|2007-04-26|eduard@valeyev.net|Forgotten entry.
88dc0152af07065d6897a2ec33914f274e13f845|2007-04-26|eduard@valeyev.net|04/25/2007:     1) Converted DirectedGraph to use std::list. 		2) Removed the need to use template class with default arguments as a template template parameter 		   (gcc 4.3 does not support this).
222d30101ea09901830d3b0291bb1d3440316f05|2007-04-25|eduard@valeyev.net|Fixed a serious bug (px!=0 on em64t/Linux) and a slight bug causing valgrind to complain about uninitialized value.
ab93799415219daa6190c51bb13980ce1950917e|2007-04-25|eduard@valeyev.net|Started conversion to an associative-container DirectedGraoh. As a first step I switched to std::list. There is a memory bug somewhere...
c0ac385e43447f31e5c712b0a9b8589b4a216796|2007-04-24|eduard@valeyev.net|configure now checks for boost::shared_ptr<T>.
55d23ee09efae660fb6e9bacbaccff35a652e9d7|2007-04-24|eduard@valeyev.net|04/24/2007:     1) Removed all use of exceptions in normal workflow except for CannotPerformOperation                    thrown when cleaning up. Removed all exception specifications except in exception classes                    derived from standard exceptions.                 2) GenIntegralSet::Instance() and analogs precompute the key to avoid constructing                    dummy integrals.                 3) R12kG12_11_11 and TiG12_11_11 use integers to hash.
ed293aa427015aed958729b42fce5f21dc152838|2007-04-23|eduard@valeyev.net|Removed throw() specifications.
e3359fa4ecf2a4d2225b2543b9a2b2183d50a9b2|2007-01-31|eduard@valeyev.net|Fixed a bug (# of targets wasn't set for G12 integrals).
21bc7ca6884db34eda498f334b8e08d560627537|2007-01-22|eduard@valeyev.net|Can now generate integral evaluator types in one of 2 ways: single type for all tasks, or task-specific types. The former is the only supported option at the moment.
c5493939b5fa2fbde5176af610e8942394d4bf20|2006-11-03|eduard@valeyev.net|Updated updates-libint2 + misc changes.
449d7c1e15191ea54f5d50c5e5aab1ca76dbe854|2006-11-03|eduard@valeyev.net|Updated test_eri stuff to the new libint2.h.
38dd046939ce4974e90ad1f6dc7e896c6561f091|2006-11-02|eduard@valeyev.net|1) All header files are now generated automatically, including integral evluator types. 2) Documentation almost fully updated.
7347603475bea89dd48766f06b235bff5c8dd20d|2006-11-01|eduard@valeyev.net|In the process of massive changes: 1) documentation 2) generated, task-specific evaluators
d44f50b0ac9e7076791a3acee7eac624b8f8fb76|2006-09-25|eduard@valeyev.net|Should work for at least L=15, but will limit to Lmax=10.
0a6f9b90c66fe009110bf1a8caefbaf3088b4792|2006-09-25|eduard@valeyev.net|Incorrect code was produced for l=9 and higehr because static io[] array was too short. Moved static stuff into constants.h and replaced io[] with inline io().
1d9f2113f8f07646df83941445916dbb1e961811|2006-07-19|eduard@valeyev.net|1) Added code to simplify testing of the compiler. Rewrote generate_eri_code using    the new facilities. 2) Added profiling tests.
903b4cfbb90c40ef3bb7cd4c28d7a0b9f70e915a|2006-07-18|eduard@valeyev.net|More updates.
9016a18fcc41ea673fc5d04a464d625ef7f07819|2006-07-18|eduard@valeyev.net|Strategy for non-ERI classes did not handle unrolling correctly.
8c1723053d440a9621d285dc667605fcf79c42ff|2006-07-14|eduard@valeyev.net|Compute cost per integra in run_time_eri.pl
cdc1949b15d87d9a57dca92041aefe043e2970e3|2006-07-14|eduard@valeyev.net|Remove "compute" prefix from all function names.
c2f82cba5882fba59d74153c4238df505d5e466a|2006-07-14|eduard@valeyev.net|Need to print error message and exit with a nonzero exit code.
bdb641ab075417eaaa0d4e8609bb350cf63a1920|2006-07-12|eduard@valeyev.net|Some updates to progman.
1d52bb266749b625fc28acc96db0109824660a6c|2006-07-12|eduard@valeyev.net|Small fixes.
dd785078f150cb80ee9f686f2cdb59bdc688d43e|2006-07-11|eduard@valeyev.net|more updates.
4682b87a64c63789df977e89d99bdbc598255c7d|2006-07-11|eduard@valeyev.net|user can now choose one of desired (hardcoded) orderings for cartesian shells.
728a5955faa3be4896daf0ab27bd3ece6fe874c5|2006-07-11|eduard@valeyev.net|Build tests do not work for the moment. Test shell iterator for every angular momentum.
605219f91d18e583f7c9033a13a8b9e3a85428e7|2006-07-11|eduard@valeyev.net|API prefix now works.
4da34f0597b536c6564d74105aad60ad002625bb|2006-07-06|eduard@valeyev.net|Created standard set of tests.
4a1c91ed7b740eb042a8d55e60cbfb4a98d68a5e|2006-07-06|eduard@valeyev.net|Added most of the necessary code to accumulate targets. Need to test and finish.
629f08e8772f616c5d7c88022a6bdb97f49f6dc7|2006-07-05|eduard@valeyev.net|Created a standard set of tests for most combinations of code generation features (vectorization, etc.)
a42ef70fd45d70181f74b2a51376fce02c6c5126|2006-07-04|eduard@valeyev.net|More updates.
c2c9aa95302b5d28b360083579d090667a7a4fd7|2006-07-04|eduard@valeyev.net|1) Added api-prefix and accum-ints configure options. 2) libint2_init, cleanup, and need_memory are fleshed out.
e3811b4eb8c6e7f39160621a6638d9d37aa050ad|2006-03-03|eduard@valeyev.net|Stupid bug.
c1bbabad72b2ff632ff1161dcbf6104049622578|2006-03-03|eduard@valeyev.net|TEST and TIME targets require CXXGEN as LD.
ac52203815012d90d1bb8a4bcafb66204e4792b3|2006-03-03|eduard@valeyev.net|Fixed a bug in DRTree::CreateRootedAt
b4d2781ce2555165ce905fc43d0b370da536056b|2006-03-02|eduard@valeyev.net|1) test_eri.pl can generate code with or without CSE 2) correct FLOP counts are produced even for the condensed code
765feccbe5836ff1f980673a4d920fd4e9ec790c|2006-03-02|eduard@valeyev.net|Move control over subtrees to global_macros.h. It may eventually become a dynamic option. Also, turn off debug output in DRTree.
d66a88d42aea5b867b6d37fa8cfa487fdc486ec6|2006-03-02|eduard@valeyev.net|Always enable flop counter.
cf75ad7d141100bdafd18b989c937edea2ef9a04|2006-03-01|eduard@valeyev.net|Compiler would punt if non-fully unrolled code was generated.
6594fecd50f0fdd387a860ffcc6531d6c76d73ee|2006-02-28|eduard@valeyev.net|More updates.
e0cad286bece1556cb7f9e5331123dc2f7155c42|2006-02-28|eduard@valeyev.net|Added ability to condense multiple statements into one, provided                 that no reusable quantities appear. The current version generates                 correct for fully-unrolled code, but FLOP counts are not correct                and the degree of "condensation" is not adjustable yet.                This development is important                 for generating efficient linewise vectorized code.
0e044dc55b0d2cec073ab5c678799b5f806c23ce|2006-02-26|eduard@valeyev.net|1) introduced vstack 2) HRR set-level functions must keep track of lsrank and hsrank to determine    proper size for vstack 3) DirectedGraph::generate_code no longer updates LibraryParameters of stack size.    it is not its' job -- higher-level code can do that using MemoryManager.
42e853a3864f4f9e1224af14ee3b298c40802b03|2006-02-26|eduard@valeyev.net|Added debugging statements and comments.
45926cd69f280213be83aa8d4086919f94c1ca07|2006-02-25|eduard@valeyev.net|Also print() size()
5c19f949d6d704efd760daf5dbcabb729e99bb99|2006-02-25|eduard@valeyev.net|Need libint2_config.h so that libint2.h works properly without export.
dcddca234e70f90791e71d748bc26accb2d51d43|2006-02-25|eduard@valeyev.net|Also check LIBINT_FLOP_COUNT so that test_eri stuff works.
1ca7f9c5dd9d4b323e98b6f2c8a103acad317a05|2006-02-25|eduard@valeyev.net|size and key are cached variables, hence must be reset when a non-const member access function is called.
681a24297f26e8b74422fb98620f547499a21541|2006-02-25|eduard@valeyev.net|Use -opt-am to also enable CSE.
b479839b50694f4026e62a65661271baaa2935c6|2006-02-25|eduard@valeyev.net|Added configure option to choose vectorization method.
02c5032f047457c00284a3f6402febf8934339d4|2006-02-18|eduard@valeyev.net|Forgot to add graph_registry.* .
c1439b696c2a348f6828796f95767c754f07c539|2006-02-18|eduard@valeyev.net|1) eri-opt-am and g12-opt-am are properly takes into account.    introduced GraphRegistry to do that. 2) vector length can be set via configure script.
f58f1a385ee404659f8105b85480c3be49f7ac60|2006-02-16|eduard@valeyev.net|export target needs working compiler.
7d6b512423e1e44aa8b6796464afe18379763f0b|2006-02-16|eduard@valeyev.net|Library can now be exported. Do 'make export'. This creates a .tgz file in the top object directory.
5fda6826ca0934179355c6cc1fc2d6075ad4d2ce|2006-02-16|eduard@valeyev.net|g12-max-am should be allowed to be same as eri-max-am
8a8077e9acfe02c7906c265acaf6aa847530ba98|2006-02-15|eduard@valeyev.net|Dummy install target added.
839fc9ccd2a2b8450067d24df5bf3f2933de47a0|2006-02-15|eduard@valeyev.net|Default include install directory should not include libint version.
159b1dc7236c72dc0d97edaee8e480279052796f|2006-02-15|eduard@valeyev.net|Hid some diagnostic output behind #if DEBUG...
85e1e3d6b53e4b3af379982d475eed2a47f56cb9|2006-02-15|eduard@valeyev.net|1) Added --enable-flop-counter configure option 2) --with-float-type option now has the advertised effect 3) Added --with-eri-strategy configure option 4) Added API elements to configure Libint2-MPQC interface
2241d305ea962a89223bc754d7ab0a4b2a082cd6|2006-02-15|eduard@valeyev.net|Reduced the amount of diagnostic output printed by default.
632e19f3734b5d49f2e2b4996b6533714985fc93|2006-02-14|eduard@valeyev.net|Working check-in. Major changes: 1) GenIntegralSet computes size directly, not via SubIteratorBase; and 2) RRs on RRStack in ::generate_rr_code get popped as soon as their code has been generated, all to save resources.
c357ae97dff78a2cdaf9df29245c1898ea46f4f4|2006-02-14|eduard@valeyev.net|make_libsrcdir should not depend on compiler.
15355e11ba23653680586033e6f58a4e5751206e|2006-02-14|eduard@valeyev.net|Some test expressions were not portable.
80ee23a8a70c08a8ea65837896f2d7fc82d019f9|2006-02-14|eduard@valeyev.net|Updated configure for version 2 production. Some small fixes. Updated installation manual.
8899181fb2efe50cf56a2ac5a8eb361c701ff295|2006-02-14|eduard@valeyev.net|Removed libderiv and libr12 sources.
ac34b524af093cc5ad0103d04c307dc7645840b8|2005-12-01|eduard@valeyev.net|Put in missing dollar signs.
9c8bb704348b9de8f3b95a893062e41dbf151f2e|2005-12-01|eduard@valeyev.net|fixed syntax errors in the updated cxx-cxxgen compatibility test.
8c5c13aa22b19f6a463494330d511860fe6de60c|2005-12-01|eduard@valeyev.net|Needed better checking for compatibility between cxx and cxxgen.
85dc83eb5ea7472f5988c1392926001ccdb8bbff|2005-11-30|eduard@valeyev.net|Added installation manual.
3bb86b34781d46590f0f253f6bc934009d772019|2005-11-29|eduard@valeyev.net|Class documentation is correctly installed now.
d142074bd1d94f13ff36559b70e5d805f03e0769|2005-11-28|eduard@valeyev.net|Test if cxx and cxxgen allow templates with default parameters to match template template parameters with fewer arguments. libint2::Policy requires such an extension (e.g. gcc-3.4).
5eed1bf49d9bef9f3e007bf98a81b43f150d43db|2005-11-28|eduard@valeyev.net|Test if cxx and cxxgen allow template with default params to match template template parameters with fewer parameters.
149fafbf7122b8e1621e85a52ae66d5259290a81|2005-11-28|eduard@valeyev.net|The library is now compiled using cxxgen.
9e1c6b8aa1adc2b73369ef6423d56007d3bc6536|2005-11-28|eduard@valeyev.net|Do not check if libint's max am is sufficient to compile libderiv or libr12 if those are not requested.
d5362eb836f88836defc03ed4589a509d99a0c1d|2005-11-28|eduard@valeyev.net|Typo in conditional Makefile statement.
1128bacceaad8822af7f321c92ad947082fedda1|2005-11-28|eduard@valeyev.net|Modified configure to set LD variable correctly. Only src/bin/MakeVars needs linker.
a39556ce05d7c7266c6eefef31f28b81ea2ce57a|2005-11-28|eduard@valeyev.net|Updated to libtool-1.5.20, autoconf-2.57. Added cxxgen options to configure. Timing code now compiles using cxxgen.
5dae9c266cfae15d1bc6b83df0ea6406b9ecea24|2005-11-27|eduard@valeyev.net|Upgraded to libtool 1.5.20 .
2b248a51bae4ad42f2739b683b90a4ff4089fadd|2005-11-16|eduard@valeyev.net|When changing $srcdir to absolute path, .. was not translated correctly.
911ac3c2717e2d5ec518c7f80fbb2a8ded2b6c53|2005-09-26|eduard@valeyev.net|Preparing for 1.1.3 release.
1bff1c7a6abcedf50d55985da3171dca152c80d4|2005-08-09|eduard@valeyev.net|1) Implemented QuantumNumbersA and made it default. 2) Implemented DGVertex::unregister()  [should it be deregister()?]
dd3adfc2e8e485f9e2041fa0f62037e47ea6aa61|2005-08-09|eduard@valeyev.net|Introduced DefaultQuantumNumbers.
40fb7ddc2c0fa042cd91c94349cd067b2bc43c63|2005-08-09|eduard@valeyev.net|Updates to install everything and correctly.
8703712e9d3085e66396472051a3ed7758aa3639|2005-08-09|eduard@valeyev.net|Converted DummyIntegral to use the same Braket implementation as other integrals.
bb45a83d63fbd3f57bc498a52a2c8e2e4e5e30d5|2005-08-09|eduard@valeyev.net|Implemented and switched to ArrayBraket.
6f49eefb767af2f196ff095a56a343924aaf4f9e|2005-08-08|eduard@valeyev.net|Space optimization of DGVertex. VectorBraket is next (i.e. ArrayBraket needs to be implemented).
1b5b8cf45eae5f352bd6687681a7356bcc0a260a|2005-08-08|eduard@valeyev.net|Some cleanup. Memory use is quite high -- need to optimize.
a8e4158373e325bd6350b10447c1f815d74c4478|2005-08-08|eduard@valeyev.net|Adjusted include path.
4cb8435e92028cbf2b8161481d0852d829bf18f6|2005-08-08|eduard@valeyev.net|Can generate library again.
389503d0c0bb5c2b419cf5078350d013dbe43fc8|2005-08-08|eduard@valeyev.net|Can use key() to implement equiv() and operator==().
621b7c5336138ff7746c13ebc998b4b9919b6749|2005-08-08|eduard@valeyev.net|Algebraic operator now uses key() to implement equiv.
4fcb4a45baaeb81740a6bf73d03c09db07f1dcb8|2005-08-07|eduard@valeyev.net|Unstable check-in.
7c9b99435e55b3c81beafeab6cb551ed80963783|2005-08-06|eduard@valeyev.net|Continuing switch to hashing objects using integer keys. GenIntegralSet and TwoPRep_11_11 are switched over. AlgebraicOperator and various Enitities are next.
661012356915f10f8da25ba2a0fe96a57d620e17|2005-08-05|eduard@valeyev.net|HRR::register_with_rrstack is fixed. generate_eri_code now works for all allowed cases (i.e unless linewise approach is used to generate set-level code, compiler should work).
d3e067a34f93fc62c73b55dd3ac6e60749b724a4|2005-08-05|eduard@valeyev.net|Finished HRR::register_with_rrstack().
8d486c07b7958aa9f6042f26cc30b80eef3bdf90|2005-08-04|eduard@valeyev.net|Cleanup. Set-level code should now work again (including vectorization!).
27db2e1e0f877e93058f29281aeb604db8a45f4e|2005-08-04|eduard@valeyev.net|Temporary checkin.
1fd2f06211b481025d3027b17e1b38272b51cd77|2005-08-02|eduard@valeyev.net|Slight updates to make sure build_libint compiles.
9ccabee708a3e30e48b238ebe35b173f096bc97b|2005-08-02|eduard@valeyev.net|Some debugging output.
6198119a857dec564a140c2159d2d593d3673de2|2005-08-02|eduard@valeyev.net|Moved libint2_config.h
36b31e05a753a197c26d0ae80fa0572f515e4023|2005-08-02|eduard@valeyev.net|.
1698f1eb6bb4c29e77f4677d179d34c1099cf497|2005-08-02|eduard@valeyev.net|DO use HRR by default.
9f40e59a213a4f5981a0accb2f0768f1d4338891|2005-08-02|eduard@valeyev.net|Prefactor in Lingth's paper is incorrect.
0e20334c3205f9e8656341fee661d262a48f0b72|2005-07-31|eduard@valeyev.net|Added Hamilton and Lindh's electron transfer relation.
53731d3b5802d1c62c1672c84ed6b6dbfab2836c|2005-07-05|eduard@valeyev.net|Switched to using VectorBraket in braket.h.
1018ad6e007d69f392f943d09180cc3a98eed54a|2005-07-03|eduard@valeyev.net|Initial version of braket.h.
682efa7393245e699cf022b57fcf8a8ea60ea206|2005-07-01|eduard@valeyev.net|Replaced explicit dynamic_cast with dynamic_pointer_cast.
2b5a9a124aed0cdf2817c878bf0b0253550c3c79|2005-06-27|eduard@valeyev.net|By default test scalar AND vector code (scalar code isn't needed on X1 though).
c3281e5766ecb027f8c1d33ff7a4a51f0e53df2e|2005-06-27|eduard@valeyev.net|user can specify float typee using configure.
6a916dd938bcc61cb73a6be4560b657b0e73351f|2005-06-27|eduard@valeyev.net|No point in update LibraryParameters::max_stack_size each time since MemoryManager has this functionality built in.
d04b23df080b0128f484e2c72ae1b130282bb4f5|2005-06-27|eduard@valeyev.net|Added configure and macro tests for 64-bit integers.
b54f085889f173b9ab68411ac5db7c135913bfad|2005-06-27|eduard@valeyev.net|Forgot to update max memory counter.
c65d7dd15ab07ceb90f1059b5a92cd72fa9ad224|2005-06-27|eduard@valeyev.net|Must allocate targets on stack before allocating intermediates because members of target set may get overwritten otherwise.
8e726d22a60a20472829eb872092e7f39e9e9b9a|2005-06-26|eduard@valeyev.net|Added scripts to do automated timing runs.
030f51b102a2394349f9c3191f1f6535e228c581|2005-06-26|eduard@valeyev.net|First crack at automating benchmarking.
23a6b00e08a2febdd176c381af4e6df6713c3c0a|2005-06-24|eduard@valeyev.net|Finished adding linewise vectorization.
ef999836160d02d19987531e3a4840a327e11e00|2005-06-24|eduard@valeyev.net|Added capability to generate (not-yet-compilable) code which is vectorized line-wise.
79e90d4d368d45c2cdccef5e29502d836c76e32c|2005-06-24|eduard@valeyev.net|No need to include rr.h here.
1fa39d5672e92c53ce34cf6c719d47744bb92ecc|2005-06-24|eduard@valeyev.net|Additional command-line parameter specifies whether to use block-wise or line-wise vectorization.
72e83c1f978ddce1adc12f3d709f450fe28074e1|2005-06-24|eduard@valeyev.net|Added tests which use static length (64). Also added X1-specific pragmas.
1208963b591abf3a9de427e5ed6c6442a7c973c5|2005-06-24|eduard@valeyev.net|Added timing program for vector loops.
35a3b651c185decc16814654ab1e8a48eabaf6ee|2005-06-24|eduard@valeyev.net|Added test program for vector loops.
25dbb7af609cb470baf292a0451926bbcdfc366e|2005-06-21|eduard@valeyev.net|Vector code now tests properly. Mixed code is not generated properly yet.
2bcef762577d0c46b7acafe109da22ee8c52cbfd|2005-06-21|eduard@valeyev.net|Documentation update.
d3aa8ba350793c612d6c2028e616c91bb6dd2904|2005-06-21|eduard@valeyev.net|Added a macro to turn off detection of common subexpressions.
bcc723c36bfb75c77d1ce121deba09d4d78699c9|2005-06-21|eduard@valeyev.net|Removed old code.
e1998e02024910691e57aed546b9c4de225207e6|2005-06-20|eduard@valeyev.net|Enabled vectorization.
9bac701b39e9b460159bcfd3aa72a5a6ade13b9a|2005-06-20|eduard@valeyev.net|Removed old code.
7b2ee80c89c0b43f06db06b3d447245143ec3dc2|2005-06-20|eduard@valeyev.net|test_eri.pl now can be used to generate files and export them using scp to a user-specified location.
d3c448db99b4cb25dfa11a3346e4241e8305ca9a|2005-06-20|eduard@valeyev.net|Print out summary of all generated headers too.
c91bf44e31121d5c7002edc3151f4cbcfa77c01b|2005-06-20|eduard@valeyev.net|Changes to satisfy Cray C++ compiler (5.3.0.2).
19bdb463add7842286656a0a0eb5867b6aae04c1|2005-06-20|eduard@valeyev.net|Introduced flop counter into Libint_t. Need to add configure checks for the integral type to be used for this (must have a 64-bit integer).
da3a81ca35b139c36af40a6ee4334e02bcc98de3|2005-06-20|eduard@valeyev.net|Introduced a macro variable.
72aee4a24d9ca34ad87551492dae2a8900aaa7a3|2005-06-17|eduard@valeyev.net|Added timing program.
059ddaa558dfa2029eec57553c7272dca09927ef|2005-06-17|eduard@valeyev.net|Modified integral classes to compile when OVERLOAD_GENINTEGRALSET_LABEL is set.
594459a865ca90e46000a42d352a2589fba20e94|2005-06-16|eduard@valeyev.net|New ERI testing method seems to work. I will adopt this approach for the timing suite.
a753b607dae4b6d86194f7dc977a973d7ba176e9|2005-06-16|eduard@valeyev.net|Added capability to produce compilable code.
b0a5dc19bceefeaa98e2eb2e5e4b19c82c19f02d|2005-06-16|eduard@valeyev.net|Initial revision.
a1ef0c30b68d3a4113bfd811433fd444431258f3|2005-06-16|eduard@valeyev.net|Updated to match new convention for GenIntegralSet::label() output.
df4992b140ed862627cd3985620dee1fcc09765b|2005-06-16|eduard@valeyev.net|Added capability to BuildTest to generate _compilable_ source (i.e. headers + quartet-level rr code included).
99929e95c918d72b295c05e7ca67ee52e4c905c8|2005-06-16|eduard@valeyev.net|Separated BuildTest from test.cc -- I will use it to test integrals elsewhere.
df61a3873e7405cf86cc38ab45fe70061594d2cf|2005-06-16|eduard@valeyev.net|Test typelists by default.
76842ef13533f8b9f65bd75374f2275db58be5a2|2005-06-16|eduard@valeyev.net|Cleaned up test.cc -- straightforward build tests are done using same template function.
e9f0f01f517b0b58b6df43103a0e07f944c5b938|2005-06-15|eduard@valeyev.net|Minor stylistic edit.
87b2382639f5356128347bf4656eda8f144a9478|2005-06-15|eduard@valeyev.net|Added configure option --with-cxxdepend to support compilation with gstlfilt. Removed ugly BOOSTPATH hacks.
06b93dac00b3d787c03aa927889b0d4ba8c951d5|2005-06-15|eduard@valeyev.net|QuantumNumbers::label() did not work correctly.
b3b378e068927896107dc549802f46ecf0887eb0|2005-06-15|eduard@valeyev.net|Added angle brakets to the list of forbidden C++ characters.
7d3bf61f33b3a9ac0468310ce64be55069953521|2005-06-11|eduard@valeyev.net|Fixed return type off try_main.
430cccdc76672af4bb83a1f6d1a26ed5abc72847|2005-06-05|eduard@valeyev.net|More optimization improvements: 1) separated out template definitions for DirectedGraph out to dg.templ.h 2) reworked DirectedGraph::insert_expr_at significantly. It'll still require more work (quite messy at the moment but progress is made). 3) Lots of debugging statements are added that can be turned on by setting DEBUG define to 1 in global_macros.h .
cce9f080d9118edab5356d42f82097b21e5635ad|2005-06-03|eduard@valeyev.net|More optimization improvements.
1beea8d0f62124f734ea021c7c780a1dd3fe1ce3|2005-06-03|eduard@valeyev.net|Further speed optimizations -- DGVertex now includes a numerical instance ID so that comparisons can be very fast.
5373113853359d97906a6c77e6bed726a80aca74|2005-06-02|eduard@valeyev.net|Various speed optimizations: 1) DGVertex includes typeid member variable 2) strings are not copied but passed by reference 3) SingletonStack-managed quantities are to be counted and the index    will be used to speed up comparisons.
d83f0fb300b0879dde3462d64cf91b35eb2d0401|2005-05-13|eduard@valeyev.net|T0,T1 should be T1,T2.
786ec0d5dadd38ef7de7e6c7b524ee1d2a98cde9|2005-05-13|eduard@valeyev.net|I think the logic of [Ti,G12] is correct now.
4551461fc9e96c2fe78d696d607db0725408c858|2005-05-13|eduard@valeyev.net|[Ti,G12] inetgrals are wrong but other integrals seem OK.
9db17cd2f0cd350f47e1df33b510e39ac9ea36b0|2005-05-12|eduard@valeyev.net|Made RRStack a Singleton. Had to reorganize RecurrenceRelations quite a bit -- now construction is done through ::Instance(...). This way one can analyze whether to register the RR object with the stack or not (important for HRR). Functions names in DirectedGraph are maintained by a std::map.
56ed32c5186e74fab091c6dc55b2a921be39cf4b|2005-05-11|eduard@valeyev.net|Removed a debug expression.
d0e0a3c1453d283c58626182ac9ff49201df65fd|2005-05-11|eduard@valeyev.net|New recurrence relations included into the library.
ee1dbd5e5d90cb3cefc7284cb4b68edc44208e28|2005-05-11|eduard@valeyev.net|Modified the header to include prefactors for r12^k*g12 and [Ti,G12] integrals.
0b07cba1cf544c5a8a6c271edcc671d014fa5e9e|2005-05-11|eduard@valeyev.net|Now I can produce code to compute r12^k*g12 and [T_i,g12]. Header modification is next.
f227b47dea82c777529ea7e8549e4fe6c5e2249d|2005-05-11|eduard@valeyev.net|[g12[t1,g12]] integral is simply scaled r12^2 g12 so I've got all the code now. Need to debug still and modify the header file.
93873e0d84e0650d3b4a13ecdff4c379721771f3|2005-05-11|eduard@valeyev.net|Added code to evaluate [Ti,G12] commutators.
e399766663649b10b7fd44cd6b7936f648aac2c8|2005-05-10|eduard@valeyev.net|Making progress towards being able to compute integrals including Gaussian Geminal.
86b124f3c3e5973ea65f85484af11c9cbc2d2e22|2005-05-10|eduard@valeyev.net|Getting close to being able to generate R12_k_G12 integrals.
1653a0a0d447bd9d17e55086fed525fb44f8eb55|2005-05-09|eduard@valeyev.net|Started work on integrals over r12^k * exp(-\gamma * r_{12}) operator.
f57b283cb370e2af73b5cf71cbd5db553c94913e|2005-05-09|eduard@valeyev.net|Fixed up the installation system.
40fbcab26776d6b6e4dfdc45bd67d0d004ebba73|2005-05-09|eduard@valeyev.net|*** empty log message ***
812a0662a3ed861a7a709967a817fc1eecc0fd1b|2005-05-09|eduard@valeyev.net|Adapted to V2.
8a5e8d5164e37e0de0f7c29e63770c8e87a497e9|2005-05-09|eduard@valeyev.net|Included the hand-written prototype libint2 header.
3d6ffcc7ce56f7d7a447efc777e1ba7a9caa9d2d|2005-05-09|eduard@valeyev.net|Generates a compilable library that can be used from MPQC for the first time.
56ccdc2e7e0e5adf7f50b4c6f75f0492f5c75954|2005-05-05|eduard@valeyev.net|Removed print statement used for debugging only.
8f9c195214d844c4759cdf014cdf7f381da7312e|2005-05-05|eduard@valeyev.net|DG now will print some statements before and after the code via Context. Switched to C-style linking.
7774bfa3b4e8f6ff88b21daf3896b4b30be527d3|2005-05-05|eduard@valeyev.net|Defining variable LOCAL allows to compile build_libint in source directory. Convenient for testing.
85589ae7ce913a703a9758e7affc69483cf577fb|2005-05-05|eduard@valeyev.net|Added RandomChoiceTactic.
80471ef8ff74381330badc81829d9716da921a1d|2005-05-04|eduard@valeyev.net|Adaped to use the new optimizing compiler in preparation for version 2.
19537ad5ad70d3280caebb6ea0b685ef4880bb90|2005-05-04|eduard@valeyev.net|Ready to produce a compilable library for ERIs.
c908c262faad2f7b367854f710e6a7eb9f2836f3|2005-05-04|eduard@valeyev.net|Can generate compilable code (even vectorized).
f58672c6789ff3e366cd98f4825c0f1f04abe47b|2005-05-03|eduard@valeyev.net|Much more stuff added.
3e54165ea4b00e8e8a3af0f587c830ff1f5f25f6|2005-04-25|eduard@valeyev.net|More changes.
456ad7a60e54788b7aca84f020cd71ea5d57239e|2005-04-16|eduard@valeyev.net|Significant reorganization of DirectedGraph and co. in push to be able to generate code for quartet-level code.
6bc11f0d77cd3118b034f9a839b5077bbfa316c0|2005-04-15|eduard@valeyev.net|Several changes: 1) DGVertex::precomputed() now checks whether referred_vertex_ is set. 2) moved DGArc and DGVertex definitions into their own source files. 3) build_libint developed a bit further.
3c0cd588020583e3617ee70816a1adcd79a466a5|2005-04-15|eduard@valeyev.net|Removed Libint1 files.
d651218ceea63607d1d5792633b8d4e983eae1a6|2005-04-14|eduard@valeyev.net|Reorganized the source.
6b1d44c518084413b56d2b16e9df72ce12837208|2005-04-07|eduard@valeyev.net|Added clean target.
28d75850ea2efbdcecebff9b228b9551dd7b4434|2005-04-07|eduard@valeyev.net|Moved doxygen.cfg to doxygen.cfg.in
922acdbadde140c5bc1f571aab6f42a85ca659c6|2005-04-07|eduard@valeyev.net|*** empty log message ***
98601cddba68032afe66114547a85ffe5744d6c2|2005-04-07|eduard@valeyev.net|Moved doxygen.cfg to it's own directory.
c1b511edc88be7695fb88c09aaff5c1ac33aaccd|2005-04-07|eduard@valeyev.net|Fixed a couple typos in configure.in
5803653c58f5f4a5438e139720d1a5a4d3f1ab31|2005-04-06|eduard@valeyev.net|Started updating configure.in for version 2.
78cc96b13b442bbfd6c6f20b742dce89ee268d25|2005-02-05|eduard@valeyev.net|SingletonStack now uses std::map instead of two std::vectors.
92d4e76014a783fe5e00d47913889c4f7b30b627|2005-01-27|eduard@valeyev.net|Added rule for eps files.
82439ae762b4a6ba0337a7e4eb248d8ba0c79202|2005-01-27|eduard@valeyev.net|Forgot to define left_arg and right_arg.
100e2e1b2236dd29984c40aca866ee6acb6a2d5e|2005-01-18|eduard@valeyev.net|Added test7() which produces vectorized functions.
7146200302137238799902e8f7e82c5c117f1f0a|2005-01-18|eduard@valeyev.net|Added prototype for vectorized header.
8977642248ae68a6ece0c34b69101669e55c58cc|2005-01-18|eduard@valeyev.net|Added vectorized timing routine.
64558c923de0daf330f04b1544ed0e65ac66405e|2005-01-18|eduard@valeyev.net|A few changes related to vectorization attempts.
0658d24282a8eee5ed832e88a63cacc7323830a2|2005-01-18|eduard@valeyev.net|Added vectorization features to context, but this will probably not work in long term.
ee02056d7e147915c98ee579e11105a5d1e594a5|2005-01-18|eduard@valeyev.net|reorganized expressions so that N_i*a*(c-d*e) is written as (N_i*a)*(c-d*e), not as N_i*(a*(c-d*e)).
bfa8e1f0a5e0535bdb587b3970a0be373c553b8e|2005-01-18|eduard@valeyev.net|Added a timing program.
b7c3acb0c94c7f685f8118f90612c15dad657b5f|2005-01-18|eduard@valeyev.net|Cleaned up DGVertex. Intel C++ compiler still doesn't dynamic_cast properly to IntegralSet_to_Integral_base.
4843147fff872b693d394613ed44596d5c1b8339|2005-01-18|eduard@valeyev.net|A bit of a clean-up.
3707e35436b678855b3e7d21f4bf6fd98cc581e8|2005-01-18|eduard@valeyev.net|A close-to-complete form of a ERI tester.
3aec86540817626c5c1cdbac6d35cd298ea05d5d|2005-01-18|eduard@valeyev.net|try_main should return and integer.
75b994467b80c1ede98fd4070fd6e56dd3004c82|2005-01-18|eduard@valeyev.net|More updates.
7a5aafeb92418896073567143f4385a6699b5a91|2005-01-18|eduard@valeyev.net|Updated Makefile.
9303c5a673444af1cf2a4b6155166a05c32c9c79|2005-01-17|eduard@valeyev.net|FINALLY! Computed up to (dp|fs) integrals.
bdfe6952d9e6a2fd472cf2e36f9009adce799060|2005-01-17|eduard@valeyev.net|Something weird is going on -- moving back to OS X.
1051528b9bc7afa3ad9db2aba732ad1cfb85b07c|2005-01-17|eduard@valeyev.net|Removed memory leaks.
3deb55519fbc37b11db8a7ee45b0c209b1976bea|2005-01-17|eduard@valeyev.net|Simple ERI testing code.
7d98abc8ab1dec4be704801f7b3a783190f65a2e|2005-01-17|eduard@valeyev.net|ro2z and ro2e should have been roz and roe.
b7beeeb52c0e102f26de56cb6b8ab42e62282f6d|2005-01-15|eduard@valeyev.net|At last, the test problem generates code that compiles. Added libint2_prototype.h is a prototype hard-wired header. Eventually, header will be generated too.
578c8c81a35d81b52c6f7279872f3e621d22dd3c|2005-01-14|eduard@valeyev.net|Switched GenIntegralSet and TwoPRep_11_11 completely to using SingletonStack. Current hashing is not too efficient. Need to switch to numerical hashes.
27e148c1b094a0d5218d2533505d87c6ec49a094|2005-01-14|eduard@valeyev.net|Added SingletonStack, which helps to manage sets of singletons of a given type. Converted GenIntegralSet to use it. However, I left the old code just to remind myself what I was doing before. I'll remove the old code immediately after this check-in.
82030709c821f91c202ff0d9351cffec2ec9fbb3|2005-01-14|eduard@valeyev.net|Added QuantumNumbersA
098ddcc807edbe367cd4117e011e00fa4b728049|2005-01-13|eduard@valeyev.net|Getting ready to constructed mixed graphs (with quartets and individual integrals).
4161bff3363e88f609b87f1cf78e45ce18b2d708|2005-01-13|eduard@valeyev.net|Added several new MemoryManagers.
ff1ae1ec51510831774a0cfa775c2ce299f0984a|2005-01-13|eduard@valeyev.net|Implemented 2 MemoryManagers: BestFit and WorstFit. For small cases they are equivalent, but differ for larger cases.
c0c1d7268f35466cb90a8b7bb1adf8864bb8dd68|2005-01-13|eduard@valeyev.net|Cleaned up test.cc::try_main(). Converting Address to a class.
d034ea082e125207cabcf84f39c4a5a042ae166b|2005-01-12|eduard@valeyev.net|Added MemoryManager and developed further cide generation (starting to get messy!)
576ae907eb9498a0b7467670ead09995e6e691fb|2005-01-12|eduard@valeyev.net|Minor fixes to HRR and Prefactors. Also, Implemented more or less full strategy for individual ERIs.
b2331069e081da78b41c06bc5edab2c50aec084c|2005-01-11|eduard@valeyev.net|Progress on code generation. Many issues need to be resolved but can handle basic code generation for explicit single-integral code.
72bb961b637ceacda7dfc1cef67e0de0e0d0bc75|2005-01-11|eduard@valeyev.net|Simple graph optimizations are finished.
6e6705ea8be9ca6992b6ebb00c1a36475b46070e|2005-01-11|eduard@valeyev.net|Working on implementing some simple optimizations before generating code.
989a6584de7c925320de29df02900223f95aa6f4|2005-01-10|eduard@valeyev.net|More developmen. Can plot graphs using dot.
a4cce3106507a3b87c13d5d5cdc4125a5d32c1f4|2005-01-07|eduard@valeyev.net|Almost done with optimizing out recurrence relations.
ec31418418cfa0f5d0b9750952911ff94bb3b701|2005-01-07|eduard@valeyev.net|Modified RecurrenceRelations to generate algebraic expressions to use in code generation.
9c6b4de9df75b6be564d727ed58c544eb0fa4570|2005-01-07|eduard@valeyev.net|Continuing work toward code generation.
74fdee9471b86c79f18b79cb55531fddd84e41cc|2005-01-07|eduard@valeyev.net|Readded this file
c9ff67a6548ecc22040c9f7fa769f111ffdfa3b4|2005-01-07|eduard@valeyev.net|More updates.
7ba90ca92ac5e8e57463502a9df7d7cdd4a7f75f|2005-01-06|eduard@valeyev.net|Started work on Entities.
cf6ad137839fd56587f5927fd69eb1e901ee085d|2005-01-06|eduard@valeyev.net|More refinements to Strategy.
ff9316e823b0625a426849e37fd72bf829ee2d9e|2005-01-05|eduard@valeyev.net|Continuing work on Strategy.
2b6d211ac92f630253b88c57107e102ff9b6b35e|2005-01-05|eduard@valeyev.net|Starting to develop Strategy functionality.
b06ca3bada10385d78d90897b16f49237b241e5a|2004-12-22|eduard@valeyev.net|Many updates. Among most important: HRR and VRR constructors now take an optional argument which specifies the direction of the work (e.g., x, y, or z). In general, such parameters will be classes.
6b2a562abd688f9139884ba83598b9a348a88d94|2004-12-21|eduard@valeyev.net|Removed most equiv() members and replaced them with functions from PtrEquiv<>.
d58679f9abe4ead264f45c17d86b90ed5670cdb1|2004-12-21|eduard@valeyev.net|Removed old code.
9821b6399a18e227c832df9a725e05483cf160cd|2004-12-21|eduard@valeyev.net|I'm generalizing code for GenIntegralSet and switching to standalone comparison functions.
19fdc368b63b43cedac1d323eec4ee0db290a4c6|2004-12-20|eduard@valeyev.net|I am generalizing policies. Need to generalize GenIntegralSet to allow auxiliary quantum numbers first, then I'll get back.
7fc98337df551b3a2809bfac6b6e6b1e46274ebe|2004-12-20|eduard@valeyev.net|Initial version of doxygen config file. Copied over from MPQC and edited.
5b74a6b6afffacb4826c9f20cfab1d0fb79c65df|2004-12-15|eduard@valeyev.net|Realized that I need to be able to control in which direction I'm applying the recurrence relations for Gaussians. I need to change the definition of RR classes to take the direction parameter statically (as template parameter) or as a constructor argument (using an abtract base?).
a61f8d506ac9b686889df0a5ddbc62984c6364a0|2004-12-13|eduard@valeyev.net|traverse() was incorrectly declared to return a SafePtr<> but didn't have a return statement -- it was one difficult to find bug.
4828abe126d721e379aca33c94622daffa797a3e|2004-12-11|eduard@valeyev.net|Have seemingly completed switch to smart pointers.
9a2e120306b158f28cdc13e580049daf19652a4f|2004-12-10|eduard@valeyev.net|Switch to smart ptrs is in full gear.
85c15b1602d26fff2e015307bb8cbd432858b0ce|2004-12-10|eduard@valeyev.net|Started switch to SafePtr
88146afdadb33913b8c0fb5a1a967deac0b624b3|2004-12-10|eduard@valeyev.net|Replaced Traits with Policy.
bc6a6e729534703fe79fef1d9b88d0f55d478c57|2004-12-09|eduard@valeyev.net|Forgot to remove this file.
ccb431d890d49bb69af2d09235ddf57959647c0b|2004-12-09|eduard@valeyev.net|Started renaming Traits to Policy. Started switch to smart pointers.
4005a2d8a8cefcc04b8f06a0d6504a082c723e32|2004-12-09|eduard@valeyev.net|Modified StdLibintTraits to provide correct instantiations for types which are trivial sets. Operators are also treated as sets now.
6c08cd0de2540dda45eb1a0e23e3ad3a7b2d112d|2004-12-09|eduard@valeyev.net|Major additions to the SubIterator code (need to swap change SubIteratorBase name to something more reasonable). Now SubIterators work! I need to reorganize Oper to a hierarchy allowing sets of Operators (with associated but slight change to StrLibintTraits<GenIntegralSet>). Also, GenIntegralSet needs to take "extra" integral descriptors (such as auxiliary index, etc.) encapsulated in a class as a template parameter.
aa07beac8fd65372322d48d2f64d15fb3c9e5c99|2004-12-08|eduard@valeyev.net|Getting ready to get replaces Policy with Traits.
5e11862b2257b35dacd167a14e953b5538a419b8|2004-12-07|eduard@valeyev.net|SubIterators are progressing nicely. Added policy templates and implementd StdLibintPolicy.
895ceee18daf54c6f247f65d46a5048feff3a0b6|2004-12-04|eduard@valeyev.net|Started working on iterators.
d5d3b7cb83c4f4c7044c6fb67a61c5b937b22ae8|2004-12-03|eduard@valeyev.net|HRR and VRR have been much generalized. Started working on CGShell_to_CGF and iterators.
ceb1db15bf89eba2c9523dd7e71c2ac00377c1cb|2004-12-02|eduard@valeyev.net|Generalized HRR and VRR, although both need more work. HRR needs to take function indices as template params, and VRR needs to use member() to access elements of bra and ket.
cadf74c071805114b420ac4984ca947617d09de3|2004-12-02|eduard@valeyev.net|New "parameterized" VRR and HRR. Integral type is given as a template template param.
f433eee002b59132d379bd434325c60ab4dbedfd|2004-12-02|eduard@valeyev.net|Modified HRR and VRR classes to take integral types as parameters.
df78a0e8297aa37e54003ac36f3e9b01225b809c|2004-12-02|eduard@valeyev.net|Tried to implement TypelistBraket and failed. More progress though.
a43f347ed767de393cdd61bc71ac7058bc191214|2004-12-02|eduard@valeyev.net|Stated a new hierarchy which is more flexible and should be generalizable to allow different function types in the same integral.
8c7bc09c9664665ff03d57b9491abc593af623c5|2004-12-01|eduard@valeyev.net|Typelists rock. Not sure how to write a constructor for one though :-)
d3334ddf3a182ada4d364d436740cffe1fe25f39|2004-12-01|eduard@valeyev.net|Playing around more with typelists. Maybe onto something here.
5d72c0a821428d3cbbd7ece5956fb7abb27dc96f|2004-12-01|eduard@valeyev.net|Started to play around with typelists but doesn't seem like their clumsiness is worth the effort.
d07ca6d27a09c7ebd3b45f27d915166447c2c9f8|2004-11-30|eduard@valeyev.net|Added HRR class. Going to tweak class hierarchy a bit.
76cf625fa1675429bb28ebd5f2c2b960dc0c0584|2004-11-30|eduard@valeyev.net|Now can apply multiple recurrence relations to the same graph. Starting to understand how to let user determine graph construction strategy. Need to implement restrictor classes which can be passed on to the graph "constructors".
6cb33633072a7b403a744f7fc3e469230471f7ba|2004-11-30|eduard@valeyev.net|Recursion finally works now. Starting to feel the need to reorganize. More generalizations ahead.
b399e736ad7a6eb31fbeebc38ee5872e10d4565d|2004-11-28|eduard@valeyev.net|More updates. Currently working on traversal algorithm.
f0679ad18b9c47be4e07a20b7ef69b82041643d9|2004-11-27|eduard@valeyev.net|More updates. Recursion compiles but doesn't work right yet.
96ca467e607a9f47ccd30b0585357dfbfa52de0c|2004-11-26|eduard@valeyev.net|More updates.
e74b17525c0cbcf9d46b4876f2b424e56c421650|2004-11-24|eduard@valeyev.net|Still developing ideas, but the code is firming up.
d3f78efb16dd57ed1f9a98bce72fa4738fdd8fad|2004-11-23|eduard@valeyev.net|Prototyping more stuff -- last few ideas are starting to look OK.
a31dd14a8332c324b66009f0c4ac7319a682d158|2004-11-23|eduard@valeyev.net|Added new LibintV2 code. It's probably garbage anyway.
de88144877b9e659e97be76982cfe0beaaa540b1|2004-09-17|eduard@valeyev.net|This commit was manufactured by cvs2svn to create branch 'prerelease-2-branch'.
91727fa917f80a5929a1ea64a818917612c409c3|2004-09-17|eduard@valeyev.net|Fixed a typo.
b08f7e9054d50fabaa3e40e5817c1da62bffe968|2004-02-18|eduard@valeyev.net|Fixed a comment.
f9d16b47ff78deebe4d86a5525a25766cdd27641|2004-02-12|eduard@valeyev.net|Minor cleanup: some non-void functions converted to void, removed unnecessary arguments to fprintf.
d671933fd91bfeacf570577238802e2030369e47|2004-02-12|eduard@valeyev.net|Unquoted $LD so that command line is executed properly when $LD contains spaces, e.g. on AMD64/Linux (thanks to Curt Janssen for pointing this out).
cf1d4aa219600800eb0a22d1bf65194470fab931|2004-02-12|eduard@valeyev.net|Cleanup + added new options to specify optimization flags to C and C++ compilers.
03c31f71c6a39c56f60e8617f96866ec2a31a62f|2004-02-11|eduard@valeyev.net|Definition of TOPDIR in lib/Makefile and lib/Makefile.library was completely different, which lead to problems while using the same MakeVars. Now new variable TO_TOPDIR is used to track back from the source directory to the top of the source tree. TOPDIR is assumed to give the full path to that location.
41cccc06e510812fe3f5790624f89777f023a489|2003-12-05|eduard@valeyev.net|Forgot to update version number in configure.in + increased version requirement on autoconf to 2.52.
db8ef0fbfc0a8be9956d538acf0c9e167be7dfad|2003-12-05|eduard@valeyev.net|Added programmer's documentation.
bfb32582e4b399e30e5fa7dbc3ca66fc194b9a4e|2003-12-05|eduard@valeyev.net|No C files are generated anymore. Remove corresponding lines in Makefile.library.
a52a036766b8eea64241f9f713135630b8e79b15|2003-12-05|eduard@valeyev.net|Initial check-in.
351fa9e53539dbfcab4ff96331a04b41d20ed419|2003-12-05|eduard@valeyev.net|Moved SYSLIBS onto the rule line -- SYSLIBS aren't handled properly as prerequisites.
55cbf54fda963be7f84a3fb0c8eec6c6dccadee5|2003-11-11|eduard@valeyev.net|1) Added missing titles and changes bibliography style to unsrt. 2) Some fixes in the text.
ce99bf7faa870187427f7d34244da63f35553dd3|2003-11-11|eduard@valeyev.net|Added programmer's manual.
fab154cfbaca66361d88bedfe5fe64fd1e54500e|2003-08-07|eduard@valeyev.net|Use install rather than mkdir -p to make directories.
e3c6033d895784f36020e5c8da36549f1e250e0b|2003-08-07|eduard@valeyev.net|Upgraded version to 1.1.1
284333214aca1e6caa074bbaf37837ac4e0b687b|2003-08-01|eduard@valeyev.net|Added FLOP counters to VRR and HRR routines.
42838bd261de8905e18e53a09decab8da0bb9163|2003-08-01|eduard@valeyev.net|Changes to quite Intel C/C++ (7.1) compiler warnings: missing prototypes, etc.
a54c4b58e33652a0a823913c091c6943340bc3be|2003-08-01|eduard@valeyev.net|LIBINT_VERSION only needs to be defined once.
f05ea8827ddbec4fc32e86b0e76056bad62ae905|2003-07-31|eduard@valeyev.net|Moved suffix rules into src/lib/MakeSuffixRules and src/lib/libxxx/Makefile-specific rules into src/lib/MakeRules.
999e50994712095c3bf5ee519ea200ffa374fb0f|2003-07-31|eduard@valeyev.net|Added src/lib/MakeSuffixRules.in for the first time.
dc81ee09a1fafe9a3afd6c8862ead1361f5aadab|2003-07-31|eduard@valeyev.net|Latest config.guess and config.sub from MPQC.
ad5007db644f03dbd1d18027eb9be2f8b3342bbf|2003-07-31|eduard@valeyev.net|Some file names corrected.
a88330a124b37a45cffdf015aec8c8cb1caf575e|2003-07-31|eduard@valeyev.net|Changes for the upcoming version which can produce shared libraries.
38f88efe8ec88db8d1f06ba77e9e0bdaf9b5f7a6|2003-07-31|eduard@valeyev.net|Added libtool.m4 for the first time.
4ed6b46370ca12720a0024a2300c4bc213c43d05|2003-07-31|eduard@valeyev.net|Added MakeRules.in for the first time.
58be90530768ce641881f07f1e3f30f09c3ad33c|2003-07-31|eduard@valeyev.net|Added ltmain.sh for the first time.
3bc6ffe9045710102101fc08be889ff9a8a3fd10|2003-07-31|eduard@valeyev.net|Update version numbers.
943fd34d5f7fe064d97e19156a999963ec282b40|2003-07-31|eduard@valeyev.net|Don't need to run autoconf, assuming this is a distribution (which then includes configure).
0a93650655aaa625a4d2ef737d6c9d0d3171afac|2003-07-31|eduard@valeyev.net|Used = where == should have been used.
267494faee8f37b084a6a42d4fe37e5a6714df4b|2003-07-31|eduard@valeyev.net|Minor stylistic fix.
947c6a9b8aee640458942d567a2fe72d25de64ba|2003-07-31|eduard@valeyev.net|use mkdir -p to make scratch directory.
faa56c73adab6dce4df4af341373ae226b0ec4c0|2003-07-31|eduard@valeyev.net|Removed configure.
a5c458c2cb82c041a711be1e9808ece53d75aa83|2003-07-31|eduard@valeyev.net|Changed default scratch directory location to a subdirectory in the object directory.
579245ab391c69cb05ebf54dd58f71fb5713f5c0|2003-07-31|eduard@valeyev.net|Made all local functions static, like in emit_deriv12_managers.c
b270ea2431b68da22358137a94820edd972cc30f|2003-07-31|eduard@valeyev.net|Specified oclean target.
f82709217be22101b992329b05c54119ca829bc7|2003-07-31|eduard@valeyev.net|Added configure.
1f9de72eddf79a17f2ed9983feed050c53331227|2003-07-31|eduard@valeyev.net|Fixed a bunch of errors that ValGrind complains about. There's an error in build_libderiv still (stack is too big).
4baf5224e58ba3490e052989caa8f64d93284fee|2003-05-09|eduard@valeyev.net|Import of EFV LIBINT v 1.00
a1f2e6be63eb1de5db06649db895372ced6c159d|2003-05-09|eduard@valeyev.net|Standard project directories initialized by cvs2svn.