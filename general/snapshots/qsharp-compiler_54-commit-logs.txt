b19fe1705020a253c4ad867f966648128c95c3be|2020-10-07|Sarah Marshall|Fix some potential nullability issues (#668)
bcc86744ed1eb5d885656d1e237e0047237cda52|2020-10-06|Ryan Shaffer|Fix links in extension documentation (#666)
0e6a240fd9d391692e3b3bd619cfa5ddf7af3afa|2020-10-05|Sarah Marshall|Add vsce to devDependencies (#664)
edc3d1557d62dc3cf1175caf6386e78aee91eb03|2020-09-30|Sarah Marshall|Remove null argument checks and thrown ArgumentNullExceptions (#657)
7b36d4456ea3c344c3293a7e6f540b66402450a9|2020-09-30|Sarah Marshall| Enable C# nullable reference types in test projects (#656)
3d9c192adbcd4b157f587c4a55eac9bf90e55a95|2020-09-29|Sarah Marshall|Enable C# nullable reference types in Compiler project (#648)
e1a43f3da021fc94d7214ea197ba3905ff96695c|2020-09-29|Sarah Marshall|Enable C# nullable reference types in LanguageServer project (#645)
6602eed1a1cac98038c36c8d57c57d6d4cad0417|2020-09-29|Sarah Marshall|Enable C# nullable reference types in Transformations project (#644)
cdddee84806e7f4ca05fb514e94bd31788a76d29|2020-09-24|Sarah Marshall|Enable C# nullable reference types in DocumentationParser project (#646)
21e5daf01efbfe3cec6204e697bbb909e26fbf41|2020-09-23|Sarah Marshall|Enable C# nullable reference types in CompilationManager (#636)
5db3bbcfbac81769c230363916bbe8d7d15b2fc6|2020-09-21|Sarah Marshall|Enable C# nullable reference types for CommandLineTool project (#628)
f8066b595c8fc734bf1a3fab5f594c0123bb4cf3|2020-09-18|bettinaheim|renaming master -> main (#623)
16f8ca37bd9c5de4a5e9f2dd8ed5e9fc031631a0|2020-09-09|Andres Paz|End-to-end (e2e) compiler pipeline (#606)
20c020d889915f2f19d996b5e2dc6a23fe2b6075|2020-09-03|Mariia Mykhailova|Remove deprecated functions from syntax highlight (#595)
a1b258817a6e9b14e96200804d662b7b74823a75|2020-09-03|Sarah Marshall|Add package-lock.json template and use npm ci (#603)
1dfcb0095fd99d5a1dedfe66bc39758a6926e78c|2020-09-03|Chris Granade|Format namespaces as UIDs instead of FQNs. (#599)
c3a41b3979de9205c5c3ce590c6db100ef41beb8|2020-09-03|Ryan Shaffer|Fix @types/node version (#602)
8cb1d00fcb868e7bcc6e25636285cfdb3176a98b|2020-09-02|Ryan Shaffer|Enable temporary .csproj creation and associated language server tests (#582)
2d114c9f765c4c4cc2d419136110e7dea1433447|2020-08-26|Sarah Marshall|Clean up source code position and range handling in the compiler (#531)
b05ca7913b0d766673d5aec2cbf759f25d890785|2020-08-25|Scott Carda|Nested Self Resolutions are Disallowed (#587)
4bd90b20a0ac05209d6cf5785e4b520685d63e71|2020-08-24|Ryan Shaffer|Remove entry point for creating temporary .csproj (#585)
5edc1d610b8f75004fb1d0237627013ca0c0b8c3|2020-08-22|Stefan J. Wernli|Add ExposeReferencesViaTestNames to assemblyProperties (#581)
a2db4496301755e8e727815691e108080f1d4682|2020-08-21|Ryan Shaffer|Fix intermittency in LanguageServer tests (#580)
9a851990d59a10e0ba56b2fec744c679251423f3|2020-08-20|bettinaheim|Support for type argument inference for direct recursions (#576)
2b2fbcd64742982974aa54c92a55f53f9d9bbb9d|2020-08-20|bettinaheim|Warning for underscore patterns that will be reserved in the future (#578)
5453958d5cc462bff3c1ca754df1f326df9d2aa9|2020-08-19|Ryan Shaffer|Auto-create temporary .csproj file if none exists (#560)
b5268c59430fa39941c702437c0bc44caeb59310|2020-08-19|Ricardo Espinoza|Updating Notice.txt with a more recent list of third party libraries. (#577)
a571feacfa0e221fab5459bcdc3f8b87cd2ade9b|2020-08-17|César Zaragoza Cortés|Fix to build of faulty Q# program succeeds when calling `dotnet build` twice (#570)
5fc3bab3f6f8ac34bdf3f60592bad13855ce3669|2020-08-13|Ricardo Espinoza|Using NuGet.ProjectModel from the install path to avoid version conflicts (#566)
7e34a92db8f95b8ea1da3f9bca2a5ae3c9f9d802|2020-08-13|Andres Paz|typo (#567)
050bde153c7af9a4d271b878a513b433f7a4dde2|2020-08-13|Andres Paz|Specifying vmImage for CI build (#568)
b7cbbe66d78524eb53885414389b686cbc3d6ab8|2020-08-04|Scott Carda|Type Parameter Resolution Combinations (#543)
5f32f602ed8d14cf8d2e4c245af10038d57bea36|2020-07-30|Stefan J. Wernli|Fixing pack script (#545)
d7b99d2d456aeafc06d62d570508c3ba80433512|2020-07-30|Ricardo Espinoza|Set a fixed version on Yeoman generator dependency. (#547)
2002c55a59808d44c2fec4f862c67b5848c27816|2020-07-28|bettinaheim|fixed a parsing bug (#532)
50cb7ce18fca4535a20334583282f148d7e5e7c8|2020-07-21|César Zaragoza Cortés|Simplified command line tool perf option output to make it easier to be consumed. (#527)
30f91da02b21f35b811de36292f0a9150b79a4ca|2020-07-21|Filip W|enabled decompilation for omnisharp (#519)
d72b05b9acd82977add5b0054301850f8c50da88|2020-07-21|Sarah Marshall|Do not include dependencies with PrivateAssets="All" in the compiler package (#526)
98c5b89010ea33c664f7c081fe711634e661f74d|2020-07-16|Sarah Marshall|Limit trim_trailing_whitespace = true to C# files (#518)
f82be30ec96e02334e52b437bd6d37f3598188f9|2020-07-15|Ricardo Espinoza|Embedding project templates in Visual Studio Code extension using Yeoman for templating. (#515)
3b4638dfe8dfc3d3319b06b6cb36f84cfc9e63c6|2020-07-15|Ricardo Espinoza|Remove extraneous line break in command in the build steps YAML script. (#522)
e88d8eca97c176cb4cf76cb6eefd5226b3121796|2020-07-15|Ricardo Espinoza|Replacing deprecated IconUrl with Icon and updating the assets for NuGet packages. (#517)
e318308d2a1dc5146d0d2eae98ddaa7ff3507504|2020-07-13|Ricardo Espinoza|Replacing assets in extensions. (#516)
ceede3b8feb345502f2bdb2ae0c53665a9d6d471|2020-07-13|Sarah Marshall|Add StyleCop to all C# projects and reformat code (#513)
84b7a641206d3df38770b532c1e32dc9ca870628|2020-07-10|Sarah Marshall|Remove version and copyright properties from Q# grammar file (#509)
31f3fdf80012b81834cd7c9f893cec9e6fc3f650|2020-07-09|Sarah Marshall|Rename "execution target" to "target" in result diagnostic messages (#511)
2b2d2626c4c1936285ff98f5704da00fae89a9c7|2020-07-09|Andres Paz|Set up PackageId for Compiler package (#512)
3c9bde97a345b5daa0ae178beb60a25ba2fe80a7|2020-07-08|Sarah Marshall|Add StyleCop to CommandLineTool project and reformat source code; add .editorconfig for all projects (#496)
62c8f558f2dacf0d21d8fd0695a4a005ca8c9bc6|2020-07-06|Sarah Marshall|Compile-time errors for Q# programs not supported by QPRGen1 runtime capabilities (#488)
78e152b9ae5dcfed8393e5773d5e7f1af55706fe|2020-07-06|Scott Carda|NoOp Reference Change (#494)
deca80df6b451740154d31d57c493d6c66ec9514|2020-07-06|Sarah Marshall|Fix errors with exception handling during compilation and tests (#492)
d602131b91f9d544fdf6c59ad0e650bbbb22d0db|2020-07-05|bettinaheim|removing unnecessary package references (#505)
0b8cdb498711feddb211dcb0e83733e28c3a3f49|2020-07-05|Filip W|upgraded Roslyn to 3.6.0 (#499)
b77641106b8faaa9046e119dec9f704f200bce46|2020-07-02|bettinaheim|Distinguishing the processor architecture and the execution target (#503)
4a3f128f2796fefa8b1b22ccf03b741907b17102|2020-06-30|Ryan Shaffer|Use correct versions for both VS and VSCode VSIX (#500)
73340cfcd7877f6598e404ebef03fb744406152f|2020-06-30|Chris Granade|Add SemVer 2.0 data as AssemblyInformationalVersion (#501)
cd147b9954143ef97132f7318cf758aa7eb73c79|2020-06-30|Chris Granade|Bump Markdig version. (#502)
dbeaf565cbf9200b8f0388cf933d88c50e1e2bed|2020-06-30|Andres Paz|Language Server SEMVER (#497)
7ebc8e2938a1eda75eec0c2c90c4ebf035baf59a|2020-06-26|Scott Carda|NoOp Removed from Dependency List (#490)
cc3018dd984e49cc462056fc8b50e8900a371168|2020-06-26|Scott Carda|Add NoOp to Precondition Dependencies for Classically Controlled (#489)
d9607b6d471687fe1cf9fd932865ece0202627fc|2020-06-26|César Zaragoza Cortés|Fix to reserve symbol in set statement crash (#486)
9c06f92d602396c9a5ab9aa5219e62a9a04f1d21|2020-06-25|Scott Carda|Use OnCompilation in transformations. (#484)
634695d4c377272e04b9667657d9b72fa35b296e|2020-06-25|Sarah Marshall|Use Uri.LocalPath instead of Uri.AbsolutePath for file IDs (#468)
528354ad2958764de68416a8eb6524f805864a81|2020-06-24|bettinaheim|Don't execute rewrite steps if the validation fails (#473)
c4dedbacfe083777889dc768e3ad0d3d2c98f280|2020-06-24|Scott Carda|Classically Controlled Short Circuit Bug Fix (#478)
311bf5de9e540c7f1e62dd7b0fc282dc30e85f34|2020-06-24|bettinaheim|Revising the plugin mechanism for compiler steps (#472)
210f3d699c92a6db248943f0968c9c74880bf3a5|2020-06-24|Ryan Shaffer|Fix possible null reference in CompilationLoader (#481)
0fe402c68f79b63c54e8419c63085b4971a25922|2020-06-23|Sarah Marshall|Prevent result equality comparisons for QPRGen0 runtime capabilities (#449)
8dc8e16d8bd191891665b0fd63447c9515b669aa|2020-06-22|Sarah Marshall|Use invariant culture for string conversions in tests (#470)
b8d2c54c4a5efa6fdcbc86bec978793cb1e6fec9|2020-06-20|Stefan J. Wernli|Fixing escape handling in string parsing (#469)
899cd8368237e91f88ca7b62725fd8427a2be82a|2020-06-19|bettinaheim|Some tools for adding attributes (#463)
c31cbd0affd38e9957de554c8474066b711c5200|2020-06-18|DmitryVasilevsky|Symbols are restricted to include only valid characters (#467)
073630413ce4e67d25b183206af594e8f2efd709|2020-06-18|Filip W|use local path for UNC files (#356)
34a8c0b0903005d5d9a89b67ef0deec65cb6f0fd|2020-06-17|Stefan J. Wernli|Fixing use of ASSEMBLY_CONSTANTS (#466)
54ce2ddc9c36f58c550482127ccbcc50d6ebdfc1|2020-06-16|Sarah Marshall|Add tests for equality comparisons (#465)
2bf9c75538c753d03fb49760fd8d72d74b735826|2020-06-13|Scott Carda|Remove Classical Control NoOp Precondition Dependency (#461)
570f139ccfb8072c2447704469868a88651c45d7|2020-06-12|Scott Carda|Remove Classical Control NoOp Precondition Dependency (#460)
d9baf4edcd618455ab7c6ad245c2ba735d0217a4|2020-06-12|Scott Carda|Added NoOp to precondition dependency list for classical control. (#459)
a8929d46d95787d90267764c6a4e963b15a1747b|2020-06-10|Sarah Marshall|Add a reference to the separate entry point driver package (#444)
851a8e3f6029ed7ae7da4c04d4e361152ffa5279|2020-06-06|bettinaheim|Fixing a couple of issues (#447)
bb083c97c92cfafa0ee95540cb41226c5aa76a76|2020-05-30|bettinaheim|Removing .g.cs files before invoking the Q# compiler (#445)
ad118bcc00b6f4664df218021ecefe094681dcf7|2020-05-28|Ricardo Espinoza|Updating Nuget.Frameworks version to 5.6.0. (#443)
24fd52030f59fd20971708fb75a8166803ba7c26|2020-05-28|bettinaheim|Covering some additional cases related to type parameters for intrinic callables (#426)
d70a6536eb0d1f67b4765dd18e1728b1634074c3|2020-05-27|Sarah Marshall|Add support for updated standalone executable packaging (#442)
94ae77a24d342dc96527ff2e96aed41533d02a69|2020-05-27|bettinaheim|Adding some telemetry info (#424)
0cb41e71ec6f3dc5f1c1248d35523c8b8b81d3dc|2020-05-27|Stefan J. Wernli|Add IncludeProviderPackages option (#441)
5d64d6e388d6f745b32ea6d1d27f7ad58c352ded|2020-05-26|Stefan J. Wernli|Adjusting ExecutionTaret for partial matching (#440)
1ff583c508308e970069dfbfe9dd80a26420255a|2020-05-26|Stefan J. Wernli|Replacing placeholder ExecutionTarget strings with partner targets (#439)
49ae36adba35a644a90c5043ebd5020700c2a72c|2020-05-15|Andres Paz|Incremental build for Q# projects (#431)
68ad6963eb16bb1d78961aea608b4e6224b208b0|2020-05-04|Scott Carda|Removed IndexRange from the monomorphization exemption list. Added the appropriate type parameter to the BuiltIn member for IndexRange. (#425)
ba557ab7df7cd53e44a4fac0671f7783b9f607db|2020-04-28|bettinaheim|Order built-in rewrite steps according to their priority (#421)
096189d663a47d356b651e5717b50cabe8c0b484|2020-04-24|bettinaheim|Removing additional restrictions on array items in entry point (#416)
118c76d69e48b80b92ec3c0de8bf9df8ff79a676|2020-04-23|bettinaheim|Only preserve entry points in sources (#414)
230f8b037ef4e71ec15b8a9d286045481e2479f3|2020-04-22|bettinaheim|Removing driver from the project templates (#412)
466019892472ac3da805a3f01a7dc83f881ec7f4|2020-04-22|bettinaheim|validation for array item types in entry point arguments (#411)
2f1e449ba729d1d7a64109041ee6f802f9e79b36|2020-04-22|bettinaheim|disabling monomorphization when executing on simulator framework (#409)
320e56cccc29534964d7650369f9107a61183451|2020-04-22|bettinaheim|show no more than one internal error per minute (#410)
207efcdbaec3ffd54d321966c28cd0cf2ff64ec3|2020-04-20|Filip W|removed unnecessary zero length array allocations (#407)
8279e1f29afa84a5eaf4bbecee0fe569d06da107|2020-04-17|Sarah Kasier|Fix for issue #400 (#401)
4e474f80e55855cf4cb493204ea578e2e7e4732e|2020-04-16|bettinaheim|Propagate the Q# OutputType (#405)
31a5ecec3f10f3f3d728646a35c40aad0f61b61a|2020-04-16|bettinaheim|Diagnostics based on project information (#402)
08caa3a88dcfdcddcf9bcf917f437fb896c9d77a|2020-04-16|Chris Granade|Emit warning about automatically generated docs. (#404)
7eee0c3c29fb62d1b4dcbbfeccb5b7c04db59c65|2020-04-14|bettinaheim|correct return code (#403)
38bc6075a55082f6c3d0b9c7f3bd0ad915086be1|2020-04-13|bettinaheim|Additional verification for entry points (#399)
a6aef35a38818525a74e44c8f73dd0c2a072a1b5|2020-04-09|bettinaheim|Additional targeting support (#389)
251667d18e16d1a3cc21420b56c51c27e8bf313f|2020-03-29|Scott Carda|Rewrite Step Migration (#393)
03c418e1de2f0e7142c7f9cc845d1863ffc6b84c|2020-03-25|bettinaheim|always get a new instance for SyntaxTreeToQsharp (#390)
7284e60b030150abdf34df55ab6737a290ac5c6a|2020-03-25|bettinaheim|Added an example transformation to the compiler extension sample (#384)
c4c0c48c631a52f4043cc296f750df1930f55ae2|2020-03-18|bettinaheim|Fixing command line issue that accidentally got committed (#383)
f9ff6ab109091ab71f820698f202d6a5e26efda6|2020-03-18|bettinaheim|Support for target packages (#367)
e99b1183bf7cb6228a7b31e1eddb000dffa82d73|2020-03-18|Stefan J. Wernli|Add recommendations/guidance for VSCode extensions
53e9f4fd3447093ddaabdd40216a4d3d12872bc9|2020-03-17|bettinaheim|Fixing project load issue when building with .NET 3.1.200 (#382)
9ac9bb3a43ebcdef13921d2b4334d9f0ced272a0|2020-03-17|Sarah Marshall|Fix build failure with .NET Core 3.1.200 (#380)
6a951f5a5d208387f3db92fa973b05180feceadc|2020-03-17|Sarah Marshall|Add the internal access modifier for types, operations, and functions (#345)
571ad7800f5367e88d155d745fa306ca00524fb3|2020-03-16|Scott Carda|General Lifting Transformation (#364)
4574902908dc0f55308144e8267b092aee476125|2020-03-14|Stefan J. Wernli|Merge pull request #371 from microsoft/swernli/gitignore
f4ad93f4910c6010124e48a30d45ce3ec8684b13|2020-03-10|Filip W|Upgraded everything to .NET Core 3.1 (#359)
00d9c45cec8a8deff8c8d13cc7d12d9790311541|2020-03-04|Scott Carda|Sccarda/classical control rewrite to master (#357)
8e6fa1b906d9c0c0681a829b3071a928f714343e|2020-02-27|bettinaheim|going with the latest beta packages (#350)
8ae68248a0c31812f3c7f2b3337541b3b32e91f1|2020-02-27|Filip W|Emit DLL as a release build (#348)
759c66617fe25a619b41815cc63f5df91207caf4|2020-02-27|bettinaheim|Revised transformation setup  (#340)
72a5f02b197561cb5556f5d057ef8f0620dd2551|2020-02-26|bettinaheim|removing the publishSingleFile options for the VS language server (#346)
9bdc21409409b8e74cde1e0a24c49fc80bb602f3|2020-02-26|Sarah Marshall|AddDocumenation → AddDocumentation (#341)
4b03e876430579fc4316dd69433d139176ede56c|2020-02-26|Filip W|Use async Main in the project template (#336)
a273bfbbc00a53bbcce8cbd6db8907a23594f739|2020-02-25|bettinaheim|Sdk readme title (#335)
f6c0715fb99a7326949020a397ab443e966710cc|2020-02-22|bettinaheim|Minor bug fixes (#328)
d08dcb13294f6b2cf83f16b98bfd04b3ebd21b6b|2020-02-12|Scott Carda|Classically Controlled to Master (#310)
154a37da8fa7a230ea943dfb26d510a17d63a481|2020-02-06|bettinaheim|replacing public facing option with QsNullable (#308)
ae0fa642e7f5b761948aebbfbfe1d38d8a40cc8c|2020-02-04|César Zaragoza Cortés|Add a performance measurement option to the command line tool (#297)
6dc69ed6887ef39351637d9a89c1f76cf3ac1cee|2020-02-03|Chris Granade|Migrate docgen TOC merging to dictionaries (#303)
006b633a329e7c05bc19bde5ad655f9d5ecbee8e|2020-02-03|bettinaheim|Updating Sdk readme and adding an example for defining custom compiler extensions (#300)
396f9dfb96f2bae26d3d076b982b64a39b8382d5|2020-02-03|bettinaheim|Separate build target for adding the generated C# files to Compile (#301)
1ecb1f43821671430e7329a4e106ec9bc54167ec|2020-01-27|bettinaheim|Disabling incremental build support and design time builds (#294)
b53f9d978362af84ea62c348fadbe3d4ec06d6e9|2020-01-23|Chris Granade|Updated BUILDING.md to new self-contained deployment. (#227)
959bb4e315c6a2f3a84817decc3b008d899a6988|2020-01-22|bettinaheim|Exposing optimizing transformations under Experimental namespace (#286)
9a3417dd1b7ac93e75db3128c20d22a1476892da|2020-01-22|Mathias Soeken|Additional simplifications for arithmetic expressions (#278)
625c02fe464e2cd782a7d88dbc27313f8585e430|2020-01-22|bettinaheim|Adding a handle for diagnostics to the IRewriteStep interface (#285)
0c740a1c28168831524b45052323bf2cc0a37917|2020-01-17|Andres Paz|Build pipeline tweaks (#281)
5aa7c20358b43ca009001e5f28cf55754fd32191|2020-01-13|bettinaheim|Using a response-file for qsc command (#284)
27da5183e789a537f0695e4432cb26572c0da7d1|2020-01-12|bettinaheim|Avoiding command line issue (#283)
7f410f894685cc49f7613441f089c5faa2463b7a|2020-01-04|bettinaheim|Working Sdk version... (#279)
6ffb9e3a0a0b6c0790259996f5785971946f1468|2020-01-03|bettinaheim|Updating the project templates to use the new Sdk (#274)
6a3e68d8075d1d07c38916747b4ea8d4238071e9|2019-12-27|bettinaheim|Quantum Sdk (#262)
e110399a58b3672bb22fa18c724340b632e20675|2019-12-27|Chris Granade|Sort documentation items when merging TOCs and namespaces. (#273)
3c3fb7bde4cc4073852da85fdcd43ed838c8eecd|2019-12-12|bettinaheim|Making position info for declarations optional (#265)
366eb948c1f8e5d337a3785221afb0a7f8f6f340|2019-12-06|bettinaheim|Language server command line and logging (#264)
c6701caddeaf2f0664087e947ecdcee0b81a3069|2019-12-06|bettinaheim|Semver number in build script (#263)
dc4fd1aa8431bd53b6d6860fa2ee0ddc0cf5d79b|2019-12-04|bettinaheim|resource estimator is the correct name for executing unit tests... (#261)
b730d0ba3112a3bf1eb3dace2f7861407bdf8bbc|2019-11-26|bettinaheim|Support arbitrary execution targets for unit tests (#258)
bd09e7c63adf0d9420399c451d2e4a2e0c6b8479|2019-11-22|Bettina Heim|missed a package version
9ec7037f538b5167b7a42d673e82b6a28c56cf73|2019-11-22|bettinaheim|keeping xUnit as template shortname (#257)
18a1eb21c23a6a2021679dfa870283b16f398fcb|2019-11-21|bettinaheim|Updating the project templates (#256)
009fa26a6a295105f3d8130f55291bd3b31f3d8c|2019-11-20|Scott Carda|Environment Intrinsic Mapping Transformation (#246)
377b41b900baff15784853d9970087b432ae78c3|2019-11-20|Chris Granade|Lowercase UIDs on deprecation attributes. (#230)
1ca68a9c43a9d6c05f7fb4cb1ce46295e70d6091|2019-11-20|Esteban Ginez|Fixes QsCompiler build scripts in macos, linux (#255)
7836e107b03a536dda782516e80e6103d4730bb9|2019-11-18|bettinaheim|Different namespace for TestOperation attribute (#254)
202d58c741e73fd6be11a51314a91b61290709b0|2019-11-16|bettinaheim|Override handle to load references based on C# attributes (#252)
463c94fda72c5f20f422d6301b14f4e0c2dadfca|2019-11-15|Mathias Soeken|Make PreEvaluation more customizable (#248)
add8a078c550ad83779087e03219013b3d862a00|2019-11-15|Alan Geller|Syntax Tree Walkers (#233)
8f6934840900380fd26e94f439316e46ea38d89c|2019-11-16|Jordan Andrews|Fix for doc generation failing  on repeated compilations (#242)
1239a0179d091b27f4cc86311a141361e077b8dc|2019-11-13|bettinaheim|Exposing three methods and an additional configuration handle (#249)
715f4c2f279e7a67e4b1a1991872a2fbabddf82f|2019-11-13|bettinaheim|Convenient handles for Q# unit tests (#247)
fbc46bde5b059c8cb0f9b296fb385b2cde4f45ad|2019-11-12|Mathias Soeken|Rename PreEvalution to PreEvaluation. (#245)
3dd205b626b4947892a92ee271969372e1c2f4d1|2019-11-12|Mathias Soeken|Infinite loop in optimization passes (#244)
704479aa58f0ec52a3c22cef6f67cc76eea1bd7c|2019-11-11|bettinaheim|verification for unit test attributes (#241)
bf39aa6d2da7f7962056a2ab20d0066b6e93c3a9|2019-11-08|Scott Carda|Added license header to MonomorphizationValidation.cs (#239)
33f51bf6f493c480a78c899dd363bf426ef77ac2|2019-11-07|Scott Carda|Fixed reference in UnknownNamespace error message. (#238)
75254e5fcde83c1ba80ad648c54f1cb261d667e8|2019-11-07|bettinaheim|Rewrite step loading via reflection for steps implemented in F# (#236)
bf5b0bf8c358d18c54c9f529ba1b71c754c0ce5f|2019-11-07|Scott Carda|Use Enum for Status Instead of Int (#234)
3d9e9da3b33722437227f396cef79ece0a056334|2019-11-07|Scott Carda|Adding References to Error Messages (#235)
7062373043b489493a9313765b24cdfbfbd60811|2019-11-06|bettinaheim|Merge pull request #232: Monomorphization
b4d747a0a674642f93d049ef317f6c48b6e2e989|2019-11-06|Bettina Heim|clean-up before merging to master
0cd2322fa61b58f0e46e8c937ffe656f6cd490a9|2019-11-05|bettinaheim|Merge pull request #231: Getting updates from master
48b14649089b8822cbe396857bf7bbfe3c86bb49|2019-11-05|Scott Carda|Allowed the compilation to remain unchanged if a transformation step does not complete successfully.
68f0c466e186abfee12b01d4808b57d552720e6a|2019-11-05|Scott Carda|Added wrapper class around the many monomorphization transformation classes.
5f0986d33b0761da02564b3cfc94d54e2f8fd5e8|2019-11-05|Scott Carda|Added rewrite step for Monomorphization.
e5fff55ee959317b2580ca271588f8ee4ce09d55|2019-11-05|Scott Carda|merged master into feature branch
aadd7cabad54f7848cb31f6ac9bcd39505cad640|2019-11-05|bettinaheim|Support for including rewrite steps defined in .Net dlls into the compilation process (#219)
c7bec0df298ecba0abcf7862c05f74d2a9c663b5|2019-11-05|Scott Carda|Sccarda/generic resolution validation (#224)
d425eeb72415af43521cc9c705535ababe990201|2019-10-31|Bettina Heim|Fix chmod +x issue on macOS and Linux (#229)
6fa2e76ec9ea74fa4991e1655fb7f843b5795ad1|2019-10-30|bettinaheim|VS Code extension adaptions (#228)
fb2e5033badfc089bf942206e4edef731aeff802|2019-10-30|bettinaheim|Proper setup for VS Code extension (#226)
276994aa1fbd39aa8f6d076d6207dfe855af0cdf|2019-10-29|bettinaheim|Working around a deserialization issue (#225)
59b73bfbb85f15e10965a322da57cee98a0d04da|2019-10-28|bettinaheim|Disabling the space as trigger character workaround for VS 16.4 and above (#223)
f397bf67b95c9a15e795c339e963e9d4275084de|2019-10-28|bettinaheim|Exclude references from serialization (#218)
0b4a71b1e70ab450b7ae3d77613396cb5eb15d3f|2019-10-28|bettinaheim|Adaptions for change in VS behavior due to updates  (#222)
d01fc97a5fa7298bcf24e72d68ebebb7150a0fc0|2019-10-28|bettinaheim|Merge pull request #221: Updates from master
d303bd82e1c3481dad1b5de6ef46303670278710|2019-10-28|Scott Carda|Merging fixes
50aa7a2556d873ddf2e943f24057223a7b9943d5|2019-10-28|Scott Carda|merge master into monomorphization
8ab5dce70be788af3fdc56d463d63526ce847ece|2019-10-28|Alan Geller|Added support for the Deprecated attribute in docgen (#215)
874c1a3d6b04acba1f2ba8fa21581cd699db1942|2019-10-25|bettinaheim|Top level node representing a Q# compilation (#217)
919c0116b25e6f0627e64427f47408026abf3c88|2019-10-24|Scott Carda|Bug fix: null lambda was causing expression kind transformations to be disabled. (#216)
a7bcf5399ae6b3a021009930182d3147ea8cfd5e|2019-10-24|Scott Carda|Sccarda/generic partial application (#206)
3c28e49aac4b6b6b91ba37451c314be60bbb0e01|2019-10-22|bettinaheim|Merge pull request #214: Getting updates from master
0db531b8bb6a97fad09a4a02464e43837c585670|2019-10-22|Bettina Heim|getting updates from master
d5014ac69448c92d32fc7e65eba493cc09938227|2019-10-22|bettinaheim|Modification to the type parameter resolutions dictionary (#213)
a97f6efc885878b58d98f073b665a44494229fe6|2019-10-22|bettinaheim|fixing an exception when querying the possible qualifications for attributes on types and callables defined in referenced dlls (#212)
760bb28c642a899aa26f3dfd2abbcbb6ef1fd975|2019-10-21|bettinaheim|Support for deprecated attributes (#210)
70acae82262f03cee8866fdf8739b635d3e44fb5|2019-10-19|Scott Carda|Sccarda/generic to concrete definitions (#197)
564292d0534c021e3e6c04a1eac7ec967aafe03e|2019-10-19|bettinaheim|Package updates (#209)
5d8490cdc2fb58d9801f7980362d62320807fd82|2019-10-19|bettinaheim|Validation for entry points (#204)
be4b9faf9ff3064bdaeaa5189a6a8d7b825048da|2019-10-18|bettinaheim|adding local declarations to the transformation definitions (#207)
865336f6fc31b8c53354e8970aae973e41180725|2019-10-18|bettinaheim|Fixing the perf issues for reading declaration headers (#208)
4a66aec2ad22a363ed2267cf55ae699d0ba4a197|2019-10-15|bettinaheim|Update to .Net Core 3.0 update, including self-contained deployment of the language server (#199)
0f960b7cbe87fc3039e9cb7ef533a90a644eefb7|2019-10-13|bettinaheim|Merge pull request #188: Compiler support for Q# dlls
e3086b36c6b24c373863436bf9ac661585fb7bcd|2019-10-13|Bettina Heim|addressing review comment
98593ec2940dd3521c4fd7cce30fba53ddf4a21f|2019-10-13|Bettina Heim|getting updates from master
30b084ce746e9e438ef86ff0f2a33ea7cf575343|2019-10-10|Bettina Heim|getting updates from master
bb013f2f42b044b6dbe373cafb594dd9f488c19e|2019-10-10|bettinaheim|Proper deserialization of declaration headers with attributes (#193)
e67954f650e9a06552f034fabbf39bfb3284921f|2019-10-10|bettinaheim|Merge pull request #177: tools for classical compiler optimizations
2bd159c49fc10afac84c9ea8d4fc29cddb2a687f|2019-10-10|bettinaheim|Clean-up before merging back to master (#196)
963ae456f19d57c693fef653c4b2a23b3d894f82|2019-10-09|bettinaheim|Merge branch 'master' into features/classicalCompilerOptimizations
e5c5c621d3edeb0ac30cb28eb9bdde332d40f4cc|2019-10-09|bettinaheim|Merge branch 'master' into features/targeting
f694c3c1a2dc4e516e925ad118a36223e769fc81|2019-10-09|bettinaheim|Insert doc comments before declaration attributes (#192)
f67585c917809616933b0010fbb004bf21da1833|2019-10-09|bettinaheim|Merge branch 'master' into features/targeting
0acdf821f218fdd5602d5823834251ca7bfa6f31|2019-10-08|Scott Carda|Sccarda/generic resolution (#190)
13e32852b2ac148649b3ad386911c75de7a663e9|2019-10-07|bettinaheim|Project Templates (#191)
1ef9ddb1a134d5366177bc22748921e23ad85216|2019-10-04|bettinaheim|Merge branch 'master' into features/classicalCompilerOptimizations
b8c528ab0324ac7d9dc15238653239a4c4a48a96|2019-09-27|bettinaheim|Merge branch 'master' into features/targeting
05ffe530f52c716f70c39c60f6b8730f33cc169e|2019-09-27|bettinaheim|Error on conflicting references (#186)
81e21494bb77d72b02371d2c85d126f7248df318|2019-09-27|bettinaheim|fixing the build issue (#187)
5f41fa36027494a0ad5ea3badc18baa8d2014818|2019-09-26|bettinaheim|Integrating handling of Q# dlls into the compiler (#183)
b741560fc33be1df50b4086d683e2967cd8195d7|2019-09-25|bettinaheim|Merge branch 'master' into features/classicalCompilerOptimizations
7e0649ad1685f65f275595fcf489630130974e91|2019-09-24|Bettina Heim|Merge branch 'master' into features/targeting
2075b6886825ff8054bb13861ba0fcffcb11b312|2019-09-16|bettinaheim|Disabling code completion inside comments (#179)
0d37b68d990ddb4235b19c83c2ea50a9dbb344ec|2019-09-12|Rory Soiffer|Rsoiffer/circuit api (#164)
9c9b28788ee78b4e6019a3a37bb8e07578a262a0|2019-09-12|Bettina Heim|Merge branch 'master' into features/classicalCompilerOptimizations
2cdbea00fcd1b684ac3d5518dcdf9257f9a4c7c9|2019-09-12|bettinaheim|Minor restructuring of transformations (#175)
9f712b424b254aef2c79822cda286cf31a56a221|2019-09-11|bettinaheim|Merge pull request #167: Support for CodeCompletion
5a82d5c71bcda75c11ccc954efd59d52e307a431|2019-09-11|bettinaheim|Merge pull request #174: Getting updates from master
9cb0e5dd944d4d4e00fef9cb69712841b440e762|2019-09-11|Bettina Heim|getting latest updates from master
77c94392c220a1079a949b9cc44a0bf8a18d6000|2019-09-10|bettinaheim|Merge pull request #169: Support for declaration attributes
3056e036a2ade4b57a6dda77177674f582a30a7e|2019-09-10|Sarah Marshall|Check that namespace exists before resolving documentation (#171)
f13cf5de36e2fe851338d34e5fb8db8fe4caea9e|2019-09-10|bettinaheim|Clean up to aggregate all core dependencies (#172)
92860a9f5bb3e51d980df0dece67bf68de390fb9|2019-09-10|bettinaheim|Minor edits to doc comments etc
c8867c6fc2176276739d940cbae3b7484f7d6826|2019-09-10|bettinaheim|Support for attributes on declarations - Part II (#168)
8cde83369ab8078cab8c088d94ce41bffabd747b|2019-09-10|Chris Granade|Initial draft for packaging Q# data structures as dlls. (#107)
7764bfe466b64a34f7820f042c7bd3e537440242|2019-09-09|Sarah Marshall|Disable code completion in Visual Studio 16.2 or older; use a workaround in 16.3 (#166)
d7f5d3f80fc31ad43e039cb521a9b4d17f748140|2019-09-06|Sarah Marshall|Various minor bug fixes for code completion (#165)
238f739f6cd91bcdfadb31c01291dc85c3564e5b|2019-09-04|Sarah Marshall|Show completions for named type items (#163)
aaf138f14230d3e4265b8ee72f0d5d526e66b60d|2019-09-04|Sarah Marshall|Hide completions for "private" (underscore-prefixed) global symbols (#162)
d3ba76b0996a27697856050df1ecf2a0d23bef98|2019-09-04|Sarah Marshall|Move EditorCompletion.cs to EditorSupport folder (#161)
348ca62239dc340d788e64dfaa60863685852090|2019-09-04|Sarah Marshall|Delay publishing diagnostics while typing a symbol (#159)
6ca1b4cda0e8204ef21270f7114d28956d528849|2019-09-04|Sarah Marshall|Show completions for conjugations (apply-within blocks) (#160)
d5d612eae7339a5fddd41af48c45ba4a51a0cbc2|2019-09-03|bettinaheim|Merge pull request #158: Getting updates from master
226fd379f705c92c3ca676301a003196544258a4|2019-09-03|Bettina Heim|Merge branch 'master' into beheim/attributes
359fe64208ff7c3f94567b59fb046da35205984c|2019-09-03|bettinaheim|Merge pull request #157: Getting updates from master
903e6d231295ab60f78ea4e79c5f3be86942fa95|2019-09-03|bettinaheim|Merge pull request #156: Getting updates from master
919ab0925f52887ec9d78a9704894465a868ce70|2019-09-03|Bettina Heim|Merge branch 'master' into beheim/codeCompletion
aa6ec4dc53e3e45703a788614d08990cdedc82c7|2019-09-03|Bettina Heim|merging in proper handling of conjugations
a2c1454ffbcb6e1f654c8a8b30944b901a36bd7b|2019-09-03|bettinaheim|Leaving the outer transformation unchanged when generating functor support for conjugations (#152)
92be65ec02f22a794dee7c0e5268b4541fbdb1ec|2019-09-03|bettinaheim|Support for attributes on declarations - Part I (#155)
75537674f11de920e97c118c46aac5647151a884|2019-09-02|Bettina Heim|getting the latest updates from master
ec4b812cdc945c25412a2cb0ccffeca2a2ab0212|2019-09-02|Bettina Heim|two things I missed when merging
44908c9a0589bb6e1707d0ed4d379098417e43b7|2019-09-02|Bettina Heim|getting updates from master
b25d0470bfa979c07bb6c57700b85af2f916ca9f|2019-08-31|bettinaheim|Publishing outdated header and semantic diagnostics until the updates have been computed (#151)
1ee86319aa2cd7836af7b5635d7236d103d7a3ec|2019-08-30|Sarah Marshall|Split the code completion parser into smaller modules (#150)
11ca4864d02199f025e5140ea62686da452d1fa5|2019-08-30|Rory Soiffer|Rsoiffer/pure circuit finding (#125)
7173815bb77d20b7cc7a342e8569b77b5e79e612|2019-08-29|bettinaheim|Naive fix for conjugations (#147)
ab35daa1e630ddf119c4ffd46a5f4622bcaa2f30|2019-08-29|Sarah Marshall|Show only completions for namespace declarations at the top-level scope of a file (#143)
e825a2efc4c14edd45e13732d4d41d5c91d08b5c|2019-08-28|Bettina Heim|minor addition to the doc comment code action
305f3e612fb5e21b20107322106fb0a30f16d425|2019-08-28|Sarah Marshall|Show context-aware completions for statements (#139)
73d6563bcf41899d59bca9f2531508cbeb7d2d58|2019-08-28|bettinaheim|Trim the syntax tree by default (#144)
6d2e4ee1d7c1ed0796ff57369f4f36f35e3a0388|2019-08-26|Sarah Marshall|Show stack trace when logging exceptions in the language server (#142)
fb93e71559dc284f3e0915143813b7ecb7ae56a1|2019-08-24|bettinaheim|Adding a folder with target examples for easy testing (#140)
6b732f3983b9588238eb1dfc8ee91be3e0ee07ff|2019-08-22|bettinaheim|avoid breaking a publicly accessible method (#137)
9c243fd6c4ce304b1c2d227a737418b81e9ba33f|2019-08-21|bettinaheim|Merge pull request #128 from microsoft/features/language
aa96ae923d02f55b7f8d7f1f1d0956c45962fefa|2019-08-21|bettinaheim|giving an error for returning from apply-blocks (#134)
899ebe5ac9528b93c9b0dd53777d531295818440|2019-08-21|Bettina Heim|merging in updates from master
d4db2081bf728951f735601a1acee20f44cc045a|2019-08-20|bettinaheim|Code Action for IndexRange Suggestions (#84) (#124)
a2e8667346c8cb9bf11af546948282cf652831f1|2019-08-18|bettinaheim|Code Action for Removing Unexecuted Code (#76) (#123)
5881a2f2407e331efd7de8df9aab862efa0e17ca|2019-08-18|bettinaheim|Adding simple array item update code action (#91) (#122)
791173ba74924ee1fdf61d2486b3889efa42868d|2019-08-18|bettinaheim|Code Action for Adding Doc Comments (#90) (#121)
8d3de6bfcb72c926921b139dcd75fc0f3af2b04b|2019-08-17|bettinaheim|Add code action for updating deprecated operation characteristics syn… (#120)
466526302b396dbea2196a22442eb019adaac0b3|2019-08-17|bettinaheim|Code Actions for deprecated NOT, AND, and OR (#72) (#119)
15f203044c91ebc8dfb2bea3a3aa4d937c4a7f20|2019-08-17|bettinaheim| Code Action for Replacing Deprecated Unit Type(#73) (#118)
bf00b5d4181d62f688b326fefdd1b8a918aa6e70|2019-08-17|bettinaheim|splitting out code actions and symbol info into their own files (#117)
ee4643c16a57d49598e26b89d52de8ab9b571c45|2019-08-20|Bettina Heim|Merge branch 'master' into features/language
7bafcff49de8b3e53deb702511f57a4f88c2dfce|2019-08-20|bettinaheim|Merging in updates from master (#129)
ab29f94d3fd266861861ffe32ba9480a1d5f41ce|2019-08-20|Sarah Marshall|Show context-aware code completion for expressions (#116)
aba0de271ee05ab815b21be7b8750535d0c4310b|2019-08-20|Rory Soiffer|Fixed a bug that was causing namespaces to be printed incorrectly (#127)
27e9c14706b493b8faabc125b61ae9feb40f32aa|2019-08-19|Rory Soiffer|Rsoiffer/operation inlining (#108)
b58562c3d21a3642378bb74cf0e0bfa5523a0088|2019-08-16|Sarah Marshall|Show part-by-part namespace completions for namespace aliases (#94)
6fbd0c5adf3f9f81f0f58ea54dbace4d1652f793|2019-08-16|bettinaheim|Support for Conjugations as Statements - Part II (#114)
07e4d452c9c619133346bb38bca84bb550d9374c|2019-08-15|Sarah Marshall|Provide context-aware completions for declarations and open directives (#92)
7e3de0876c05ad03bdc5fa02bc6bf4a2efa1f1d4|2019-08-14|bettinaheim|adding missing cases to syntax extensions (#115)
058fa9e9bc5abd4337d6aae646da95940a9709e4|2019-08-14|bettinaheim|Error handling for open-ended ranges (#111)
8bb44a5c44a3f9ab09bc64ca3513ee469532ed2e|2019-08-14|bettinaheim|Support for conjugations as statements - Part1 (#99)
c706a8c63c70e2504c7f705c24fa943b70728c3a|2019-08-12|Sarah Marshall|Ignore whitespace-only lines when determining indentation (#88)
53c54e8fadb6a65bcf64f626f13488fc753dd04c|2019-08-08|Rory Soiffer|Rsoiffer/loop unrolling (#52)
c4b88437e9e68504e9437824db75815f88ce1753|2019-08-08|bettinaheim|removing required framework version from vs templates (#106)
f2eed35014393fa98c55916049ec96c12a672ad7|2019-08-04|Rory Soiffer|Rsoiffer/constant propagation (#49)
ad3b88048634e47b272737acfa99e7be072e84f3|2019-08-03|bettinaheim|Correct range information upon type resolution (#104)
5bb2e051cf50db7638bb6c70624b8bd651ee261f|2019-08-03|bettinaheim|fixing a bug that caused statements once excluded not to be reincluded into the compilation (#102)
4d2d62596e288dc46a0eed7f7677761c09c8e1ac|2019-08-03|Chris Granade|Pack command line compiler as tool. (#96)
979c3ddb9e58e23dfa3f9ccf75c69b94041934aa|2019-07-30|Rory Soiffer|Fixed type inference issues with ITuple active patterns (#95)
b4babbd539b027fc318f5d8ce4723332fa40ee80|2019-07-27|Sarah Marshall|Update code completion branch with new changes from master (#89)
72d2631f4b72d799e2aed313f825989b3c60d2c5|2019-07-27|bettinaheim|Compile time errors for overflowing int and double literals (#87)
b3586cf8739c1d0376f2d31c47f21fe23fa84afb|2019-07-27|Chris Granade|Add install template and new project commands to VS Code extension. (#79)
bdc83490134fb44b5498c90a52d134c3508abc03|2019-07-27|bettinaheim|Handling specialization redeclarations (#85)
3136f60fdbc5d8d4ff0ee1f435133b47f78efd24|2019-07-26|Sarah Marshall|Always log exceptions from file queries in debug mode (#70)
d917055b30d55bc2508c607783fac94f42721e62|2019-07-22|Sarah Marshall|Add previously reviewed PRs to code completion feature branch (#67)
7d953f3712151e2e8c624303cf52f4769a5f2a96|2019-07-22|Sarah Marshall|Show signature help for the first argument (#63)
4b97cc43547ae8a5b67a643f5e594d3658b68fe8|2019-07-21|Sarah Marshall|Add automatic indentation to Visual Studio extension (#60)
9fd56712677546680e4f35ea498e49049b4f8a20|2019-07-21|Chris Granade|Build VS Code dependencies from either pwsh or powershell. (#59)
650cd34bb3d5ea0dd02d5093d0f1eaf332c10f7e|2019-07-20|bettinaheim|fixing a stackoverflow for large files (#55)
578d7f7f4e03f6671e913b77c4df21214502c4e6|2019-07-20|bettinaheim|Fixing vs code extension build script on linux (#56)
032854998fc1e1377926ac25a6fe8a537de4850f|2019-07-19|Andres Paz|Updating QDK to latest version. (#53)
bb0e8a47c013d66c4211af5c48c7bcaa093875cc|2019-07-12|bettinaheim|Fixing doc gen call (#39) (#41)
28ac53342a0e47f02deecac618adbc03a0b4ab26|2019-07-11|Andres Paz|Enhancements to logging in build scripts. (#35)
c6d6e917b22828c8cea2e94183c9a7609a0780d7|2019-07-11|bettinaheim|Adding a note regarding the Area-Language label (#37)
8eed806b451911ff4da9b005ed00762a1ae9d581|2019-07-11|bettinaheim|Updating VS extension to 4.7.2 (#24)
b28aca13169989165f7c93225dc4ff2cd8d4d90e|2019-07-11|bettinaheim|Adding info on reporting security issues (#26)
6209fca9a093cb0fc738694ae1102752747f4c6c|2019-07-11|Sarah Marshall|Add missing word to README (#28)
d34caa084066e770de1f05f49986a2c283aea470|2019-07-10|Andres Paz|Fixing link to new feature. (#25)
b65853c83a5d6da88af4c86cd82c93e7767fa7e5|2019-07-10|bettinaheim|Getting ready for open sourcing! (#23)
cf5ee4aeb089b646cf7cc7aa4c460c43a69b0454|2019-06-07|Microsoft Open Source|Initial commit
1f16a33be83d1407693cb3f4cfd266a1a2218f33|2019-06-07|Microsoft Open Source|Initial commit
97a4859c20b44fcebe46aa07c052498227d3418c|2019-06-07|Microsoft GitHub User|Initial commit